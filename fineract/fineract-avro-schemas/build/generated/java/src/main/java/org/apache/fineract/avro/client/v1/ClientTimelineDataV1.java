/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

package org.apache.fineract.avro.client.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ClientTimelineDataV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, org.apache.fineract.avro.generator.ByteBufferSerializable {
  private static final long serialVersionUID = -1377662876925437793L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ClientTimelineDataV1\",\"namespace\":\"org.apache.fineract.avro.client.v1\",\"fields\":[{\"name\":\"submittedOnDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"submittedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"submittedByFirstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"submittedByLastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activatedOnDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activatedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activatedByFirstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activatedByLastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closedOnDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closedByFirstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closedByLastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ClientTimelineDataV1> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ClientTimelineDataV1> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ClientTimelineDataV1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ClientTimelineDataV1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ClientTimelineDataV1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ClientTimelineDataV1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  @Override
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ClientTimelineDataV1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ClientTimelineDataV1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ClientTimelineDataV1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String submittedOnDate;
  private java.lang.String submittedByUsername;
  private java.lang.String submittedByFirstname;
  private java.lang.String submittedByLastname;
  private java.lang.String activatedOnDate;
  private java.lang.String activatedByUsername;
  private java.lang.String activatedByFirstname;
  private java.lang.String activatedByLastname;
  private java.lang.String closedOnDate;
  private java.lang.String closedByUsername;
  private java.lang.String closedByFirstname;
  private java.lang.String closedByLastname;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ClientTimelineDataV1() {}

  /**
   * All-args constructor.
   * @param submittedOnDate The new value for submittedOnDate
   * @param submittedByUsername The new value for submittedByUsername
   * @param submittedByFirstname The new value for submittedByFirstname
   * @param submittedByLastname The new value for submittedByLastname
   * @param activatedOnDate The new value for activatedOnDate
   * @param activatedByUsername The new value for activatedByUsername
   * @param activatedByFirstname The new value for activatedByFirstname
   * @param activatedByLastname The new value for activatedByLastname
   * @param closedOnDate The new value for closedOnDate
   * @param closedByUsername The new value for closedByUsername
   * @param closedByFirstname The new value for closedByFirstname
   * @param closedByLastname The new value for closedByLastname
   */
  public ClientTimelineDataV1(java.lang.String submittedOnDate, java.lang.String submittedByUsername, java.lang.String submittedByFirstname, java.lang.String submittedByLastname, java.lang.String activatedOnDate, java.lang.String activatedByUsername, java.lang.String activatedByFirstname, java.lang.String activatedByLastname, java.lang.String closedOnDate, java.lang.String closedByUsername, java.lang.String closedByFirstname, java.lang.String closedByLastname) {
    this.submittedOnDate = submittedOnDate;
    this.submittedByUsername = submittedByUsername;
    this.submittedByFirstname = submittedByFirstname;
    this.submittedByLastname = submittedByLastname;
    this.activatedOnDate = activatedOnDate;
    this.activatedByUsername = activatedByUsername;
    this.activatedByFirstname = activatedByFirstname;
    this.activatedByLastname = activatedByLastname;
    this.closedOnDate = closedOnDate;
    this.closedByUsername = closedByUsername;
    this.closedByFirstname = closedByFirstname;
    this.closedByLastname = closedByLastname;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return submittedOnDate;
    case 1: return submittedByUsername;
    case 2: return submittedByFirstname;
    case 3: return submittedByLastname;
    case 4: return activatedOnDate;
    case 5: return activatedByUsername;
    case 6: return activatedByFirstname;
    case 7: return activatedByLastname;
    case 8: return closedOnDate;
    case 9: return closedByUsername;
    case 10: return closedByFirstname;
    case 11: return closedByLastname;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: submittedOnDate = value$ != null ? value$.toString() : null; break;
    case 1: submittedByUsername = value$ != null ? value$.toString() : null; break;
    case 2: submittedByFirstname = value$ != null ? value$.toString() : null; break;
    case 3: submittedByLastname = value$ != null ? value$.toString() : null; break;
    case 4: activatedOnDate = value$ != null ? value$.toString() : null; break;
    case 5: activatedByUsername = value$ != null ? value$.toString() : null; break;
    case 6: activatedByFirstname = value$ != null ? value$.toString() : null; break;
    case 7: activatedByLastname = value$ != null ? value$.toString() : null; break;
    case 8: closedOnDate = value$ != null ? value$.toString() : null; break;
    case 9: closedByUsername = value$ != null ? value$.toString() : null; break;
    case 10: closedByFirstname = value$ != null ? value$.toString() : null; break;
    case 11: closedByLastname = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'submittedOnDate' field.
   * @return The value of the 'submittedOnDate' field.
   */
  public java.lang.String getSubmittedOnDate() {
    return submittedOnDate;
  }


  /**
   * Sets the value of the 'submittedOnDate' field.
   * @param value the value to set.
   */
  public void setSubmittedOnDate(java.lang.String value) {
    this.submittedOnDate = value;
  }

  /**
   * Gets the value of the 'submittedByUsername' field.
   * @return The value of the 'submittedByUsername' field.
   */
  public java.lang.String getSubmittedByUsername() {
    return submittedByUsername;
  }


  /**
   * Sets the value of the 'submittedByUsername' field.
   * @param value the value to set.
   */
  public void setSubmittedByUsername(java.lang.String value) {
    this.submittedByUsername = value;
  }

  /**
   * Gets the value of the 'submittedByFirstname' field.
   * @return The value of the 'submittedByFirstname' field.
   */
  public java.lang.String getSubmittedByFirstname() {
    return submittedByFirstname;
  }


  /**
   * Sets the value of the 'submittedByFirstname' field.
   * @param value the value to set.
   */
  public void setSubmittedByFirstname(java.lang.String value) {
    this.submittedByFirstname = value;
  }

  /**
   * Gets the value of the 'submittedByLastname' field.
   * @return The value of the 'submittedByLastname' field.
   */
  public java.lang.String getSubmittedByLastname() {
    return submittedByLastname;
  }


  /**
   * Sets the value of the 'submittedByLastname' field.
   * @param value the value to set.
   */
  public void setSubmittedByLastname(java.lang.String value) {
    this.submittedByLastname = value;
  }

  /**
   * Gets the value of the 'activatedOnDate' field.
   * @return The value of the 'activatedOnDate' field.
   */
  public java.lang.String getActivatedOnDate() {
    return activatedOnDate;
  }


  /**
   * Sets the value of the 'activatedOnDate' field.
   * @param value the value to set.
   */
  public void setActivatedOnDate(java.lang.String value) {
    this.activatedOnDate = value;
  }

  /**
   * Gets the value of the 'activatedByUsername' field.
   * @return The value of the 'activatedByUsername' field.
   */
  public java.lang.String getActivatedByUsername() {
    return activatedByUsername;
  }


  /**
   * Sets the value of the 'activatedByUsername' field.
   * @param value the value to set.
   */
  public void setActivatedByUsername(java.lang.String value) {
    this.activatedByUsername = value;
  }

  /**
   * Gets the value of the 'activatedByFirstname' field.
   * @return The value of the 'activatedByFirstname' field.
   */
  public java.lang.String getActivatedByFirstname() {
    return activatedByFirstname;
  }


  /**
   * Sets the value of the 'activatedByFirstname' field.
   * @param value the value to set.
   */
  public void setActivatedByFirstname(java.lang.String value) {
    this.activatedByFirstname = value;
  }

  /**
   * Gets the value of the 'activatedByLastname' field.
   * @return The value of the 'activatedByLastname' field.
   */
  public java.lang.String getActivatedByLastname() {
    return activatedByLastname;
  }


  /**
   * Sets the value of the 'activatedByLastname' field.
   * @param value the value to set.
   */
  public void setActivatedByLastname(java.lang.String value) {
    this.activatedByLastname = value;
  }

  /**
   * Gets the value of the 'closedOnDate' field.
   * @return The value of the 'closedOnDate' field.
   */
  public java.lang.String getClosedOnDate() {
    return closedOnDate;
  }


  /**
   * Sets the value of the 'closedOnDate' field.
   * @param value the value to set.
   */
  public void setClosedOnDate(java.lang.String value) {
    this.closedOnDate = value;
  }

  /**
   * Gets the value of the 'closedByUsername' field.
   * @return The value of the 'closedByUsername' field.
   */
  public java.lang.String getClosedByUsername() {
    return closedByUsername;
  }


  /**
   * Sets the value of the 'closedByUsername' field.
   * @param value the value to set.
   */
  public void setClosedByUsername(java.lang.String value) {
    this.closedByUsername = value;
  }

  /**
   * Gets the value of the 'closedByFirstname' field.
   * @return The value of the 'closedByFirstname' field.
   */
  public java.lang.String getClosedByFirstname() {
    return closedByFirstname;
  }


  /**
   * Sets the value of the 'closedByFirstname' field.
   * @param value the value to set.
   */
  public void setClosedByFirstname(java.lang.String value) {
    this.closedByFirstname = value;
  }

  /**
   * Gets the value of the 'closedByLastname' field.
   * @return The value of the 'closedByLastname' field.
   */
  public java.lang.String getClosedByLastname() {
    return closedByLastname;
  }


  /**
   * Sets the value of the 'closedByLastname' field.
   * @param value the value to set.
   */
  public void setClosedByLastname(java.lang.String value) {
    this.closedByLastname = value;
  }

  /**
   * Creates a new ClientTimelineDataV1 RecordBuilder.
   * @return A new ClientTimelineDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder newBuilder() {
    return new org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder();
  }

  /**
   * Creates a new ClientTimelineDataV1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ClientTimelineDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder newBuilder(org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder other) {
    if (other == null) {
      return new org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder(other);
    }
  }

  /**
   * Creates a new ClientTimelineDataV1 RecordBuilder by copying an existing ClientTimelineDataV1 instance.
   * @param other The existing instance to copy.
   * @return A new ClientTimelineDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder newBuilder(org.apache.fineract.avro.client.v1.ClientTimelineDataV1 other) {
    if (other == null) {
      return new org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder(other);
    }
  }

  /**
   * RecordBuilder for ClientTimelineDataV1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ClientTimelineDataV1>
    implements org.apache.avro.data.RecordBuilder<ClientTimelineDataV1> {

    private java.lang.String submittedOnDate;
    private java.lang.String submittedByUsername;
    private java.lang.String submittedByFirstname;
    private java.lang.String submittedByLastname;
    private java.lang.String activatedOnDate;
    private java.lang.String activatedByUsername;
    private java.lang.String activatedByFirstname;
    private java.lang.String activatedByLastname;
    private java.lang.String closedOnDate;
    private java.lang.String closedByUsername;
    private java.lang.String closedByFirstname;
    private java.lang.String closedByLastname;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.submittedOnDate)) {
        this.submittedOnDate = data().deepCopy(fields()[0].schema(), other.submittedOnDate);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.submittedByUsername)) {
        this.submittedByUsername = data().deepCopy(fields()[1].schema(), other.submittedByUsername);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.submittedByFirstname)) {
        this.submittedByFirstname = data().deepCopy(fields()[2].schema(), other.submittedByFirstname);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.submittedByLastname)) {
        this.submittedByLastname = data().deepCopy(fields()[3].schema(), other.submittedByLastname);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.activatedOnDate)) {
        this.activatedOnDate = data().deepCopy(fields()[4].schema(), other.activatedOnDate);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.activatedByUsername)) {
        this.activatedByUsername = data().deepCopy(fields()[5].schema(), other.activatedByUsername);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.activatedByFirstname)) {
        this.activatedByFirstname = data().deepCopy(fields()[6].schema(), other.activatedByFirstname);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.activatedByLastname)) {
        this.activatedByLastname = data().deepCopy(fields()[7].schema(), other.activatedByLastname);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.closedOnDate)) {
        this.closedOnDate = data().deepCopy(fields()[8].schema(), other.closedOnDate);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.closedByUsername)) {
        this.closedByUsername = data().deepCopy(fields()[9].schema(), other.closedByUsername);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.closedByFirstname)) {
        this.closedByFirstname = data().deepCopy(fields()[10].schema(), other.closedByFirstname);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.closedByLastname)) {
        this.closedByLastname = data().deepCopy(fields()[11].schema(), other.closedByLastname);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
    }

    /**
     * Creates a Builder by copying an existing ClientTimelineDataV1 instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.fineract.avro.client.v1.ClientTimelineDataV1 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.submittedOnDate)) {
        this.submittedOnDate = data().deepCopy(fields()[0].schema(), other.submittedOnDate);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.submittedByUsername)) {
        this.submittedByUsername = data().deepCopy(fields()[1].schema(), other.submittedByUsername);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.submittedByFirstname)) {
        this.submittedByFirstname = data().deepCopy(fields()[2].schema(), other.submittedByFirstname);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.submittedByLastname)) {
        this.submittedByLastname = data().deepCopy(fields()[3].schema(), other.submittedByLastname);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.activatedOnDate)) {
        this.activatedOnDate = data().deepCopy(fields()[4].schema(), other.activatedOnDate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.activatedByUsername)) {
        this.activatedByUsername = data().deepCopy(fields()[5].schema(), other.activatedByUsername);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.activatedByFirstname)) {
        this.activatedByFirstname = data().deepCopy(fields()[6].schema(), other.activatedByFirstname);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.activatedByLastname)) {
        this.activatedByLastname = data().deepCopy(fields()[7].schema(), other.activatedByLastname);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.closedOnDate)) {
        this.closedOnDate = data().deepCopy(fields()[8].schema(), other.closedOnDate);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.closedByUsername)) {
        this.closedByUsername = data().deepCopy(fields()[9].schema(), other.closedByUsername);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.closedByFirstname)) {
        this.closedByFirstname = data().deepCopy(fields()[10].schema(), other.closedByFirstname);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.closedByLastname)) {
        this.closedByLastname = data().deepCopy(fields()[11].schema(), other.closedByLastname);
        fieldSetFlags()[11] = true;
      }
    }

    /**
      * Gets the value of the 'submittedOnDate' field.
      * @return The value.
      */
    public java.lang.String getSubmittedOnDate() {
      return submittedOnDate;
    }


    /**
      * Sets the value of the 'submittedOnDate' field.
      * @param value The value of 'submittedOnDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder setSubmittedOnDate(java.lang.String value) {
      validate(fields()[0], value);
      this.submittedOnDate = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'submittedOnDate' field has been set.
      * @return True if the 'submittedOnDate' field has been set, false otherwise.
      */
    public boolean hasSubmittedOnDate() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'submittedOnDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder clearSubmittedOnDate() {
      submittedOnDate = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'submittedByUsername' field.
      * @return The value.
      */
    public java.lang.String getSubmittedByUsername() {
      return submittedByUsername;
    }


    /**
      * Sets the value of the 'submittedByUsername' field.
      * @param value The value of 'submittedByUsername'.
      * @return This builder.
      */
    public org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder setSubmittedByUsername(java.lang.String value) {
      validate(fields()[1], value);
      this.submittedByUsername = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'submittedByUsername' field has been set.
      * @return True if the 'submittedByUsername' field has been set, false otherwise.
      */
    public boolean hasSubmittedByUsername() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'submittedByUsername' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder clearSubmittedByUsername() {
      submittedByUsername = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'submittedByFirstname' field.
      * @return The value.
      */
    public java.lang.String getSubmittedByFirstname() {
      return submittedByFirstname;
    }


    /**
      * Sets the value of the 'submittedByFirstname' field.
      * @param value The value of 'submittedByFirstname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder setSubmittedByFirstname(java.lang.String value) {
      validate(fields()[2], value);
      this.submittedByFirstname = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'submittedByFirstname' field has been set.
      * @return True if the 'submittedByFirstname' field has been set, false otherwise.
      */
    public boolean hasSubmittedByFirstname() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'submittedByFirstname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder clearSubmittedByFirstname() {
      submittedByFirstname = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'submittedByLastname' field.
      * @return The value.
      */
    public java.lang.String getSubmittedByLastname() {
      return submittedByLastname;
    }


    /**
      * Sets the value of the 'submittedByLastname' field.
      * @param value The value of 'submittedByLastname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder setSubmittedByLastname(java.lang.String value) {
      validate(fields()[3], value);
      this.submittedByLastname = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'submittedByLastname' field has been set.
      * @return True if the 'submittedByLastname' field has been set, false otherwise.
      */
    public boolean hasSubmittedByLastname() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'submittedByLastname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder clearSubmittedByLastname() {
      submittedByLastname = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'activatedOnDate' field.
      * @return The value.
      */
    public java.lang.String getActivatedOnDate() {
      return activatedOnDate;
    }


    /**
      * Sets the value of the 'activatedOnDate' field.
      * @param value The value of 'activatedOnDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder setActivatedOnDate(java.lang.String value) {
      validate(fields()[4], value);
      this.activatedOnDate = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'activatedOnDate' field has been set.
      * @return True if the 'activatedOnDate' field has been set, false otherwise.
      */
    public boolean hasActivatedOnDate() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'activatedOnDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder clearActivatedOnDate() {
      activatedOnDate = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'activatedByUsername' field.
      * @return The value.
      */
    public java.lang.String getActivatedByUsername() {
      return activatedByUsername;
    }


    /**
      * Sets the value of the 'activatedByUsername' field.
      * @param value The value of 'activatedByUsername'.
      * @return This builder.
      */
    public org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder setActivatedByUsername(java.lang.String value) {
      validate(fields()[5], value);
      this.activatedByUsername = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'activatedByUsername' field has been set.
      * @return True if the 'activatedByUsername' field has been set, false otherwise.
      */
    public boolean hasActivatedByUsername() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'activatedByUsername' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder clearActivatedByUsername() {
      activatedByUsername = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'activatedByFirstname' field.
      * @return The value.
      */
    public java.lang.String getActivatedByFirstname() {
      return activatedByFirstname;
    }


    /**
      * Sets the value of the 'activatedByFirstname' field.
      * @param value The value of 'activatedByFirstname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder setActivatedByFirstname(java.lang.String value) {
      validate(fields()[6], value);
      this.activatedByFirstname = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'activatedByFirstname' field has been set.
      * @return True if the 'activatedByFirstname' field has been set, false otherwise.
      */
    public boolean hasActivatedByFirstname() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'activatedByFirstname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder clearActivatedByFirstname() {
      activatedByFirstname = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'activatedByLastname' field.
      * @return The value.
      */
    public java.lang.String getActivatedByLastname() {
      return activatedByLastname;
    }


    /**
      * Sets the value of the 'activatedByLastname' field.
      * @param value The value of 'activatedByLastname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder setActivatedByLastname(java.lang.String value) {
      validate(fields()[7], value);
      this.activatedByLastname = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'activatedByLastname' field has been set.
      * @return True if the 'activatedByLastname' field has been set, false otherwise.
      */
    public boolean hasActivatedByLastname() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'activatedByLastname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder clearActivatedByLastname() {
      activatedByLastname = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'closedOnDate' field.
      * @return The value.
      */
    public java.lang.String getClosedOnDate() {
      return closedOnDate;
    }


    /**
      * Sets the value of the 'closedOnDate' field.
      * @param value The value of 'closedOnDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder setClosedOnDate(java.lang.String value) {
      validate(fields()[8], value);
      this.closedOnDate = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'closedOnDate' field has been set.
      * @return True if the 'closedOnDate' field has been set, false otherwise.
      */
    public boolean hasClosedOnDate() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'closedOnDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder clearClosedOnDate() {
      closedOnDate = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'closedByUsername' field.
      * @return The value.
      */
    public java.lang.String getClosedByUsername() {
      return closedByUsername;
    }


    /**
      * Sets the value of the 'closedByUsername' field.
      * @param value The value of 'closedByUsername'.
      * @return This builder.
      */
    public org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder setClosedByUsername(java.lang.String value) {
      validate(fields()[9], value);
      this.closedByUsername = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'closedByUsername' field has been set.
      * @return True if the 'closedByUsername' field has been set, false otherwise.
      */
    public boolean hasClosedByUsername() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'closedByUsername' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder clearClosedByUsername() {
      closedByUsername = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'closedByFirstname' field.
      * @return The value.
      */
    public java.lang.String getClosedByFirstname() {
      return closedByFirstname;
    }


    /**
      * Sets the value of the 'closedByFirstname' field.
      * @param value The value of 'closedByFirstname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder setClosedByFirstname(java.lang.String value) {
      validate(fields()[10], value);
      this.closedByFirstname = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'closedByFirstname' field has been set.
      * @return True if the 'closedByFirstname' field has been set, false otherwise.
      */
    public boolean hasClosedByFirstname() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'closedByFirstname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder clearClosedByFirstname() {
      closedByFirstname = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'closedByLastname' field.
      * @return The value.
      */
    public java.lang.String getClosedByLastname() {
      return closedByLastname;
    }


    /**
      * Sets the value of the 'closedByLastname' field.
      * @param value The value of 'closedByLastname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder setClosedByLastname(java.lang.String value) {
      validate(fields()[11], value);
      this.closedByLastname = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'closedByLastname' field has been set.
      * @return True if the 'closedByLastname' field has been set, false otherwise.
      */
    public boolean hasClosedByLastname() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'closedByLastname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.client.v1.ClientTimelineDataV1.Builder clearClosedByLastname() {
      closedByLastname = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ClientTimelineDataV1 build() {
      try {
        ClientTimelineDataV1 record = new ClientTimelineDataV1();
        record.submittedOnDate = fieldSetFlags()[0] ? this.submittedOnDate : (java.lang.String) defaultValue(fields()[0]);
        record.submittedByUsername = fieldSetFlags()[1] ? this.submittedByUsername : (java.lang.String) defaultValue(fields()[1]);
        record.submittedByFirstname = fieldSetFlags()[2] ? this.submittedByFirstname : (java.lang.String) defaultValue(fields()[2]);
        record.submittedByLastname = fieldSetFlags()[3] ? this.submittedByLastname : (java.lang.String) defaultValue(fields()[3]);
        record.activatedOnDate = fieldSetFlags()[4] ? this.activatedOnDate : (java.lang.String) defaultValue(fields()[4]);
        record.activatedByUsername = fieldSetFlags()[5] ? this.activatedByUsername : (java.lang.String) defaultValue(fields()[5]);
        record.activatedByFirstname = fieldSetFlags()[6] ? this.activatedByFirstname : (java.lang.String) defaultValue(fields()[6]);
        record.activatedByLastname = fieldSetFlags()[7] ? this.activatedByLastname : (java.lang.String) defaultValue(fields()[7]);
        record.closedOnDate = fieldSetFlags()[8] ? this.closedOnDate : (java.lang.String) defaultValue(fields()[8]);
        record.closedByUsername = fieldSetFlags()[9] ? this.closedByUsername : (java.lang.String) defaultValue(fields()[9]);
        record.closedByFirstname = fieldSetFlags()[10] ? this.closedByFirstname : (java.lang.String) defaultValue(fields()[10]);
        record.closedByLastname = fieldSetFlags()[11] ? this.closedByLastname : (java.lang.String) defaultValue(fields()[11]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ClientTimelineDataV1>
    WRITER$ = (org.apache.avro.io.DatumWriter<ClientTimelineDataV1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ClientTimelineDataV1>
    READER$ = (org.apache.avro.io.DatumReader<ClientTimelineDataV1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.submittedOnDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.submittedOnDate);
    }

    if (this.submittedByUsername == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.submittedByUsername);
    }

    if (this.submittedByFirstname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.submittedByFirstname);
    }

    if (this.submittedByLastname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.submittedByLastname);
    }

    if (this.activatedOnDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.activatedOnDate);
    }

    if (this.activatedByUsername == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.activatedByUsername);
    }

    if (this.activatedByFirstname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.activatedByFirstname);
    }

    if (this.activatedByLastname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.activatedByLastname);
    }

    if (this.closedOnDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.closedOnDate);
    }

    if (this.closedByUsername == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.closedByUsername);
    }

    if (this.closedByFirstname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.closedByFirstname);
    }

    if (this.closedByLastname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.closedByLastname);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.submittedOnDate = null;
      } else {
        this.submittedOnDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.submittedByUsername = null;
      } else {
        this.submittedByUsername = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.submittedByFirstname = null;
      } else {
        this.submittedByFirstname = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.submittedByLastname = null;
      } else {
        this.submittedByLastname = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.activatedOnDate = null;
      } else {
        this.activatedOnDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.activatedByUsername = null;
      } else {
        this.activatedByUsername = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.activatedByFirstname = null;
      } else {
        this.activatedByFirstname = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.activatedByLastname = null;
      } else {
        this.activatedByLastname = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.closedOnDate = null;
      } else {
        this.closedOnDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.closedByUsername = null;
      } else {
        this.closedByUsername = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.closedByFirstname = null;
      } else {
        this.closedByFirstname = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.closedByLastname = null;
      } else {
        this.closedByLastname = in.readString();
      }

    } else {
      for (int i = 0; i < 12; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.submittedOnDate = null;
          } else {
            this.submittedOnDate = in.readString();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.submittedByUsername = null;
          } else {
            this.submittedByUsername = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.submittedByFirstname = null;
          } else {
            this.submittedByFirstname = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.submittedByLastname = null;
          } else {
            this.submittedByLastname = in.readString();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.activatedOnDate = null;
          } else {
            this.activatedOnDate = in.readString();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.activatedByUsername = null;
          } else {
            this.activatedByUsername = in.readString();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.activatedByFirstname = null;
          } else {
            this.activatedByFirstname = in.readString();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.activatedByLastname = null;
          } else {
            this.activatedByLastname = in.readString();
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.closedOnDate = null;
          } else {
            this.closedOnDate = in.readString();
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.closedByUsername = null;
          } else {
            this.closedByUsername = in.readString();
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.closedByFirstname = null;
          } else {
            this.closedByFirstname = in.readString();
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.closedByLastname = null;
          } else {
            this.closedByLastname = in.readString();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










