/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

package org.apache.fineract.avro.savings.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class SavingsAccountStatusEnumDataV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, org.apache.fineract.avro.generator.ByteBufferSerializable {
  private static final long serialVersionUID = 4465504525655557217L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SavingsAccountStatusEnumDataV1\",\"namespace\":\"org.apache.fineract.avro.savings.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"submittedAndPendingApproval\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"approved\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"rejected\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"withdrawnByApplicant\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"active\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"closed\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"prematureClosed\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"transferInProgress\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"transferOnHold\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"matured\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SavingsAccountStatusEnumDataV1> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SavingsAccountStatusEnumDataV1> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<SavingsAccountStatusEnumDataV1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<SavingsAccountStatusEnumDataV1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<SavingsAccountStatusEnumDataV1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this SavingsAccountStatusEnumDataV1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  @Override
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a SavingsAccountStatusEnumDataV1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a SavingsAccountStatusEnumDataV1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static SavingsAccountStatusEnumDataV1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.Integer id;
  private java.lang.String code;
  private java.lang.String value;
  private java.lang.Boolean submittedAndPendingApproval;
  private java.lang.Boolean approved;
  private java.lang.Boolean rejected;
  private java.lang.Boolean withdrawnByApplicant;
  private java.lang.Boolean active;
  private java.lang.Boolean closed;
  private java.lang.Boolean prematureClosed;
  private java.lang.Boolean transferInProgress;
  private java.lang.Boolean transferOnHold;
  private java.lang.Boolean matured;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SavingsAccountStatusEnumDataV1() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param code The new value for code
   * @param value The new value for value
   * @param submittedAndPendingApproval The new value for submittedAndPendingApproval
   * @param approved The new value for approved
   * @param rejected The new value for rejected
   * @param withdrawnByApplicant The new value for withdrawnByApplicant
   * @param active The new value for active
   * @param closed The new value for closed
   * @param prematureClosed The new value for prematureClosed
   * @param transferInProgress The new value for transferInProgress
   * @param transferOnHold The new value for transferOnHold
   * @param matured The new value for matured
   */
  public SavingsAccountStatusEnumDataV1(java.lang.Integer id, java.lang.String code, java.lang.String value, java.lang.Boolean submittedAndPendingApproval, java.lang.Boolean approved, java.lang.Boolean rejected, java.lang.Boolean withdrawnByApplicant, java.lang.Boolean active, java.lang.Boolean closed, java.lang.Boolean prematureClosed, java.lang.Boolean transferInProgress, java.lang.Boolean transferOnHold, java.lang.Boolean matured) {
    this.id = id;
    this.code = code;
    this.value = value;
    this.submittedAndPendingApproval = submittedAndPendingApproval;
    this.approved = approved;
    this.rejected = rejected;
    this.withdrawnByApplicant = withdrawnByApplicant;
    this.active = active;
    this.closed = closed;
    this.prematureClosed = prematureClosed;
    this.transferInProgress = transferInProgress;
    this.transferOnHold = transferOnHold;
    this.matured = matured;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return code;
    case 2: return value;
    case 3: return submittedAndPendingApproval;
    case 4: return approved;
    case 5: return rejected;
    case 6: return withdrawnByApplicant;
    case 7: return active;
    case 8: return closed;
    case 9: return prematureClosed;
    case 10: return transferInProgress;
    case 11: return transferOnHold;
    case 12: return matured;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Integer)value$; break;
    case 1: code = value$ != null ? value$.toString() : null; break;
    case 2: value = value$ != null ? value$.toString() : null; break;
    case 3: submittedAndPendingApproval = (java.lang.Boolean)value$; break;
    case 4: approved = (java.lang.Boolean)value$; break;
    case 5: rejected = (java.lang.Boolean)value$; break;
    case 6: withdrawnByApplicant = (java.lang.Boolean)value$; break;
    case 7: active = (java.lang.Boolean)value$; break;
    case 8: closed = (java.lang.Boolean)value$; break;
    case 9: prematureClosed = (java.lang.Boolean)value$; break;
    case 10: transferInProgress = (java.lang.Boolean)value$; break;
    case 11: transferOnHold = (java.lang.Boolean)value$; break;
    case 12: matured = (java.lang.Boolean)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Integer getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Integer value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'code' field.
   * @return The value of the 'code' field.
   */
  public java.lang.String getCode() {
    return code;
  }


  /**
   * Sets the value of the 'code' field.
   * @param value the value to set.
   */
  public void setCode(java.lang.String value) {
    this.code = value;
  }

  /**
   * Gets the value of the 'value' field.
   * @return The value of the 'value' field.
   */
  public java.lang.String getValue() {
    return value;
  }


  /**
   * Sets the value of the 'value' field.
   * @param value the value to set.
   */
  public void setValue(java.lang.String value) {
    this.value = value;
  }

  /**
   * Gets the value of the 'submittedAndPendingApproval' field.
   * @return The value of the 'submittedAndPendingApproval' field.
   */
  public java.lang.Boolean getSubmittedAndPendingApproval() {
    return submittedAndPendingApproval;
  }


  /**
   * Sets the value of the 'submittedAndPendingApproval' field.
   * @param value the value to set.
   */
  public void setSubmittedAndPendingApproval(java.lang.Boolean value) {
    this.submittedAndPendingApproval = value;
  }

  /**
   * Gets the value of the 'approved' field.
   * @return The value of the 'approved' field.
   */
  public java.lang.Boolean getApproved() {
    return approved;
  }


  /**
   * Sets the value of the 'approved' field.
   * @param value the value to set.
   */
  public void setApproved(java.lang.Boolean value) {
    this.approved = value;
  }

  /**
   * Gets the value of the 'rejected' field.
   * @return The value of the 'rejected' field.
   */
  public java.lang.Boolean getRejected() {
    return rejected;
  }


  /**
   * Sets the value of the 'rejected' field.
   * @param value the value to set.
   */
  public void setRejected(java.lang.Boolean value) {
    this.rejected = value;
  }

  /**
   * Gets the value of the 'withdrawnByApplicant' field.
   * @return The value of the 'withdrawnByApplicant' field.
   */
  public java.lang.Boolean getWithdrawnByApplicant() {
    return withdrawnByApplicant;
  }


  /**
   * Sets the value of the 'withdrawnByApplicant' field.
   * @param value the value to set.
   */
  public void setWithdrawnByApplicant(java.lang.Boolean value) {
    this.withdrawnByApplicant = value;
  }

  /**
   * Gets the value of the 'active' field.
   * @return The value of the 'active' field.
   */
  public java.lang.Boolean getActive() {
    return active;
  }


  /**
   * Sets the value of the 'active' field.
   * @param value the value to set.
   */
  public void setActive(java.lang.Boolean value) {
    this.active = value;
  }

  /**
   * Gets the value of the 'closed' field.
   * @return The value of the 'closed' field.
   */
  public java.lang.Boolean getClosed() {
    return closed;
  }


  /**
   * Sets the value of the 'closed' field.
   * @param value the value to set.
   */
  public void setClosed(java.lang.Boolean value) {
    this.closed = value;
  }

  /**
   * Gets the value of the 'prematureClosed' field.
   * @return The value of the 'prematureClosed' field.
   */
  public java.lang.Boolean getPrematureClosed() {
    return prematureClosed;
  }


  /**
   * Sets the value of the 'prematureClosed' field.
   * @param value the value to set.
   */
  public void setPrematureClosed(java.lang.Boolean value) {
    this.prematureClosed = value;
  }

  /**
   * Gets the value of the 'transferInProgress' field.
   * @return The value of the 'transferInProgress' field.
   */
  public java.lang.Boolean getTransferInProgress() {
    return transferInProgress;
  }


  /**
   * Sets the value of the 'transferInProgress' field.
   * @param value the value to set.
   */
  public void setTransferInProgress(java.lang.Boolean value) {
    this.transferInProgress = value;
  }

  /**
   * Gets the value of the 'transferOnHold' field.
   * @return The value of the 'transferOnHold' field.
   */
  public java.lang.Boolean getTransferOnHold() {
    return transferOnHold;
  }


  /**
   * Sets the value of the 'transferOnHold' field.
   * @param value the value to set.
   */
  public void setTransferOnHold(java.lang.Boolean value) {
    this.transferOnHold = value;
  }

  /**
   * Gets the value of the 'matured' field.
   * @return The value of the 'matured' field.
   */
  public java.lang.Boolean getMatured() {
    return matured;
  }


  /**
   * Sets the value of the 'matured' field.
   * @param value the value to set.
   */
  public void setMatured(java.lang.Boolean value) {
    this.matured = value;
  }

  /**
   * Creates a new SavingsAccountStatusEnumDataV1 RecordBuilder.
   * @return A new SavingsAccountStatusEnumDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder newBuilder() {
    return new org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder();
  }

  /**
   * Creates a new SavingsAccountStatusEnumDataV1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SavingsAccountStatusEnumDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder newBuilder(org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder other) {
    if (other == null) {
      return new org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder(other);
    }
  }

  /**
   * Creates a new SavingsAccountStatusEnumDataV1 RecordBuilder by copying an existing SavingsAccountStatusEnumDataV1 instance.
   * @param other The existing instance to copy.
   * @return A new SavingsAccountStatusEnumDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder newBuilder(org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1 other) {
    if (other == null) {
      return new org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder(other);
    }
  }

  /**
   * RecordBuilder for SavingsAccountStatusEnumDataV1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SavingsAccountStatusEnumDataV1>
    implements org.apache.avro.data.RecordBuilder<SavingsAccountStatusEnumDataV1> {

    private java.lang.Integer id;
    private java.lang.String code;
    private java.lang.String value;
    private java.lang.Boolean submittedAndPendingApproval;
    private java.lang.Boolean approved;
    private java.lang.Boolean rejected;
    private java.lang.Boolean withdrawnByApplicant;
    private java.lang.Boolean active;
    private java.lang.Boolean closed;
    private java.lang.Boolean prematureClosed;
    private java.lang.Boolean transferInProgress;
    private java.lang.Boolean transferOnHold;
    private java.lang.Boolean matured;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.code)) {
        this.code = data().deepCopy(fields()[1].schema(), other.code);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.value)) {
        this.value = data().deepCopy(fields()[2].schema(), other.value);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.submittedAndPendingApproval)) {
        this.submittedAndPendingApproval = data().deepCopy(fields()[3].schema(), other.submittedAndPendingApproval);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.approved)) {
        this.approved = data().deepCopy(fields()[4].schema(), other.approved);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.rejected)) {
        this.rejected = data().deepCopy(fields()[5].schema(), other.rejected);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.withdrawnByApplicant)) {
        this.withdrawnByApplicant = data().deepCopy(fields()[6].schema(), other.withdrawnByApplicant);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.active)) {
        this.active = data().deepCopy(fields()[7].schema(), other.active);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.closed)) {
        this.closed = data().deepCopy(fields()[8].schema(), other.closed);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.prematureClosed)) {
        this.prematureClosed = data().deepCopy(fields()[9].schema(), other.prematureClosed);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.transferInProgress)) {
        this.transferInProgress = data().deepCopy(fields()[10].schema(), other.transferInProgress);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.transferOnHold)) {
        this.transferOnHold = data().deepCopy(fields()[11].schema(), other.transferOnHold);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.matured)) {
        this.matured = data().deepCopy(fields()[12].schema(), other.matured);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
    }

    /**
     * Creates a Builder by copying an existing SavingsAccountStatusEnumDataV1 instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.code)) {
        this.code = data().deepCopy(fields()[1].schema(), other.code);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.value)) {
        this.value = data().deepCopy(fields()[2].schema(), other.value);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.submittedAndPendingApproval)) {
        this.submittedAndPendingApproval = data().deepCopy(fields()[3].schema(), other.submittedAndPendingApproval);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.approved)) {
        this.approved = data().deepCopy(fields()[4].schema(), other.approved);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.rejected)) {
        this.rejected = data().deepCopy(fields()[5].schema(), other.rejected);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.withdrawnByApplicant)) {
        this.withdrawnByApplicant = data().deepCopy(fields()[6].schema(), other.withdrawnByApplicant);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.active)) {
        this.active = data().deepCopy(fields()[7].schema(), other.active);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.closed)) {
        this.closed = data().deepCopy(fields()[8].schema(), other.closed);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.prematureClosed)) {
        this.prematureClosed = data().deepCopy(fields()[9].schema(), other.prematureClosed);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.transferInProgress)) {
        this.transferInProgress = data().deepCopy(fields()[10].schema(), other.transferInProgress);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.transferOnHold)) {
        this.transferOnHold = data().deepCopy(fields()[11].schema(), other.transferOnHold);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.matured)) {
        this.matured = data().deepCopy(fields()[12].schema(), other.matured);
        fieldSetFlags()[12] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Integer getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder setId(java.lang.Integer value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'code' field.
      * @return The value.
      */
    public java.lang.String getCode() {
      return code;
    }


    /**
      * Sets the value of the 'code' field.
      * @param value The value of 'code'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder setCode(java.lang.String value) {
      validate(fields()[1], value);
      this.code = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'code' field has been set.
      * @return True if the 'code' field has been set, false otherwise.
      */
    public boolean hasCode() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'code' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder clearCode() {
      code = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'value' field.
      * @return The value.
      */
    public java.lang.String getValue() {
      return value;
    }


    /**
      * Sets the value of the 'value' field.
      * @param value The value of 'value'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder setValue(java.lang.String value) {
      validate(fields()[2], value);
      this.value = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'value' field has been set.
      * @return True if the 'value' field has been set, false otherwise.
      */
    public boolean hasValue() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'value' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder clearValue() {
      value = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'submittedAndPendingApproval' field.
      * @return The value.
      */
    public java.lang.Boolean getSubmittedAndPendingApproval() {
      return submittedAndPendingApproval;
    }


    /**
      * Sets the value of the 'submittedAndPendingApproval' field.
      * @param value The value of 'submittedAndPendingApproval'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder setSubmittedAndPendingApproval(java.lang.Boolean value) {
      validate(fields()[3], value);
      this.submittedAndPendingApproval = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'submittedAndPendingApproval' field has been set.
      * @return True if the 'submittedAndPendingApproval' field has been set, false otherwise.
      */
    public boolean hasSubmittedAndPendingApproval() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'submittedAndPendingApproval' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder clearSubmittedAndPendingApproval() {
      submittedAndPendingApproval = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'approved' field.
      * @return The value.
      */
    public java.lang.Boolean getApproved() {
      return approved;
    }


    /**
      * Sets the value of the 'approved' field.
      * @param value The value of 'approved'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder setApproved(java.lang.Boolean value) {
      validate(fields()[4], value);
      this.approved = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'approved' field has been set.
      * @return True if the 'approved' field has been set, false otherwise.
      */
    public boolean hasApproved() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'approved' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder clearApproved() {
      approved = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'rejected' field.
      * @return The value.
      */
    public java.lang.Boolean getRejected() {
      return rejected;
    }


    /**
      * Sets the value of the 'rejected' field.
      * @param value The value of 'rejected'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder setRejected(java.lang.Boolean value) {
      validate(fields()[5], value);
      this.rejected = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'rejected' field has been set.
      * @return True if the 'rejected' field has been set, false otherwise.
      */
    public boolean hasRejected() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'rejected' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder clearRejected() {
      rejected = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'withdrawnByApplicant' field.
      * @return The value.
      */
    public java.lang.Boolean getWithdrawnByApplicant() {
      return withdrawnByApplicant;
    }


    /**
      * Sets the value of the 'withdrawnByApplicant' field.
      * @param value The value of 'withdrawnByApplicant'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder setWithdrawnByApplicant(java.lang.Boolean value) {
      validate(fields()[6], value);
      this.withdrawnByApplicant = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'withdrawnByApplicant' field has been set.
      * @return True if the 'withdrawnByApplicant' field has been set, false otherwise.
      */
    public boolean hasWithdrawnByApplicant() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'withdrawnByApplicant' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder clearWithdrawnByApplicant() {
      withdrawnByApplicant = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'active' field.
      * @return The value.
      */
    public java.lang.Boolean getActive() {
      return active;
    }


    /**
      * Sets the value of the 'active' field.
      * @param value The value of 'active'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder setActive(java.lang.Boolean value) {
      validate(fields()[7], value);
      this.active = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'active' field has been set.
      * @return True if the 'active' field has been set, false otherwise.
      */
    public boolean hasActive() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'active' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder clearActive() {
      active = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'closed' field.
      * @return The value.
      */
    public java.lang.Boolean getClosed() {
      return closed;
    }


    /**
      * Sets the value of the 'closed' field.
      * @param value The value of 'closed'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder setClosed(java.lang.Boolean value) {
      validate(fields()[8], value);
      this.closed = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'closed' field has been set.
      * @return True if the 'closed' field has been set, false otherwise.
      */
    public boolean hasClosed() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'closed' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder clearClosed() {
      closed = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'prematureClosed' field.
      * @return The value.
      */
    public java.lang.Boolean getPrematureClosed() {
      return prematureClosed;
    }


    /**
      * Sets the value of the 'prematureClosed' field.
      * @param value The value of 'prematureClosed'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder setPrematureClosed(java.lang.Boolean value) {
      validate(fields()[9], value);
      this.prematureClosed = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'prematureClosed' field has been set.
      * @return True if the 'prematureClosed' field has been set, false otherwise.
      */
    public boolean hasPrematureClosed() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'prematureClosed' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder clearPrematureClosed() {
      prematureClosed = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'transferInProgress' field.
      * @return The value.
      */
    public java.lang.Boolean getTransferInProgress() {
      return transferInProgress;
    }


    /**
      * Sets the value of the 'transferInProgress' field.
      * @param value The value of 'transferInProgress'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder setTransferInProgress(java.lang.Boolean value) {
      validate(fields()[10], value);
      this.transferInProgress = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'transferInProgress' field has been set.
      * @return True if the 'transferInProgress' field has been set, false otherwise.
      */
    public boolean hasTransferInProgress() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'transferInProgress' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder clearTransferInProgress() {
      transferInProgress = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'transferOnHold' field.
      * @return The value.
      */
    public java.lang.Boolean getTransferOnHold() {
      return transferOnHold;
    }


    /**
      * Sets the value of the 'transferOnHold' field.
      * @param value The value of 'transferOnHold'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder setTransferOnHold(java.lang.Boolean value) {
      validate(fields()[11], value);
      this.transferOnHold = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'transferOnHold' field has been set.
      * @return True if the 'transferOnHold' field has been set, false otherwise.
      */
    public boolean hasTransferOnHold() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'transferOnHold' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder clearTransferOnHold() {
      transferOnHold = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'matured' field.
      * @return The value.
      */
    public java.lang.Boolean getMatured() {
      return matured;
    }


    /**
      * Sets the value of the 'matured' field.
      * @param value The value of 'matured'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder setMatured(java.lang.Boolean value) {
      validate(fields()[12], value);
      this.matured = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'matured' field has been set.
      * @return True if the 'matured' field has been set, false otherwise.
      */
    public boolean hasMatured() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'matured' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountStatusEnumDataV1.Builder clearMatured() {
      matured = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SavingsAccountStatusEnumDataV1 build() {
      try {
        SavingsAccountStatusEnumDataV1 record = new SavingsAccountStatusEnumDataV1();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Integer) defaultValue(fields()[0]);
        record.code = fieldSetFlags()[1] ? this.code : (java.lang.String) defaultValue(fields()[1]);
        record.value = fieldSetFlags()[2] ? this.value : (java.lang.String) defaultValue(fields()[2]);
        record.submittedAndPendingApproval = fieldSetFlags()[3] ? this.submittedAndPendingApproval : (java.lang.Boolean) defaultValue(fields()[3]);
        record.approved = fieldSetFlags()[4] ? this.approved : (java.lang.Boolean) defaultValue(fields()[4]);
        record.rejected = fieldSetFlags()[5] ? this.rejected : (java.lang.Boolean) defaultValue(fields()[5]);
        record.withdrawnByApplicant = fieldSetFlags()[6] ? this.withdrawnByApplicant : (java.lang.Boolean) defaultValue(fields()[6]);
        record.active = fieldSetFlags()[7] ? this.active : (java.lang.Boolean) defaultValue(fields()[7]);
        record.closed = fieldSetFlags()[8] ? this.closed : (java.lang.Boolean) defaultValue(fields()[8]);
        record.prematureClosed = fieldSetFlags()[9] ? this.prematureClosed : (java.lang.Boolean) defaultValue(fields()[9]);
        record.transferInProgress = fieldSetFlags()[10] ? this.transferInProgress : (java.lang.Boolean) defaultValue(fields()[10]);
        record.transferOnHold = fieldSetFlags()[11] ? this.transferOnHold : (java.lang.Boolean) defaultValue(fields()[11]);
        record.matured = fieldSetFlags()[12] ? this.matured : (java.lang.Boolean) defaultValue(fields()[12]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SavingsAccountStatusEnumDataV1>
    WRITER$ = (org.apache.avro.io.DatumWriter<SavingsAccountStatusEnumDataV1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SavingsAccountStatusEnumDataV1>
    READER$ = (org.apache.avro.io.DatumReader<SavingsAccountStatusEnumDataV1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.id);
    }

    if (this.code == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.code);
    }

    if (this.value == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.value);
    }

    if (this.submittedAndPendingApproval == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.submittedAndPendingApproval);
    }

    if (this.approved == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.approved);
    }

    if (this.rejected == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.rejected);
    }

    if (this.withdrawnByApplicant == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.withdrawnByApplicant);
    }

    if (this.active == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.active);
    }

    if (this.closed == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.closed);
    }

    if (this.prematureClosed == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.prematureClosed);
    }

    if (this.transferInProgress == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.transferInProgress);
    }

    if (this.transferOnHold == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.transferOnHold);
    }

    if (this.matured == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.matured);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.id = null;
      } else {
        this.id = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.code = null;
      } else {
        this.code = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.value = null;
      } else {
        this.value = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.submittedAndPendingApproval = null;
      } else {
        this.submittedAndPendingApproval = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.approved = null;
      } else {
        this.approved = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.rejected = null;
      } else {
        this.rejected = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.withdrawnByApplicant = null;
      } else {
        this.withdrawnByApplicant = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.active = null;
      } else {
        this.active = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.closed = null;
      } else {
        this.closed = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.prematureClosed = null;
      } else {
        this.prematureClosed = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.transferInProgress = null;
      } else {
        this.transferInProgress = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.transferOnHold = null;
      } else {
        this.transferOnHold = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.matured = null;
      } else {
        this.matured = in.readBoolean();
      }

    } else {
      for (int i = 0; i < 13; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.id = null;
          } else {
            this.id = in.readInt();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.code = null;
          } else {
            this.code = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.value = null;
          } else {
            this.value = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.submittedAndPendingApproval = null;
          } else {
            this.submittedAndPendingApproval = in.readBoolean();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.approved = null;
          } else {
            this.approved = in.readBoolean();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.rejected = null;
          } else {
            this.rejected = in.readBoolean();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.withdrawnByApplicant = null;
          } else {
            this.withdrawnByApplicant = in.readBoolean();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.active = null;
          } else {
            this.active = in.readBoolean();
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.closed = null;
          } else {
            this.closed = in.readBoolean();
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.prematureClosed = null;
          } else {
            this.prematureClosed = in.readBoolean();
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.transferInProgress = null;
          } else {
            this.transferInProgress = in.readBoolean();
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.transferOnHold = null;
          } else {
            this.transferOnHold = in.readBoolean();
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.matured = null;
          } else {
            this.matured = in.readBoolean();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










