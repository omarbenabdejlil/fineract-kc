/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

package org.apache.fineract.avro.loan.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class LoanChargeDataV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, org.apache.fineract.avro.generator.ByteBufferSerializable {
  private static final long serialVersionUID = -1583190025140076865L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LoanChargeDataV1\",\"namespace\":\"org.apache.fineract.avro.loan.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"chargeId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"chargeTimeType\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"EnumOptionDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"dueDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"chargeCalculationType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"percentage\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"amountPercentageAppliedTo\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"currency\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CurrencyDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"decimalPlaces\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"inMultiplesOf\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"displaySymbol\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nameCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"displayLabel\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"amount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"amountPaid\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"amountWaived\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"amountWrittenOff\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"amountOutstanding\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"amountOrPercentage\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"chargeOptions\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ChargeDataV1\",\"namespace\":\"org.apache.fineract.avro.portfolio.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"active\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"penalty\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"freeWithdrawal\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"freeWithdrawalChargeFrequency\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"restartFrequency\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"restartFrequencyEnum\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"isPaymentType\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"paymentTypeOptions\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PaymentTypeDataV1\",\"namespace\":\"org.apache.fineract.avro.payment.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isCashPayment\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"position\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"codeName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isSystemDefined\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"currency\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.CurrencyDataV1\"],\"default\":null},{\"name\":\"amount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"chargeTimeType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"chargeAppliesTo\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"chargeCalculationType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"chargePaymentMode\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"feeOnMonthDay\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"feeInterval\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"minCap\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"maxCap\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"feeFrequency\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"incomeOrLiabilityAccount\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GLAccountDataV1\",\"namespace\":\"org.apache.fineract.avro.gl.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"parentId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"glCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"disabled\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"manualEntriesAllowed\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"usage\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nameDecorated\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"tagId\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CodeValueDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"position\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"active\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"mandatory\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"organizationRunningBalance\",\"type\":[\"null\",\"long\"],\"default\":null}]}],\"default\":null}]}}],\"default\":null},{\"name\":\"penalty\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"chargePaymentMode\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"paid\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"waived\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"chargePayable\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"loanId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"minCap\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"maxCap\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"installmentChargeData\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"LoanInstallmentChargeDataV1\",\"fields\":[{\"name\":\"installmentNumber\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"dueDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"amount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"amountOutstanding\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"amou","ntWaived\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"paid\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"waived\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"amountAccrued\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"amountUnrecognized\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null}]}}],\"default\":null},{\"name\":\"amountAccrued\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"amountUnrecognized\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalLoanId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalOwnerId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"submittedOnDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<LoanChargeDataV1> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<LoanChargeDataV1> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<LoanChargeDataV1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<LoanChargeDataV1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<LoanChargeDataV1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this LoanChargeDataV1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  @Override
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a LoanChargeDataV1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a LoanChargeDataV1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static LoanChargeDataV1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.Long id;
  private java.lang.Long chargeId;
  private java.lang.String name;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargeTimeType;
  private java.lang.String dueDate;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargeCalculationType;
  private java.math.BigDecimal percentage;
  private java.math.BigDecimal amountPercentageAppliedTo;
  private org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency;
  private java.math.BigDecimal amount;
  private java.math.BigDecimal amountPaid;
  private java.math.BigDecimal amountWaived;
  private java.math.BigDecimal amountWrittenOff;
  private java.math.BigDecimal amountOutstanding;
  private java.math.BigDecimal amountOrPercentage;
  private java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1> chargeOptions;
  private java.lang.Boolean penalty;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargePaymentMode;
  private java.lang.Boolean paid;
  private java.lang.Boolean waived;
  private java.lang.Boolean chargePayable;
  private java.lang.Long loanId;
  private java.math.BigDecimal minCap;
  private java.math.BigDecimal maxCap;
  private java.util.List<org.apache.fineract.avro.loan.v1.LoanInstallmentChargeDataV1> installmentChargeData;
  private java.math.BigDecimal amountAccrued;
  private java.math.BigDecimal amountUnrecognized;
  private java.lang.String externalId;
  private java.lang.String externalLoanId;
  private java.lang.String externalOwnerId;
  private java.lang.String submittedOnDate;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LoanChargeDataV1() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param chargeId The new value for chargeId
   * @param name The new value for name
   * @param chargeTimeType The new value for chargeTimeType
   * @param dueDate The new value for dueDate
   * @param chargeCalculationType The new value for chargeCalculationType
   * @param percentage The new value for percentage
   * @param amountPercentageAppliedTo The new value for amountPercentageAppliedTo
   * @param currency The new value for currency
   * @param amount The new value for amount
   * @param amountPaid The new value for amountPaid
   * @param amountWaived The new value for amountWaived
   * @param amountWrittenOff The new value for amountWrittenOff
   * @param amountOutstanding The new value for amountOutstanding
   * @param amountOrPercentage The new value for amountOrPercentage
   * @param chargeOptions The new value for chargeOptions
   * @param penalty The new value for penalty
   * @param chargePaymentMode The new value for chargePaymentMode
   * @param paid The new value for paid
   * @param waived The new value for waived
   * @param chargePayable The new value for chargePayable
   * @param loanId The new value for loanId
   * @param minCap The new value for minCap
   * @param maxCap The new value for maxCap
   * @param installmentChargeData The new value for installmentChargeData
   * @param amountAccrued The new value for amountAccrued
   * @param amountUnrecognized The new value for amountUnrecognized
   * @param externalId The new value for externalId
   * @param externalLoanId The new value for externalLoanId
   * @param externalOwnerId The new value for externalOwnerId
   * @param submittedOnDate The new value for submittedOnDate
   */
  public LoanChargeDataV1(java.lang.Long id, java.lang.Long chargeId, java.lang.String name, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargeTimeType, java.lang.String dueDate, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargeCalculationType, java.math.BigDecimal percentage, java.math.BigDecimal amountPercentageAppliedTo, org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency, java.math.BigDecimal amount, java.math.BigDecimal amountPaid, java.math.BigDecimal amountWaived, java.math.BigDecimal amountWrittenOff, java.math.BigDecimal amountOutstanding, java.math.BigDecimal amountOrPercentage, java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1> chargeOptions, java.lang.Boolean penalty, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargePaymentMode, java.lang.Boolean paid, java.lang.Boolean waived, java.lang.Boolean chargePayable, java.lang.Long loanId, java.math.BigDecimal minCap, java.math.BigDecimal maxCap, java.util.List<org.apache.fineract.avro.loan.v1.LoanInstallmentChargeDataV1> installmentChargeData, java.math.BigDecimal amountAccrued, java.math.BigDecimal amountUnrecognized, java.lang.String externalId, java.lang.String externalLoanId, java.lang.String externalOwnerId, java.lang.String submittedOnDate) {
    this.id = id;
    this.chargeId = chargeId;
    this.name = name;
    this.chargeTimeType = chargeTimeType;
    this.dueDate = dueDate;
    this.chargeCalculationType = chargeCalculationType;
    this.percentage = percentage;
    this.amountPercentageAppliedTo = amountPercentageAppliedTo;
    this.currency = currency;
    this.amount = amount;
    this.amountPaid = amountPaid;
    this.amountWaived = amountWaived;
    this.amountWrittenOff = amountWrittenOff;
    this.amountOutstanding = amountOutstanding;
    this.amountOrPercentage = amountOrPercentage;
    this.chargeOptions = chargeOptions;
    this.penalty = penalty;
    this.chargePaymentMode = chargePaymentMode;
    this.paid = paid;
    this.waived = waived;
    this.chargePayable = chargePayable;
    this.loanId = loanId;
    this.minCap = minCap;
    this.maxCap = maxCap;
    this.installmentChargeData = installmentChargeData;
    this.amountAccrued = amountAccrued;
    this.amountUnrecognized = amountUnrecognized;
    this.externalId = externalId;
    this.externalLoanId = externalLoanId;
    this.externalOwnerId = externalOwnerId;
    this.submittedOnDate = submittedOnDate;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return chargeId;
    case 2: return name;
    case 3: return chargeTimeType;
    case 4: return dueDate;
    case 5: return chargeCalculationType;
    case 6: return percentage;
    case 7: return amountPercentageAppliedTo;
    case 8: return currency;
    case 9: return amount;
    case 10: return amountPaid;
    case 11: return amountWaived;
    case 12: return amountWrittenOff;
    case 13: return amountOutstanding;
    case 14: return amountOrPercentage;
    case 15: return chargeOptions;
    case 16: return penalty;
    case 17: return chargePaymentMode;
    case 18: return paid;
    case 19: return waived;
    case 20: return chargePayable;
    case 21: return loanId;
    case 22: return minCap;
    case 23: return maxCap;
    case 24: return installmentChargeData;
    case 25: return amountAccrued;
    case 26: return amountUnrecognized;
    case 27: return externalId;
    case 28: return externalLoanId;
    case 29: return externalOwnerId;
    case 30: return submittedOnDate;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: chargeId = (java.lang.Long)value$; break;
    case 2: name = value$ != null ? value$.toString() : null; break;
    case 3: chargeTimeType = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 4: dueDate = value$ != null ? value$.toString() : null; break;
    case 5: chargeCalculationType = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 6: percentage = (java.math.BigDecimal)value$; break;
    case 7: amountPercentageAppliedTo = (java.math.BigDecimal)value$; break;
    case 8: currency = (org.apache.fineract.avro.generic.v1.CurrencyDataV1)value$; break;
    case 9: amount = (java.math.BigDecimal)value$; break;
    case 10: amountPaid = (java.math.BigDecimal)value$; break;
    case 11: amountWaived = (java.math.BigDecimal)value$; break;
    case 12: amountWrittenOff = (java.math.BigDecimal)value$; break;
    case 13: amountOutstanding = (java.math.BigDecimal)value$; break;
    case 14: amountOrPercentage = (java.math.BigDecimal)value$; break;
    case 15: chargeOptions = (java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1>)value$; break;
    case 16: penalty = (java.lang.Boolean)value$; break;
    case 17: chargePaymentMode = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 18: paid = (java.lang.Boolean)value$; break;
    case 19: waived = (java.lang.Boolean)value$; break;
    case 20: chargePayable = (java.lang.Boolean)value$; break;
    case 21: loanId = (java.lang.Long)value$; break;
    case 22: minCap = (java.math.BigDecimal)value$; break;
    case 23: maxCap = (java.math.BigDecimal)value$; break;
    case 24: installmentChargeData = (java.util.List<org.apache.fineract.avro.loan.v1.LoanInstallmentChargeDataV1>)value$; break;
    case 25: amountAccrued = (java.math.BigDecimal)value$; break;
    case 26: amountUnrecognized = (java.math.BigDecimal)value$; break;
    case 27: externalId = value$ != null ? value$.toString() : null; break;
    case 28: externalLoanId = value$ != null ? value$.toString() : null; break;
    case 29: externalOwnerId = value$ != null ? value$.toString() : null; break;
    case 30: submittedOnDate = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'chargeId' field.
   * @return The value of the 'chargeId' field.
   */
  public java.lang.Long getChargeId() {
    return chargeId;
  }


  /**
   * Sets the value of the 'chargeId' field.
   * @param value the value to set.
   */
  public void setChargeId(java.lang.Long value) {
    this.chargeId = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'chargeTimeType' field.
   * @return The value of the 'chargeTimeType' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getChargeTimeType() {
    return chargeTimeType;
  }


  /**
   * Sets the value of the 'chargeTimeType' field.
   * @param value the value to set.
   */
  public void setChargeTimeType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.chargeTimeType = value;
  }

  /**
   * Gets the value of the 'dueDate' field.
   * @return The value of the 'dueDate' field.
   */
  public java.lang.String getDueDate() {
    return dueDate;
  }


  /**
   * Sets the value of the 'dueDate' field.
   * @param value the value to set.
   */
  public void setDueDate(java.lang.String value) {
    this.dueDate = value;
  }

  /**
   * Gets the value of the 'chargeCalculationType' field.
   * @return The value of the 'chargeCalculationType' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getChargeCalculationType() {
    return chargeCalculationType;
  }


  /**
   * Sets the value of the 'chargeCalculationType' field.
   * @param value the value to set.
   */
  public void setChargeCalculationType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.chargeCalculationType = value;
  }

  /**
   * Gets the value of the 'percentage' field.
   * @return The value of the 'percentage' field.
   */
  public java.math.BigDecimal getPercentage() {
    return percentage;
  }


  /**
   * Sets the value of the 'percentage' field.
   * @param value the value to set.
   */
  public void setPercentage(java.math.BigDecimal value) {
    this.percentage = value;
  }

  /**
   * Gets the value of the 'amountPercentageAppliedTo' field.
   * @return The value of the 'amountPercentageAppliedTo' field.
   */
  public java.math.BigDecimal getAmountPercentageAppliedTo() {
    return amountPercentageAppliedTo;
  }


  /**
   * Sets the value of the 'amountPercentageAppliedTo' field.
   * @param value the value to set.
   */
  public void setAmountPercentageAppliedTo(java.math.BigDecimal value) {
    this.amountPercentageAppliedTo = value;
  }

  /**
   * Gets the value of the 'currency' field.
   * @return The value of the 'currency' field.
   */
  public org.apache.fineract.avro.generic.v1.CurrencyDataV1 getCurrency() {
    return currency;
  }


  /**
   * Sets the value of the 'currency' field.
   * @param value the value to set.
   */
  public void setCurrency(org.apache.fineract.avro.generic.v1.CurrencyDataV1 value) {
    this.currency = value;
  }

  /**
   * Gets the value of the 'amount' field.
   * @return The value of the 'amount' field.
   */
  public java.math.BigDecimal getAmount() {
    return amount;
  }


  /**
   * Sets the value of the 'amount' field.
   * @param value the value to set.
   */
  public void setAmount(java.math.BigDecimal value) {
    this.amount = value;
  }

  /**
   * Gets the value of the 'amountPaid' field.
   * @return The value of the 'amountPaid' field.
   */
  public java.math.BigDecimal getAmountPaid() {
    return amountPaid;
  }


  /**
   * Sets the value of the 'amountPaid' field.
   * @param value the value to set.
   */
  public void setAmountPaid(java.math.BigDecimal value) {
    this.amountPaid = value;
  }

  /**
   * Gets the value of the 'amountWaived' field.
   * @return The value of the 'amountWaived' field.
   */
  public java.math.BigDecimal getAmountWaived() {
    return amountWaived;
  }


  /**
   * Sets the value of the 'amountWaived' field.
   * @param value the value to set.
   */
  public void setAmountWaived(java.math.BigDecimal value) {
    this.amountWaived = value;
  }

  /**
   * Gets the value of the 'amountWrittenOff' field.
   * @return The value of the 'amountWrittenOff' field.
   */
  public java.math.BigDecimal getAmountWrittenOff() {
    return amountWrittenOff;
  }


  /**
   * Sets the value of the 'amountWrittenOff' field.
   * @param value the value to set.
   */
  public void setAmountWrittenOff(java.math.BigDecimal value) {
    this.amountWrittenOff = value;
  }

  /**
   * Gets the value of the 'amountOutstanding' field.
   * @return The value of the 'amountOutstanding' field.
   */
  public java.math.BigDecimal getAmountOutstanding() {
    return amountOutstanding;
  }


  /**
   * Sets the value of the 'amountOutstanding' field.
   * @param value the value to set.
   */
  public void setAmountOutstanding(java.math.BigDecimal value) {
    this.amountOutstanding = value;
  }

  /**
   * Gets the value of the 'amountOrPercentage' field.
   * @return The value of the 'amountOrPercentage' field.
   */
  public java.math.BigDecimal getAmountOrPercentage() {
    return amountOrPercentage;
  }


  /**
   * Sets the value of the 'amountOrPercentage' field.
   * @param value the value to set.
   */
  public void setAmountOrPercentage(java.math.BigDecimal value) {
    this.amountOrPercentage = value;
  }

  /**
   * Gets the value of the 'chargeOptions' field.
   * @return The value of the 'chargeOptions' field.
   */
  public java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1> getChargeOptions() {
    return chargeOptions;
  }


  /**
   * Sets the value of the 'chargeOptions' field.
   * @param value the value to set.
   */
  public void setChargeOptions(java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1> value) {
    this.chargeOptions = value;
  }

  /**
   * Gets the value of the 'penalty' field.
   * @return The value of the 'penalty' field.
   */
  public java.lang.Boolean getPenalty() {
    return penalty;
  }


  /**
   * Sets the value of the 'penalty' field.
   * @param value the value to set.
   */
  public void setPenalty(java.lang.Boolean value) {
    this.penalty = value;
  }

  /**
   * Gets the value of the 'chargePaymentMode' field.
   * @return The value of the 'chargePaymentMode' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getChargePaymentMode() {
    return chargePaymentMode;
  }


  /**
   * Sets the value of the 'chargePaymentMode' field.
   * @param value the value to set.
   */
  public void setChargePaymentMode(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.chargePaymentMode = value;
  }

  /**
   * Gets the value of the 'paid' field.
   * @return The value of the 'paid' field.
   */
  public java.lang.Boolean getPaid() {
    return paid;
  }


  /**
   * Sets the value of the 'paid' field.
   * @param value the value to set.
   */
  public void setPaid(java.lang.Boolean value) {
    this.paid = value;
  }

  /**
   * Gets the value of the 'waived' field.
   * @return The value of the 'waived' field.
   */
  public java.lang.Boolean getWaived() {
    return waived;
  }


  /**
   * Sets the value of the 'waived' field.
   * @param value the value to set.
   */
  public void setWaived(java.lang.Boolean value) {
    this.waived = value;
  }

  /**
   * Gets the value of the 'chargePayable' field.
   * @return The value of the 'chargePayable' field.
   */
  public java.lang.Boolean getChargePayable() {
    return chargePayable;
  }


  /**
   * Sets the value of the 'chargePayable' field.
   * @param value the value to set.
   */
  public void setChargePayable(java.lang.Boolean value) {
    this.chargePayable = value;
  }

  /**
   * Gets the value of the 'loanId' field.
   * @return The value of the 'loanId' field.
   */
  public java.lang.Long getLoanId() {
    return loanId;
  }


  /**
   * Sets the value of the 'loanId' field.
   * @param value the value to set.
   */
  public void setLoanId(java.lang.Long value) {
    this.loanId = value;
  }

  /**
   * Gets the value of the 'minCap' field.
   * @return The value of the 'minCap' field.
   */
  public java.math.BigDecimal getMinCap() {
    return minCap;
  }


  /**
   * Sets the value of the 'minCap' field.
   * @param value the value to set.
   */
  public void setMinCap(java.math.BigDecimal value) {
    this.minCap = value;
  }

  /**
   * Gets the value of the 'maxCap' field.
   * @return The value of the 'maxCap' field.
   */
  public java.math.BigDecimal getMaxCap() {
    return maxCap;
  }


  /**
   * Sets the value of the 'maxCap' field.
   * @param value the value to set.
   */
  public void setMaxCap(java.math.BigDecimal value) {
    this.maxCap = value;
  }

  /**
   * Gets the value of the 'installmentChargeData' field.
   * @return The value of the 'installmentChargeData' field.
   */
  public java.util.List<org.apache.fineract.avro.loan.v1.LoanInstallmentChargeDataV1> getInstallmentChargeData() {
    return installmentChargeData;
  }


  /**
   * Sets the value of the 'installmentChargeData' field.
   * @param value the value to set.
   */
  public void setInstallmentChargeData(java.util.List<org.apache.fineract.avro.loan.v1.LoanInstallmentChargeDataV1> value) {
    this.installmentChargeData = value;
  }

  /**
   * Gets the value of the 'amountAccrued' field.
   * @return The value of the 'amountAccrued' field.
   */
  public java.math.BigDecimal getAmountAccrued() {
    return amountAccrued;
  }


  /**
   * Sets the value of the 'amountAccrued' field.
   * @param value the value to set.
   */
  public void setAmountAccrued(java.math.BigDecimal value) {
    this.amountAccrued = value;
  }

  /**
   * Gets the value of the 'amountUnrecognized' field.
   * @return The value of the 'amountUnrecognized' field.
   */
  public java.math.BigDecimal getAmountUnrecognized() {
    return amountUnrecognized;
  }


  /**
   * Sets the value of the 'amountUnrecognized' field.
   * @param value the value to set.
   */
  public void setAmountUnrecognized(java.math.BigDecimal value) {
    this.amountUnrecognized = value;
  }

  /**
   * Gets the value of the 'externalId' field.
   * @return The value of the 'externalId' field.
   */
  public java.lang.String getExternalId() {
    return externalId;
  }


  /**
   * Sets the value of the 'externalId' field.
   * @param value the value to set.
   */
  public void setExternalId(java.lang.String value) {
    this.externalId = value;
  }

  /**
   * Gets the value of the 'externalLoanId' field.
   * @return The value of the 'externalLoanId' field.
   */
  public java.lang.String getExternalLoanId() {
    return externalLoanId;
  }


  /**
   * Sets the value of the 'externalLoanId' field.
   * @param value the value to set.
   */
  public void setExternalLoanId(java.lang.String value) {
    this.externalLoanId = value;
  }

  /**
   * Gets the value of the 'externalOwnerId' field.
   * @return The value of the 'externalOwnerId' field.
   */
  public java.lang.String getExternalOwnerId() {
    return externalOwnerId;
  }


  /**
   * Sets the value of the 'externalOwnerId' field.
   * @param value the value to set.
   */
  public void setExternalOwnerId(java.lang.String value) {
    this.externalOwnerId = value;
  }

  /**
   * Gets the value of the 'submittedOnDate' field.
   * @return The value of the 'submittedOnDate' field.
   */
  public java.lang.String getSubmittedOnDate() {
    return submittedOnDate;
  }


  /**
   * Sets the value of the 'submittedOnDate' field.
   * @param value the value to set.
   */
  public void setSubmittedOnDate(java.lang.String value) {
    this.submittedOnDate = value;
  }

  /**
   * Creates a new LoanChargeDataV1 RecordBuilder.
   * @return A new LoanChargeDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder newBuilder() {
    return new org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder();
  }

  /**
   * Creates a new LoanChargeDataV1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LoanChargeDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder newBuilder(org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder other) {
    if (other == null) {
      return new org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder(other);
    }
  }

  /**
   * Creates a new LoanChargeDataV1 RecordBuilder by copying an existing LoanChargeDataV1 instance.
   * @param other The existing instance to copy.
   * @return A new LoanChargeDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder newBuilder(org.apache.fineract.avro.loan.v1.LoanChargeDataV1 other) {
    if (other == null) {
      return new org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder(other);
    }
  }

  /**
   * RecordBuilder for LoanChargeDataV1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LoanChargeDataV1>
    implements org.apache.avro.data.RecordBuilder<LoanChargeDataV1> {

    private java.lang.Long id;
    private java.lang.Long chargeId;
    private java.lang.String name;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargeTimeType;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder chargeTimeTypeBuilder;
    private java.lang.String dueDate;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargeCalculationType;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder chargeCalculationTypeBuilder;
    private java.math.BigDecimal percentage;
    private java.math.BigDecimal amountPercentageAppliedTo;
    private org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency;
    private org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder currencyBuilder;
    private java.math.BigDecimal amount;
    private java.math.BigDecimal amountPaid;
    private java.math.BigDecimal amountWaived;
    private java.math.BigDecimal amountWrittenOff;
    private java.math.BigDecimal amountOutstanding;
    private java.math.BigDecimal amountOrPercentage;
    private java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1> chargeOptions;
    private java.lang.Boolean penalty;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargePaymentMode;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder chargePaymentModeBuilder;
    private java.lang.Boolean paid;
    private java.lang.Boolean waived;
    private java.lang.Boolean chargePayable;
    private java.lang.Long loanId;
    private java.math.BigDecimal minCap;
    private java.math.BigDecimal maxCap;
    private java.util.List<org.apache.fineract.avro.loan.v1.LoanInstallmentChargeDataV1> installmentChargeData;
    private java.math.BigDecimal amountAccrued;
    private java.math.BigDecimal amountUnrecognized;
    private java.lang.String externalId;
    private java.lang.String externalLoanId;
    private java.lang.String externalOwnerId;
    private java.lang.String submittedOnDate;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.chargeId)) {
        this.chargeId = data().deepCopy(fields()[1].schema(), other.chargeId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.chargeTimeType)) {
        this.chargeTimeType = data().deepCopy(fields()[3].schema(), other.chargeTimeType);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (other.hasChargeTimeTypeBuilder()) {
        this.chargeTimeTypeBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getChargeTimeTypeBuilder());
      }
      if (isValidValue(fields()[4], other.dueDate)) {
        this.dueDate = data().deepCopy(fields()[4].schema(), other.dueDate);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.chargeCalculationType)) {
        this.chargeCalculationType = data().deepCopy(fields()[5].schema(), other.chargeCalculationType);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (other.hasChargeCalculationTypeBuilder()) {
        this.chargeCalculationTypeBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getChargeCalculationTypeBuilder());
      }
      if (isValidValue(fields()[6], other.percentage)) {
        this.percentage = data().deepCopy(fields()[6].schema(), other.percentage);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.amountPercentageAppliedTo)) {
        this.amountPercentageAppliedTo = data().deepCopy(fields()[7].schema(), other.amountPercentageAppliedTo);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.currency)) {
        this.currency = data().deepCopy(fields()[8].schema(), other.currency);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (other.hasCurrencyBuilder()) {
        this.currencyBuilder = org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder(other.getCurrencyBuilder());
      }
      if (isValidValue(fields()[9], other.amount)) {
        this.amount = data().deepCopy(fields()[9].schema(), other.amount);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.amountPaid)) {
        this.amountPaid = data().deepCopy(fields()[10].schema(), other.amountPaid);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.amountWaived)) {
        this.amountWaived = data().deepCopy(fields()[11].schema(), other.amountWaived);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.amountWrittenOff)) {
        this.amountWrittenOff = data().deepCopy(fields()[12].schema(), other.amountWrittenOff);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.amountOutstanding)) {
        this.amountOutstanding = data().deepCopy(fields()[13].schema(), other.amountOutstanding);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.amountOrPercentage)) {
        this.amountOrPercentage = data().deepCopy(fields()[14].schema(), other.amountOrPercentage);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.chargeOptions)) {
        this.chargeOptions = data().deepCopy(fields()[15].schema(), other.chargeOptions);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.penalty)) {
        this.penalty = data().deepCopy(fields()[16].schema(), other.penalty);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.chargePaymentMode)) {
        this.chargePaymentMode = data().deepCopy(fields()[17].schema(), other.chargePaymentMode);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (other.hasChargePaymentModeBuilder()) {
        this.chargePaymentModeBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getChargePaymentModeBuilder());
      }
      if (isValidValue(fields()[18], other.paid)) {
        this.paid = data().deepCopy(fields()[18].schema(), other.paid);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.waived)) {
        this.waived = data().deepCopy(fields()[19].schema(), other.waived);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.chargePayable)) {
        this.chargePayable = data().deepCopy(fields()[20].schema(), other.chargePayable);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.loanId)) {
        this.loanId = data().deepCopy(fields()[21].schema(), other.loanId);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.minCap)) {
        this.minCap = data().deepCopy(fields()[22].schema(), other.minCap);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.maxCap)) {
        this.maxCap = data().deepCopy(fields()[23].schema(), other.maxCap);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.installmentChargeData)) {
        this.installmentChargeData = data().deepCopy(fields()[24].schema(), other.installmentChargeData);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
      if (isValidValue(fields()[25], other.amountAccrued)) {
        this.amountAccrued = data().deepCopy(fields()[25].schema(), other.amountAccrued);
        fieldSetFlags()[25] = other.fieldSetFlags()[25];
      }
      if (isValidValue(fields()[26], other.amountUnrecognized)) {
        this.amountUnrecognized = data().deepCopy(fields()[26].schema(), other.amountUnrecognized);
        fieldSetFlags()[26] = other.fieldSetFlags()[26];
      }
      if (isValidValue(fields()[27], other.externalId)) {
        this.externalId = data().deepCopy(fields()[27].schema(), other.externalId);
        fieldSetFlags()[27] = other.fieldSetFlags()[27];
      }
      if (isValidValue(fields()[28], other.externalLoanId)) {
        this.externalLoanId = data().deepCopy(fields()[28].schema(), other.externalLoanId);
        fieldSetFlags()[28] = other.fieldSetFlags()[28];
      }
      if (isValidValue(fields()[29], other.externalOwnerId)) {
        this.externalOwnerId = data().deepCopy(fields()[29].schema(), other.externalOwnerId);
        fieldSetFlags()[29] = other.fieldSetFlags()[29];
      }
      if (isValidValue(fields()[30], other.submittedOnDate)) {
        this.submittedOnDate = data().deepCopy(fields()[30].schema(), other.submittedOnDate);
        fieldSetFlags()[30] = other.fieldSetFlags()[30];
      }
    }

    /**
     * Creates a Builder by copying an existing LoanChargeDataV1 instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.fineract.avro.loan.v1.LoanChargeDataV1 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.chargeId)) {
        this.chargeId = data().deepCopy(fields()[1].schema(), other.chargeId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.chargeTimeType)) {
        this.chargeTimeType = data().deepCopy(fields()[3].schema(), other.chargeTimeType);
        fieldSetFlags()[3] = true;
      }
      this.chargeTimeTypeBuilder = null;
      if (isValidValue(fields()[4], other.dueDate)) {
        this.dueDate = data().deepCopy(fields()[4].schema(), other.dueDate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.chargeCalculationType)) {
        this.chargeCalculationType = data().deepCopy(fields()[5].schema(), other.chargeCalculationType);
        fieldSetFlags()[5] = true;
      }
      this.chargeCalculationTypeBuilder = null;
      if (isValidValue(fields()[6], other.percentage)) {
        this.percentage = data().deepCopy(fields()[6].schema(), other.percentage);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.amountPercentageAppliedTo)) {
        this.amountPercentageAppliedTo = data().deepCopy(fields()[7].schema(), other.amountPercentageAppliedTo);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.currency)) {
        this.currency = data().deepCopy(fields()[8].schema(), other.currency);
        fieldSetFlags()[8] = true;
      }
      this.currencyBuilder = null;
      if (isValidValue(fields()[9], other.amount)) {
        this.amount = data().deepCopy(fields()[9].schema(), other.amount);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.amountPaid)) {
        this.amountPaid = data().deepCopy(fields()[10].schema(), other.amountPaid);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.amountWaived)) {
        this.amountWaived = data().deepCopy(fields()[11].schema(), other.amountWaived);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.amountWrittenOff)) {
        this.amountWrittenOff = data().deepCopy(fields()[12].schema(), other.amountWrittenOff);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.amountOutstanding)) {
        this.amountOutstanding = data().deepCopy(fields()[13].schema(), other.amountOutstanding);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.amountOrPercentage)) {
        this.amountOrPercentage = data().deepCopy(fields()[14].schema(), other.amountOrPercentage);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.chargeOptions)) {
        this.chargeOptions = data().deepCopy(fields()[15].schema(), other.chargeOptions);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.penalty)) {
        this.penalty = data().deepCopy(fields()[16].schema(), other.penalty);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.chargePaymentMode)) {
        this.chargePaymentMode = data().deepCopy(fields()[17].schema(), other.chargePaymentMode);
        fieldSetFlags()[17] = true;
      }
      this.chargePaymentModeBuilder = null;
      if (isValidValue(fields()[18], other.paid)) {
        this.paid = data().deepCopy(fields()[18].schema(), other.paid);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.waived)) {
        this.waived = data().deepCopy(fields()[19].schema(), other.waived);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.chargePayable)) {
        this.chargePayable = data().deepCopy(fields()[20].schema(), other.chargePayable);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.loanId)) {
        this.loanId = data().deepCopy(fields()[21].schema(), other.loanId);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.minCap)) {
        this.minCap = data().deepCopy(fields()[22].schema(), other.minCap);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.maxCap)) {
        this.maxCap = data().deepCopy(fields()[23].schema(), other.maxCap);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.installmentChargeData)) {
        this.installmentChargeData = data().deepCopy(fields()[24].schema(), other.installmentChargeData);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.amountAccrued)) {
        this.amountAccrued = data().deepCopy(fields()[25].schema(), other.amountAccrued);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.amountUnrecognized)) {
        this.amountUnrecognized = data().deepCopy(fields()[26].schema(), other.amountUnrecognized);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.externalId)) {
        this.externalId = data().deepCopy(fields()[27].schema(), other.externalId);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.externalLoanId)) {
        this.externalLoanId = data().deepCopy(fields()[28].schema(), other.externalLoanId);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.externalOwnerId)) {
        this.externalOwnerId = data().deepCopy(fields()[29].schema(), other.externalOwnerId);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.submittedOnDate)) {
        this.submittedOnDate = data().deepCopy(fields()[30].schema(), other.submittedOnDate);
        fieldSetFlags()[30] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setId(java.lang.Long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'chargeId' field.
      * @return The value.
      */
    public java.lang.Long getChargeId() {
      return chargeId;
    }


    /**
      * Sets the value of the 'chargeId' field.
      * @param value The value of 'chargeId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setChargeId(java.lang.Long value) {
      validate(fields()[1], value);
      this.chargeId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'chargeId' field has been set.
      * @return True if the 'chargeId' field has been set, false otherwise.
      */
    public boolean hasChargeId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'chargeId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearChargeId() {
      chargeId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setName(java.lang.String value) {
      validate(fields()[2], value);
      this.name = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearName() {
      name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'chargeTimeType' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getChargeTimeType() {
      return chargeTimeType;
    }


    /**
      * Sets the value of the 'chargeTimeType' field.
      * @param value The value of 'chargeTimeType'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setChargeTimeType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[3], value);
      this.chargeTimeTypeBuilder = null;
      this.chargeTimeType = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'chargeTimeType' field has been set.
      * @return True if the 'chargeTimeType' field has been set, false otherwise.
      */
    public boolean hasChargeTimeType() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'chargeTimeType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getChargeTimeTypeBuilder() {
      if (chargeTimeTypeBuilder == null) {
        if (hasChargeTimeType()) {
          setChargeTimeTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(chargeTimeType));
        } else {
          setChargeTimeTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return chargeTimeTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'chargeTimeType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setChargeTimeTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearChargeTimeType();
      chargeTimeTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'chargeTimeType' field has an active Builder instance
     * @return True if the 'chargeTimeType' field has an active Builder instance
     */
    public boolean hasChargeTimeTypeBuilder() {
      return chargeTimeTypeBuilder != null;
    }

    /**
      * Clears the value of the 'chargeTimeType' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearChargeTimeType() {
      chargeTimeType = null;
      chargeTimeTypeBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'dueDate' field.
      * @return The value.
      */
    public java.lang.String getDueDate() {
      return dueDate;
    }


    /**
      * Sets the value of the 'dueDate' field.
      * @param value The value of 'dueDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setDueDate(java.lang.String value) {
      validate(fields()[4], value);
      this.dueDate = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'dueDate' field has been set.
      * @return True if the 'dueDate' field has been set, false otherwise.
      */
    public boolean hasDueDate() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'dueDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearDueDate() {
      dueDate = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'chargeCalculationType' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getChargeCalculationType() {
      return chargeCalculationType;
    }


    /**
      * Sets the value of the 'chargeCalculationType' field.
      * @param value The value of 'chargeCalculationType'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setChargeCalculationType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[5], value);
      this.chargeCalculationTypeBuilder = null;
      this.chargeCalculationType = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'chargeCalculationType' field has been set.
      * @return True if the 'chargeCalculationType' field has been set, false otherwise.
      */
    public boolean hasChargeCalculationType() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'chargeCalculationType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getChargeCalculationTypeBuilder() {
      if (chargeCalculationTypeBuilder == null) {
        if (hasChargeCalculationType()) {
          setChargeCalculationTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(chargeCalculationType));
        } else {
          setChargeCalculationTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return chargeCalculationTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'chargeCalculationType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setChargeCalculationTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearChargeCalculationType();
      chargeCalculationTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'chargeCalculationType' field has an active Builder instance
     * @return True if the 'chargeCalculationType' field has an active Builder instance
     */
    public boolean hasChargeCalculationTypeBuilder() {
      return chargeCalculationTypeBuilder != null;
    }

    /**
      * Clears the value of the 'chargeCalculationType' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearChargeCalculationType() {
      chargeCalculationType = null;
      chargeCalculationTypeBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'percentage' field.
      * @return The value.
      */
    public java.math.BigDecimal getPercentage() {
      return percentage;
    }


    /**
      * Sets the value of the 'percentage' field.
      * @param value The value of 'percentage'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setPercentage(java.math.BigDecimal value) {
      validate(fields()[6], value);
      this.percentage = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'percentage' field has been set.
      * @return True if the 'percentage' field has been set, false otherwise.
      */
    public boolean hasPercentage() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'percentage' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearPercentage() {
      percentage = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'amountPercentageAppliedTo' field.
      * @return The value.
      */
    public java.math.BigDecimal getAmountPercentageAppliedTo() {
      return amountPercentageAppliedTo;
    }


    /**
      * Sets the value of the 'amountPercentageAppliedTo' field.
      * @param value The value of 'amountPercentageAppliedTo'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setAmountPercentageAppliedTo(java.math.BigDecimal value) {
      validate(fields()[7], value);
      this.amountPercentageAppliedTo = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'amountPercentageAppliedTo' field has been set.
      * @return True if the 'amountPercentageAppliedTo' field has been set, false otherwise.
      */
    public boolean hasAmountPercentageAppliedTo() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'amountPercentageAppliedTo' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearAmountPercentageAppliedTo() {
      amountPercentageAppliedTo = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'currency' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.CurrencyDataV1 getCurrency() {
      return currency;
    }


    /**
      * Sets the value of the 'currency' field.
      * @param value The value of 'currency'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setCurrency(org.apache.fineract.avro.generic.v1.CurrencyDataV1 value) {
      validate(fields()[8], value);
      this.currencyBuilder = null;
      this.currency = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'currency' field has been set.
      * @return True if the 'currency' field has been set, false otherwise.
      */
    public boolean hasCurrency() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'currency' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder getCurrencyBuilder() {
      if (currencyBuilder == null) {
        if (hasCurrency()) {
          setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder(currency));
        } else {
          setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder());
        }
      }
      return currencyBuilder;
    }

    /**
     * Sets the Builder instance for the 'currency' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder value) {
      clearCurrency();
      currencyBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'currency' field has an active Builder instance
     * @return True if the 'currency' field has an active Builder instance
     */
    public boolean hasCurrencyBuilder() {
      return currencyBuilder != null;
    }

    /**
      * Clears the value of the 'currency' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearCurrency() {
      currency = null;
      currencyBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'amount' field.
      * @return The value.
      */
    public java.math.BigDecimal getAmount() {
      return amount;
    }


    /**
      * Sets the value of the 'amount' field.
      * @param value The value of 'amount'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setAmount(java.math.BigDecimal value) {
      validate(fields()[9], value);
      this.amount = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'amount' field has been set.
      * @return True if the 'amount' field has been set, false otherwise.
      */
    public boolean hasAmount() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'amount' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearAmount() {
      amount = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'amountPaid' field.
      * @return The value.
      */
    public java.math.BigDecimal getAmountPaid() {
      return amountPaid;
    }


    /**
      * Sets the value of the 'amountPaid' field.
      * @param value The value of 'amountPaid'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setAmountPaid(java.math.BigDecimal value) {
      validate(fields()[10], value);
      this.amountPaid = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'amountPaid' field has been set.
      * @return True if the 'amountPaid' field has been set, false otherwise.
      */
    public boolean hasAmountPaid() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'amountPaid' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearAmountPaid() {
      amountPaid = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'amountWaived' field.
      * @return The value.
      */
    public java.math.BigDecimal getAmountWaived() {
      return amountWaived;
    }


    /**
      * Sets the value of the 'amountWaived' field.
      * @param value The value of 'amountWaived'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setAmountWaived(java.math.BigDecimal value) {
      validate(fields()[11], value);
      this.amountWaived = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'amountWaived' field has been set.
      * @return True if the 'amountWaived' field has been set, false otherwise.
      */
    public boolean hasAmountWaived() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'amountWaived' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearAmountWaived() {
      amountWaived = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'amountWrittenOff' field.
      * @return The value.
      */
    public java.math.BigDecimal getAmountWrittenOff() {
      return amountWrittenOff;
    }


    /**
      * Sets the value of the 'amountWrittenOff' field.
      * @param value The value of 'amountWrittenOff'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setAmountWrittenOff(java.math.BigDecimal value) {
      validate(fields()[12], value);
      this.amountWrittenOff = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'amountWrittenOff' field has been set.
      * @return True if the 'amountWrittenOff' field has been set, false otherwise.
      */
    public boolean hasAmountWrittenOff() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'amountWrittenOff' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearAmountWrittenOff() {
      amountWrittenOff = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'amountOutstanding' field.
      * @return The value.
      */
    public java.math.BigDecimal getAmountOutstanding() {
      return amountOutstanding;
    }


    /**
      * Sets the value of the 'amountOutstanding' field.
      * @param value The value of 'amountOutstanding'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setAmountOutstanding(java.math.BigDecimal value) {
      validate(fields()[13], value);
      this.amountOutstanding = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'amountOutstanding' field has been set.
      * @return True if the 'amountOutstanding' field has been set, false otherwise.
      */
    public boolean hasAmountOutstanding() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'amountOutstanding' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearAmountOutstanding() {
      amountOutstanding = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'amountOrPercentage' field.
      * @return The value.
      */
    public java.math.BigDecimal getAmountOrPercentage() {
      return amountOrPercentage;
    }


    /**
      * Sets the value of the 'amountOrPercentage' field.
      * @param value The value of 'amountOrPercentage'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setAmountOrPercentage(java.math.BigDecimal value) {
      validate(fields()[14], value);
      this.amountOrPercentage = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'amountOrPercentage' field has been set.
      * @return True if the 'amountOrPercentage' field has been set, false otherwise.
      */
    public boolean hasAmountOrPercentage() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'amountOrPercentage' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearAmountOrPercentage() {
      amountOrPercentage = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'chargeOptions' field.
      * @return The value.
      */
    public java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1> getChargeOptions() {
      return chargeOptions;
    }


    /**
      * Sets the value of the 'chargeOptions' field.
      * @param value The value of 'chargeOptions'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setChargeOptions(java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1> value) {
      validate(fields()[15], value);
      this.chargeOptions = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'chargeOptions' field has been set.
      * @return True if the 'chargeOptions' field has been set, false otherwise.
      */
    public boolean hasChargeOptions() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'chargeOptions' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearChargeOptions() {
      chargeOptions = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'penalty' field.
      * @return The value.
      */
    public java.lang.Boolean getPenalty() {
      return penalty;
    }


    /**
      * Sets the value of the 'penalty' field.
      * @param value The value of 'penalty'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setPenalty(java.lang.Boolean value) {
      validate(fields()[16], value);
      this.penalty = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'penalty' field has been set.
      * @return True if the 'penalty' field has been set, false otherwise.
      */
    public boolean hasPenalty() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'penalty' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearPenalty() {
      penalty = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'chargePaymentMode' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getChargePaymentMode() {
      return chargePaymentMode;
    }


    /**
      * Sets the value of the 'chargePaymentMode' field.
      * @param value The value of 'chargePaymentMode'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setChargePaymentMode(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[17], value);
      this.chargePaymentModeBuilder = null;
      this.chargePaymentMode = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'chargePaymentMode' field has been set.
      * @return True if the 'chargePaymentMode' field has been set, false otherwise.
      */
    public boolean hasChargePaymentMode() {
      return fieldSetFlags()[17];
    }

    /**
     * Gets the Builder instance for the 'chargePaymentMode' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getChargePaymentModeBuilder() {
      if (chargePaymentModeBuilder == null) {
        if (hasChargePaymentMode()) {
          setChargePaymentModeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(chargePaymentMode));
        } else {
          setChargePaymentModeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return chargePaymentModeBuilder;
    }

    /**
     * Sets the Builder instance for the 'chargePaymentMode' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setChargePaymentModeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearChargePaymentMode();
      chargePaymentModeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'chargePaymentMode' field has an active Builder instance
     * @return True if the 'chargePaymentMode' field has an active Builder instance
     */
    public boolean hasChargePaymentModeBuilder() {
      return chargePaymentModeBuilder != null;
    }

    /**
      * Clears the value of the 'chargePaymentMode' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearChargePaymentMode() {
      chargePaymentMode = null;
      chargePaymentModeBuilder = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'paid' field.
      * @return The value.
      */
    public java.lang.Boolean getPaid() {
      return paid;
    }


    /**
      * Sets the value of the 'paid' field.
      * @param value The value of 'paid'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setPaid(java.lang.Boolean value) {
      validate(fields()[18], value);
      this.paid = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'paid' field has been set.
      * @return True if the 'paid' field has been set, false otherwise.
      */
    public boolean hasPaid() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'paid' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearPaid() {
      paid = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'waived' field.
      * @return The value.
      */
    public java.lang.Boolean getWaived() {
      return waived;
    }


    /**
      * Sets the value of the 'waived' field.
      * @param value The value of 'waived'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setWaived(java.lang.Boolean value) {
      validate(fields()[19], value);
      this.waived = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'waived' field has been set.
      * @return True if the 'waived' field has been set, false otherwise.
      */
    public boolean hasWaived() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'waived' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearWaived() {
      waived = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'chargePayable' field.
      * @return The value.
      */
    public java.lang.Boolean getChargePayable() {
      return chargePayable;
    }


    /**
      * Sets the value of the 'chargePayable' field.
      * @param value The value of 'chargePayable'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setChargePayable(java.lang.Boolean value) {
      validate(fields()[20], value);
      this.chargePayable = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'chargePayable' field has been set.
      * @return True if the 'chargePayable' field has been set, false otherwise.
      */
    public boolean hasChargePayable() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'chargePayable' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearChargePayable() {
      chargePayable = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'loanId' field.
      * @return The value.
      */
    public java.lang.Long getLoanId() {
      return loanId;
    }


    /**
      * Sets the value of the 'loanId' field.
      * @param value The value of 'loanId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setLoanId(java.lang.Long value) {
      validate(fields()[21], value);
      this.loanId = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'loanId' field has been set.
      * @return True if the 'loanId' field has been set, false otherwise.
      */
    public boolean hasLoanId() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'loanId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearLoanId() {
      loanId = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'minCap' field.
      * @return The value.
      */
    public java.math.BigDecimal getMinCap() {
      return minCap;
    }


    /**
      * Sets the value of the 'minCap' field.
      * @param value The value of 'minCap'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setMinCap(java.math.BigDecimal value) {
      validate(fields()[22], value);
      this.minCap = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'minCap' field has been set.
      * @return True if the 'minCap' field has been set, false otherwise.
      */
    public boolean hasMinCap() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'minCap' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearMinCap() {
      minCap = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'maxCap' field.
      * @return The value.
      */
    public java.math.BigDecimal getMaxCap() {
      return maxCap;
    }


    /**
      * Sets the value of the 'maxCap' field.
      * @param value The value of 'maxCap'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setMaxCap(java.math.BigDecimal value) {
      validate(fields()[23], value);
      this.maxCap = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'maxCap' field has been set.
      * @return True if the 'maxCap' field has been set, false otherwise.
      */
    public boolean hasMaxCap() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'maxCap' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearMaxCap() {
      maxCap = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'installmentChargeData' field.
      * @return The value.
      */
    public java.util.List<org.apache.fineract.avro.loan.v1.LoanInstallmentChargeDataV1> getInstallmentChargeData() {
      return installmentChargeData;
    }


    /**
      * Sets the value of the 'installmentChargeData' field.
      * @param value The value of 'installmentChargeData'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setInstallmentChargeData(java.util.List<org.apache.fineract.avro.loan.v1.LoanInstallmentChargeDataV1> value) {
      validate(fields()[24], value);
      this.installmentChargeData = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'installmentChargeData' field has been set.
      * @return True if the 'installmentChargeData' field has been set, false otherwise.
      */
    public boolean hasInstallmentChargeData() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'installmentChargeData' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearInstallmentChargeData() {
      installmentChargeData = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'amountAccrued' field.
      * @return The value.
      */
    public java.math.BigDecimal getAmountAccrued() {
      return amountAccrued;
    }


    /**
      * Sets the value of the 'amountAccrued' field.
      * @param value The value of 'amountAccrued'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setAmountAccrued(java.math.BigDecimal value) {
      validate(fields()[25], value);
      this.amountAccrued = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'amountAccrued' field has been set.
      * @return True if the 'amountAccrued' field has been set, false otherwise.
      */
    public boolean hasAmountAccrued() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'amountAccrued' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearAmountAccrued() {
      amountAccrued = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'amountUnrecognized' field.
      * @return The value.
      */
    public java.math.BigDecimal getAmountUnrecognized() {
      return amountUnrecognized;
    }


    /**
      * Sets the value of the 'amountUnrecognized' field.
      * @param value The value of 'amountUnrecognized'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setAmountUnrecognized(java.math.BigDecimal value) {
      validate(fields()[26], value);
      this.amountUnrecognized = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'amountUnrecognized' field has been set.
      * @return True if the 'amountUnrecognized' field has been set, false otherwise.
      */
    public boolean hasAmountUnrecognized() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'amountUnrecognized' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearAmountUnrecognized() {
      amountUnrecognized = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'externalId' field.
      * @return The value.
      */
    public java.lang.String getExternalId() {
      return externalId;
    }


    /**
      * Sets the value of the 'externalId' field.
      * @param value The value of 'externalId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setExternalId(java.lang.String value) {
      validate(fields()[27], value);
      this.externalId = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'externalId' field has been set.
      * @return True if the 'externalId' field has been set, false otherwise.
      */
    public boolean hasExternalId() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'externalId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearExternalId() {
      externalId = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'externalLoanId' field.
      * @return The value.
      */
    public java.lang.String getExternalLoanId() {
      return externalLoanId;
    }


    /**
      * Sets the value of the 'externalLoanId' field.
      * @param value The value of 'externalLoanId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setExternalLoanId(java.lang.String value) {
      validate(fields()[28], value);
      this.externalLoanId = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'externalLoanId' field has been set.
      * @return True if the 'externalLoanId' field has been set, false otherwise.
      */
    public boolean hasExternalLoanId() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'externalLoanId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearExternalLoanId() {
      externalLoanId = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'externalOwnerId' field.
      * @return The value.
      */
    public java.lang.String getExternalOwnerId() {
      return externalOwnerId;
    }


    /**
      * Sets the value of the 'externalOwnerId' field.
      * @param value The value of 'externalOwnerId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setExternalOwnerId(java.lang.String value) {
      validate(fields()[29], value);
      this.externalOwnerId = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'externalOwnerId' field has been set.
      * @return True if the 'externalOwnerId' field has been set, false otherwise.
      */
    public boolean hasExternalOwnerId() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'externalOwnerId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearExternalOwnerId() {
      externalOwnerId = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'submittedOnDate' field.
      * @return The value.
      */
    public java.lang.String getSubmittedOnDate() {
      return submittedOnDate;
    }


    /**
      * Sets the value of the 'submittedOnDate' field.
      * @param value The value of 'submittedOnDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder setSubmittedOnDate(java.lang.String value) {
      validate(fields()[30], value);
      this.submittedOnDate = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'submittedOnDate' field has been set.
      * @return True if the 'submittedOnDate' field has been set, false otherwise.
      */
    public boolean hasSubmittedOnDate() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'submittedOnDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanChargeDataV1.Builder clearSubmittedOnDate() {
      submittedOnDate = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public LoanChargeDataV1 build() {
      try {
        LoanChargeDataV1 record = new LoanChargeDataV1();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.chargeId = fieldSetFlags()[1] ? this.chargeId : (java.lang.Long) defaultValue(fields()[1]);
        record.name = fieldSetFlags()[2] ? this.name : (java.lang.String) defaultValue(fields()[2]);
        if (chargeTimeTypeBuilder != null) {
          try {
            record.chargeTimeType = this.chargeTimeTypeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("chargeTimeType"));
            throw e;
          }
        } else {
          record.chargeTimeType = fieldSetFlags()[3] ? this.chargeTimeType : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[3]);
        }
        record.dueDate = fieldSetFlags()[4] ? this.dueDate : (java.lang.String) defaultValue(fields()[4]);
        if (chargeCalculationTypeBuilder != null) {
          try {
            record.chargeCalculationType = this.chargeCalculationTypeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("chargeCalculationType"));
            throw e;
          }
        } else {
          record.chargeCalculationType = fieldSetFlags()[5] ? this.chargeCalculationType : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[5]);
        }
        record.percentage = fieldSetFlags()[6] ? this.percentage : (java.math.BigDecimal) defaultValue(fields()[6]);
        record.amountPercentageAppliedTo = fieldSetFlags()[7] ? this.amountPercentageAppliedTo : (java.math.BigDecimal) defaultValue(fields()[7]);
        if (currencyBuilder != null) {
          try {
            record.currency = this.currencyBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("currency"));
            throw e;
          }
        } else {
          record.currency = fieldSetFlags()[8] ? this.currency : (org.apache.fineract.avro.generic.v1.CurrencyDataV1) defaultValue(fields()[8]);
        }
        record.amount = fieldSetFlags()[9] ? this.amount : (java.math.BigDecimal) defaultValue(fields()[9]);
        record.amountPaid = fieldSetFlags()[10] ? this.amountPaid : (java.math.BigDecimal) defaultValue(fields()[10]);
        record.amountWaived = fieldSetFlags()[11] ? this.amountWaived : (java.math.BigDecimal) defaultValue(fields()[11]);
        record.amountWrittenOff = fieldSetFlags()[12] ? this.amountWrittenOff : (java.math.BigDecimal) defaultValue(fields()[12]);
        record.amountOutstanding = fieldSetFlags()[13] ? this.amountOutstanding : (java.math.BigDecimal) defaultValue(fields()[13]);
        record.amountOrPercentage = fieldSetFlags()[14] ? this.amountOrPercentage : (java.math.BigDecimal) defaultValue(fields()[14]);
        record.chargeOptions = fieldSetFlags()[15] ? this.chargeOptions : (java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1>) defaultValue(fields()[15]);
        record.penalty = fieldSetFlags()[16] ? this.penalty : (java.lang.Boolean) defaultValue(fields()[16]);
        if (chargePaymentModeBuilder != null) {
          try {
            record.chargePaymentMode = this.chargePaymentModeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("chargePaymentMode"));
            throw e;
          }
        } else {
          record.chargePaymentMode = fieldSetFlags()[17] ? this.chargePaymentMode : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[17]);
        }
        record.paid = fieldSetFlags()[18] ? this.paid : (java.lang.Boolean) defaultValue(fields()[18]);
        record.waived = fieldSetFlags()[19] ? this.waived : (java.lang.Boolean) defaultValue(fields()[19]);
        record.chargePayable = fieldSetFlags()[20] ? this.chargePayable : (java.lang.Boolean) defaultValue(fields()[20]);
        record.loanId = fieldSetFlags()[21] ? this.loanId : (java.lang.Long) defaultValue(fields()[21]);
        record.minCap = fieldSetFlags()[22] ? this.minCap : (java.math.BigDecimal) defaultValue(fields()[22]);
        record.maxCap = fieldSetFlags()[23] ? this.maxCap : (java.math.BigDecimal) defaultValue(fields()[23]);
        record.installmentChargeData = fieldSetFlags()[24] ? this.installmentChargeData : (java.util.List<org.apache.fineract.avro.loan.v1.LoanInstallmentChargeDataV1>) defaultValue(fields()[24]);
        record.amountAccrued = fieldSetFlags()[25] ? this.amountAccrued : (java.math.BigDecimal) defaultValue(fields()[25]);
        record.amountUnrecognized = fieldSetFlags()[26] ? this.amountUnrecognized : (java.math.BigDecimal) defaultValue(fields()[26]);
        record.externalId = fieldSetFlags()[27] ? this.externalId : (java.lang.String) defaultValue(fields()[27]);
        record.externalLoanId = fieldSetFlags()[28] ? this.externalLoanId : (java.lang.String) defaultValue(fields()[28]);
        record.externalOwnerId = fieldSetFlags()[29] ? this.externalOwnerId : (java.lang.String) defaultValue(fields()[29]);
        record.submittedOnDate = fieldSetFlags()[30] ? this.submittedOnDate : (java.lang.String) defaultValue(fields()[30]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<LoanChargeDataV1>
    WRITER$ = (org.apache.avro.io.DatumWriter<LoanChargeDataV1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<LoanChargeDataV1>
    READER$ = (org.apache.avro.io.DatumReader<LoanChargeDataV1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










