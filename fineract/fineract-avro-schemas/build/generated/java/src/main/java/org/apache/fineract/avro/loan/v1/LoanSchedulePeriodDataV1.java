/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

package org.apache.fineract.avro.loan.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class LoanSchedulePeriodDataV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, org.apache.fineract.avro.generator.ByteBufferSerializable {
  private static final long serialVersionUID = -2881367615109420830L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LoanSchedulePeriodDataV1\",\"namespace\":\"org.apache.fineract.avro.loan.v1\",\"fields\":[{\"name\":\"period\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"fromDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"dueDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"obligationsMetOnDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"complete\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"daysInPeriod\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"principalDisbursed\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"principalOriginalDue\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"principalDue\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"principalPaid\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"principalWrittenOff\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"principalOutstanding\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"principalLoanBalanceOutstanding\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"interestOriginalDue\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"interestDue\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"interestPaid\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"interestWaived\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"interestWrittenOff\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"interestOutstanding\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"feeChargesDue\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"feeChargesPaid\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"feeChargesWaived\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"feeChargesWrittenOff\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"feeChargesOutstanding\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"penaltyChargesDue\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"penaltyChargesPaid\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"penaltyChargesWaived\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"penaltyChargesWrittenOff\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"penaltyChargesOutstanding\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalOriginalDueForPeriod\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalDueForPeriod\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalPaidForPeriod\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalPaidInAdvanceForPeriod\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalPaidLateForPeriod\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalWaivedForPeriod\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalWrittenOffForPeriod\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalOutstandingForPeriod\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalOverdue\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalActualCostOfLoanForPeriod\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalInstallmentAmountForPeriod\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalCredits\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"downPaymentPeriod\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<LoanSchedulePeriodDataV1> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<LoanSchedulePeriodDataV1> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<LoanSchedulePeriodDataV1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<LoanSchedulePeriodDataV1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<LoanSchedulePeriodDataV1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this LoanSchedulePeriodDataV1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  @Override
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a LoanSchedulePeriodDataV1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a LoanSchedulePeriodDataV1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static LoanSchedulePeriodDataV1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.Integer period;
  private java.lang.String fromDate;
  private java.lang.String dueDate;
  private java.lang.String obligationsMetOnDate;
  private java.lang.Boolean complete;
  private java.lang.Integer daysInPeriod;
  private java.math.BigDecimal principalDisbursed;
  private java.math.BigDecimal principalOriginalDue;
  private java.math.BigDecimal principalDue;
  private java.math.BigDecimal principalPaid;
  private java.math.BigDecimal principalWrittenOff;
  private java.math.BigDecimal principalOutstanding;
  private java.math.BigDecimal principalLoanBalanceOutstanding;
  private java.math.BigDecimal interestOriginalDue;
  private java.math.BigDecimal interestDue;
  private java.math.BigDecimal interestPaid;
  private java.math.BigDecimal interestWaived;
  private java.math.BigDecimal interestWrittenOff;
  private java.math.BigDecimal interestOutstanding;
  private java.math.BigDecimal feeChargesDue;
  private java.math.BigDecimal feeChargesPaid;
  private java.math.BigDecimal feeChargesWaived;
  private java.math.BigDecimal feeChargesWrittenOff;
  private java.math.BigDecimal feeChargesOutstanding;
  private java.math.BigDecimal penaltyChargesDue;
  private java.math.BigDecimal penaltyChargesPaid;
  private java.math.BigDecimal penaltyChargesWaived;
  private java.math.BigDecimal penaltyChargesWrittenOff;
  private java.math.BigDecimal penaltyChargesOutstanding;
  private java.math.BigDecimal totalOriginalDueForPeriod;
  private java.math.BigDecimal totalDueForPeriod;
  private java.math.BigDecimal totalPaidForPeriod;
  private java.math.BigDecimal totalPaidInAdvanceForPeriod;
  private java.math.BigDecimal totalPaidLateForPeriod;
  private java.math.BigDecimal totalWaivedForPeriod;
  private java.math.BigDecimal totalWrittenOffForPeriod;
  private java.math.BigDecimal totalOutstandingForPeriod;
  private java.math.BigDecimal totalOverdue;
  private java.math.BigDecimal totalActualCostOfLoanForPeriod;
  private java.math.BigDecimal totalInstallmentAmountForPeriod;
  private java.math.BigDecimal totalCredits;
  private java.lang.Boolean downPaymentPeriod;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LoanSchedulePeriodDataV1() {}

  /**
   * All-args constructor.
   * @param period The new value for period
   * @param fromDate The new value for fromDate
   * @param dueDate The new value for dueDate
   * @param obligationsMetOnDate The new value for obligationsMetOnDate
   * @param complete The new value for complete
   * @param daysInPeriod The new value for daysInPeriod
   * @param principalDisbursed The new value for principalDisbursed
   * @param principalOriginalDue The new value for principalOriginalDue
   * @param principalDue The new value for principalDue
   * @param principalPaid The new value for principalPaid
   * @param principalWrittenOff The new value for principalWrittenOff
   * @param principalOutstanding The new value for principalOutstanding
   * @param principalLoanBalanceOutstanding The new value for principalLoanBalanceOutstanding
   * @param interestOriginalDue The new value for interestOriginalDue
   * @param interestDue The new value for interestDue
   * @param interestPaid The new value for interestPaid
   * @param interestWaived The new value for interestWaived
   * @param interestWrittenOff The new value for interestWrittenOff
   * @param interestOutstanding The new value for interestOutstanding
   * @param feeChargesDue The new value for feeChargesDue
   * @param feeChargesPaid The new value for feeChargesPaid
   * @param feeChargesWaived The new value for feeChargesWaived
   * @param feeChargesWrittenOff The new value for feeChargesWrittenOff
   * @param feeChargesOutstanding The new value for feeChargesOutstanding
   * @param penaltyChargesDue The new value for penaltyChargesDue
   * @param penaltyChargesPaid The new value for penaltyChargesPaid
   * @param penaltyChargesWaived The new value for penaltyChargesWaived
   * @param penaltyChargesWrittenOff The new value for penaltyChargesWrittenOff
   * @param penaltyChargesOutstanding The new value for penaltyChargesOutstanding
   * @param totalOriginalDueForPeriod The new value for totalOriginalDueForPeriod
   * @param totalDueForPeriod The new value for totalDueForPeriod
   * @param totalPaidForPeriod The new value for totalPaidForPeriod
   * @param totalPaidInAdvanceForPeriod The new value for totalPaidInAdvanceForPeriod
   * @param totalPaidLateForPeriod The new value for totalPaidLateForPeriod
   * @param totalWaivedForPeriod The new value for totalWaivedForPeriod
   * @param totalWrittenOffForPeriod The new value for totalWrittenOffForPeriod
   * @param totalOutstandingForPeriod The new value for totalOutstandingForPeriod
   * @param totalOverdue The new value for totalOverdue
   * @param totalActualCostOfLoanForPeriod The new value for totalActualCostOfLoanForPeriod
   * @param totalInstallmentAmountForPeriod The new value for totalInstallmentAmountForPeriod
   * @param totalCredits The new value for totalCredits
   * @param downPaymentPeriod The new value for downPaymentPeriod
   */
  public LoanSchedulePeriodDataV1(java.lang.Integer period, java.lang.String fromDate, java.lang.String dueDate, java.lang.String obligationsMetOnDate, java.lang.Boolean complete, java.lang.Integer daysInPeriod, java.math.BigDecimal principalDisbursed, java.math.BigDecimal principalOriginalDue, java.math.BigDecimal principalDue, java.math.BigDecimal principalPaid, java.math.BigDecimal principalWrittenOff, java.math.BigDecimal principalOutstanding, java.math.BigDecimal principalLoanBalanceOutstanding, java.math.BigDecimal interestOriginalDue, java.math.BigDecimal interestDue, java.math.BigDecimal interestPaid, java.math.BigDecimal interestWaived, java.math.BigDecimal interestWrittenOff, java.math.BigDecimal interestOutstanding, java.math.BigDecimal feeChargesDue, java.math.BigDecimal feeChargesPaid, java.math.BigDecimal feeChargesWaived, java.math.BigDecimal feeChargesWrittenOff, java.math.BigDecimal feeChargesOutstanding, java.math.BigDecimal penaltyChargesDue, java.math.BigDecimal penaltyChargesPaid, java.math.BigDecimal penaltyChargesWaived, java.math.BigDecimal penaltyChargesWrittenOff, java.math.BigDecimal penaltyChargesOutstanding, java.math.BigDecimal totalOriginalDueForPeriod, java.math.BigDecimal totalDueForPeriod, java.math.BigDecimal totalPaidForPeriod, java.math.BigDecimal totalPaidInAdvanceForPeriod, java.math.BigDecimal totalPaidLateForPeriod, java.math.BigDecimal totalWaivedForPeriod, java.math.BigDecimal totalWrittenOffForPeriod, java.math.BigDecimal totalOutstandingForPeriod, java.math.BigDecimal totalOverdue, java.math.BigDecimal totalActualCostOfLoanForPeriod, java.math.BigDecimal totalInstallmentAmountForPeriod, java.math.BigDecimal totalCredits, java.lang.Boolean downPaymentPeriod) {
    this.period = period;
    this.fromDate = fromDate;
    this.dueDate = dueDate;
    this.obligationsMetOnDate = obligationsMetOnDate;
    this.complete = complete;
    this.daysInPeriod = daysInPeriod;
    this.principalDisbursed = principalDisbursed;
    this.principalOriginalDue = principalOriginalDue;
    this.principalDue = principalDue;
    this.principalPaid = principalPaid;
    this.principalWrittenOff = principalWrittenOff;
    this.principalOutstanding = principalOutstanding;
    this.principalLoanBalanceOutstanding = principalLoanBalanceOutstanding;
    this.interestOriginalDue = interestOriginalDue;
    this.interestDue = interestDue;
    this.interestPaid = interestPaid;
    this.interestWaived = interestWaived;
    this.interestWrittenOff = interestWrittenOff;
    this.interestOutstanding = interestOutstanding;
    this.feeChargesDue = feeChargesDue;
    this.feeChargesPaid = feeChargesPaid;
    this.feeChargesWaived = feeChargesWaived;
    this.feeChargesWrittenOff = feeChargesWrittenOff;
    this.feeChargesOutstanding = feeChargesOutstanding;
    this.penaltyChargesDue = penaltyChargesDue;
    this.penaltyChargesPaid = penaltyChargesPaid;
    this.penaltyChargesWaived = penaltyChargesWaived;
    this.penaltyChargesWrittenOff = penaltyChargesWrittenOff;
    this.penaltyChargesOutstanding = penaltyChargesOutstanding;
    this.totalOriginalDueForPeriod = totalOriginalDueForPeriod;
    this.totalDueForPeriod = totalDueForPeriod;
    this.totalPaidForPeriod = totalPaidForPeriod;
    this.totalPaidInAdvanceForPeriod = totalPaidInAdvanceForPeriod;
    this.totalPaidLateForPeriod = totalPaidLateForPeriod;
    this.totalWaivedForPeriod = totalWaivedForPeriod;
    this.totalWrittenOffForPeriod = totalWrittenOffForPeriod;
    this.totalOutstandingForPeriod = totalOutstandingForPeriod;
    this.totalOverdue = totalOverdue;
    this.totalActualCostOfLoanForPeriod = totalActualCostOfLoanForPeriod;
    this.totalInstallmentAmountForPeriod = totalInstallmentAmountForPeriod;
    this.totalCredits = totalCredits;
    this.downPaymentPeriod = downPaymentPeriod;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return period;
    case 1: return fromDate;
    case 2: return dueDate;
    case 3: return obligationsMetOnDate;
    case 4: return complete;
    case 5: return daysInPeriod;
    case 6: return principalDisbursed;
    case 7: return principalOriginalDue;
    case 8: return principalDue;
    case 9: return principalPaid;
    case 10: return principalWrittenOff;
    case 11: return principalOutstanding;
    case 12: return principalLoanBalanceOutstanding;
    case 13: return interestOriginalDue;
    case 14: return interestDue;
    case 15: return interestPaid;
    case 16: return interestWaived;
    case 17: return interestWrittenOff;
    case 18: return interestOutstanding;
    case 19: return feeChargesDue;
    case 20: return feeChargesPaid;
    case 21: return feeChargesWaived;
    case 22: return feeChargesWrittenOff;
    case 23: return feeChargesOutstanding;
    case 24: return penaltyChargesDue;
    case 25: return penaltyChargesPaid;
    case 26: return penaltyChargesWaived;
    case 27: return penaltyChargesWrittenOff;
    case 28: return penaltyChargesOutstanding;
    case 29: return totalOriginalDueForPeriod;
    case 30: return totalDueForPeriod;
    case 31: return totalPaidForPeriod;
    case 32: return totalPaidInAdvanceForPeriod;
    case 33: return totalPaidLateForPeriod;
    case 34: return totalWaivedForPeriod;
    case 35: return totalWrittenOffForPeriod;
    case 36: return totalOutstandingForPeriod;
    case 37: return totalOverdue;
    case 38: return totalActualCostOfLoanForPeriod;
    case 39: return totalInstallmentAmountForPeriod;
    case 40: return totalCredits;
    case 41: return downPaymentPeriod;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: period = (java.lang.Integer)value$; break;
    case 1: fromDate = value$ != null ? value$.toString() : null; break;
    case 2: dueDate = value$ != null ? value$.toString() : null; break;
    case 3: obligationsMetOnDate = value$ != null ? value$.toString() : null; break;
    case 4: complete = (java.lang.Boolean)value$; break;
    case 5: daysInPeriod = (java.lang.Integer)value$; break;
    case 6: principalDisbursed = (java.math.BigDecimal)value$; break;
    case 7: principalOriginalDue = (java.math.BigDecimal)value$; break;
    case 8: principalDue = (java.math.BigDecimal)value$; break;
    case 9: principalPaid = (java.math.BigDecimal)value$; break;
    case 10: principalWrittenOff = (java.math.BigDecimal)value$; break;
    case 11: principalOutstanding = (java.math.BigDecimal)value$; break;
    case 12: principalLoanBalanceOutstanding = (java.math.BigDecimal)value$; break;
    case 13: interestOriginalDue = (java.math.BigDecimal)value$; break;
    case 14: interestDue = (java.math.BigDecimal)value$; break;
    case 15: interestPaid = (java.math.BigDecimal)value$; break;
    case 16: interestWaived = (java.math.BigDecimal)value$; break;
    case 17: interestWrittenOff = (java.math.BigDecimal)value$; break;
    case 18: interestOutstanding = (java.math.BigDecimal)value$; break;
    case 19: feeChargesDue = (java.math.BigDecimal)value$; break;
    case 20: feeChargesPaid = (java.math.BigDecimal)value$; break;
    case 21: feeChargesWaived = (java.math.BigDecimal)value$; break;
    case 22: feeChargesWrittenOff = (java.math.BigDecimal)value$; break;
    case 23: feeChargesOutstanding = (java.math.BigDecimal)value$; break;
    case 24: penaltyChargesDue = (java.math.BigDecimal)value$; break;
    case 25: penaltyChargesPaid = (java.math.BigDecimal)value$; break;
    case 26: penaltyChargesWaived = (java.math.BigDecimal)value$; break;
    case 27: penaltyChargesWrittenOff = (java.math.BigDecimal)value$; break;
    case 28: penaltyChargesOutstanding = (java.math.BigDecimal)value$; break;
    case 29: totalOriginalDueForPeriod = (java.math.BigDecimal)value$; break;
    case 30: totalDueForPeriod = (java.math.BigDecimal)value$; break;
    case 31: totalPaidForPeriod = (java.math.BigDecimal)value$; break;
    case 32: totalPaidInAdvanceForPeriod = (java.math.BigDecimal)value$; break;
    case 33: totalPaidLateForPeriod = (java.math.BigDecimal)value$; break;
    case 34: totalWaivedForPeriod = (java.math.BigDecimal)value$; break;
    case 35: totalWrittenOffForPeriod = (java.math.BigDecimal)value$; break;
    case 36: totalOutstandingForPeriod = (java.math.BigDecimal)value$; break;
    case 37: totalOverdue = (java.math.BigDecimal)value$; break;
    case 38: totalActualCostOfLoanForPeriod = (java.math.BigDecimal)value$; break;
    case 39: totalInstallmentAmountForPeriod = (java.math.BigDecimal)value$; break;
    case 40: totalCredits = (java.math.BigDecimal)value$; break;
    case 41: downPaymentPeriod = (java.lang.Boolean)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'period' field.
   * @return The value of the 'period' field.
   */
  public java.lang.Integer getPeriod() {
    return period;
  }


  /**
   * Sets the value of the 'period' field.
   * @param value the value to set.
   */
  public void setPeriod(java.lang.Integer value) {
    this.period = value;
  }

  /**
   * Gets the value of the 'fromDate' field.
   * @return The value of the 'fromDate' field.
   */
  public java.lang.String getFromDate() {
    return fromDate;
  }


  /**
   * Sets the value of the 'fromDate' field.
   * @param value the value to set.
   */
  public void setFromDate(java.lang.String value) {
    this.fromDate = value;
  }

  /**
   * Gets the value of the 'dueDate' field.
   * @return The value of the 'dueDate' field.
   */
  public java.lang.String getDueDate() {
    return dueDate;
  }


  /**
   * Sets the value of the 'dueDate' field.
   * @param value the value to set.
   */
  public void setDueDate(java.lang.String value) {
    this.dueDate = value;
  }

  /**
   * Gets the value of the 'obligationsMetOnDate' field.
   * @return The value of the 'obligationsMetOnDate' field.
   */
  public java.lang.String getObligationsMetOnDate() {
    return obligationsMetOnDate;
  }


  /**
   * Sets the value of the 'obligationsMetOnDate' field.
   * @param value the value to set.
   */
  public void setObligationsMetOnDate(java.lang.String value) {
    this.obligationsMetOnDate = value;
  }

  /**
   * Gets the value of the 'complete' field.
   * @return The value of the 'complete' field.
   */
  public java.lang.Boolean getComplete() {
    return complete;
  }


  /**
   * Sets the value of the 'complete' field.
   * @param value the value to set.
   */
  public void setComplete(java.lang.Boolean value) {
    this.complete = value;
  }

  /**
   * Gets the value of the 'daysInPeriod' field.
   * @return The value of the 'daysInPeriod' field.
   */
  public java.lang.Integer getDaysInPeriod() {
    return daysInPeriod;
  }


  /**
   * Sets the value of the 'daysInPeriod' field.
   * @param value the value to set.
   */
  public void setDaysInPeriod(java.lang.Integer value) {
    this.daysInPeriod = value;
  }

  /**
   * Gets the value of the 'principalDisbursed' field.
   * @return The value of the 'principalDisbursed' field.
   */
  public java.math.BigDecimal getPrincipalDisbursed() {
    return principalDisbursed;
  }


  /**
   * Sets the value of the 'principalDisbursed' field.
   * @param value the value to set.
   */
  public void setPrincipalDisbursed(java.math.BigDecimal value) {
    this.principalDisbursed = value;
  }

  /**
   * Gets the value of the 'principalOriginalDue' field.
   * @return The value of the 'principalOriginalDue' field.
   */
  public java.math.BigDecimal getPrincipalOriginalDue() {
    return principalOriginalDue;
  }


  /**
   * Sets the value of the 'principalOriginalDue' field.
   * @param value the value to set.
   */
  public void setPrincipalOriginalDue(java.math.BigDecimal value) {
    this.principalOriginalDue = value;
  }

  /**
   * Gets the value of the 'principalDue' field.
   * @return The value of the 'principalDue' field.
   */
  public java.math.BigDecimal getPrincipalDue() {
    return principalDue;
  }


  /**
   * Sets the value of the 'principalDue' field.
   * @param value the value to set.
   */
  public void setPrincipalDue(java.math.BigDecimal value) {
    this.principalDue = value;
  }

  /**
   * Gets the value of the 'principalPaid' field.
   * @return The value of the 'principalPaid' field.
   */
  public java.math.BigDecimal getPrincipalPaid() {
    return principalPaid;
  }


  /**
   * Sets the value of the 'principalPaid' field.
   * @param value the value to set.
   */
  public void setPrincipalPaid(java.math.BigDecimal value) {
    this.principalPaid = value;
  }

  /**
   * Gets the value of the 'principalWrittenOff' field.
   * @return The value of the 'principalWrittenOff' field.
   */
  public java.math.BigDecimal getPrincipalWrittenOff() {
    return principalWrittenOff;
  }


  /**
   * Sets the value of the 'principalWrittenOff' field.
   * @param value the value to set.
   */
  public void setPrincipalWrittenOff(java.math.BigDecimal value) {
    this.principalWrittenOff = value;
  }

  /**
   * Gets the value of the 'principalOutstanding' field.
   * @return The value of the 'principalOutstanding' field.
   */
  public java.math.BigDecimal getPrincipalOutstanding() {
    return principalOutstanding;
  }


  /**
   * Sets the value of the 'principalOutstanding' field.
   * @param value the value to set.
   */
  public void setPrincipalOutstanding(java.math.BigDecimal value) {
    this.principalOutstanding = value;
  }

  /**
   * Gets the value of the 'principalLoanBalanceOutstanding' field.
   * @return The value of the 'principalLoanBalanceOutstanding' field.
   */
  public java.math.BigDecimal getPrincipalLoanBalanceOutstanding() {
    return principalLoanBalanceOutstanding;
  }


  /**
   * Sets the value of the 'principalLoanBalanceOutstanding' field.
   * @param value the value to set.
   */
  public void setPrincipalLoanBalanceOutstanding(java.math.BigDecimal value) {
    this.principalLoanBalanceOutstanding = value;
  }

  /**
   * Gets the value of the 'interestOriginalDue' field.
   * @return The value of the 'interestOriginalDue' field.
   */
  public java.math.BigDecimal getInterestOriginalDue() {
    return interestOriginalDue;
  }


  /**
   * Sets the value of the 'interestOriginalDue' field.
   * @param value the value to set.
   */
  public void setInterestOriginalDue(java.math.BigDecimal value) {
    this.interestOriginalDue = value;
  }

  /**
   * Gets the value of the 'interestDue' field.
   * @return The value of the 'interestDue' field.
   */
  public java.math.BigDecimal getInterestDue() {
    return interestDue;
  }


  /**
   * Sets the value of the 'interestDue' field.
   * @param value the value to set.
   */
  public void setInterestDue(java.math.BigDecimal value) {
    this.interestDue = value;
  }

  /**
   * Gets the value of the 'interestPaid' field.
   * @return The value of the 'interestPaid' field.
   */
  public java.math.BigDecimal getInterestPaid() {
    return interestPaid;
  }


  /**
   * Sets the value of the 'interestPaid' field.
   * @param value the value to set.
   */
  public void setInterestPaid(java.math.BigDecimal value) {
    this.interestPaid = value;
  }

  /**
   * Gets the value of the 'interestWaived' field.
   * @return The value of the 'interestWaived' field.
   */
  public java.math.BigDecimal getInterestWaived() {
    return interestWaived;
  }


  /**
   * Sets the value of the 'interestWaived' field.
   * @param value the value to set.
   */
  public void setInterestWaived(java.math.BigDecimal value) {
    this.interestWaived = value;
  }

  /**
   * Gets the value of the 'interestWrittenOff' field.
   * @return The value of the 'interestWrittenOff' field.
   */
  public java.math.BigDecimal getInterestWrittenOff() {
    return interestWrittenOff;
  }


  /**
   * Sets the value of the 'interestWrittenOff' field.
   * @param value the value to set.
   */
  public void setInterestWrittenOff(java.math.BigDecimal value) {
    this.interestWrittenOff = value;
  }

  /**
   * Gets the value of the 'interestOutstanding' field.
   * @return The value of the 'interestOutstanding' field.
   */
  public java.math.BigDecimal getInterestOutstanding() {
    return interestOutstanding;
  }


  /**
   * Sets the value of the 'interestOutstanding' field.
   * @param value the value to set.
   */
  public void setInterestOutstanding(java.math.BigDecimal value) {
    this.interestOutstanding = value;
  }

  /**
   * Gets the value of the 'feeChargesDue' field.
   * @return The value of the 'feeChargesDue' field.
   */
  public java.math.BigDecimal getFeeChargesDue() {
    return feeChargesDue;
  }


  /**
   * Sets the value of the 'feeChargesDue' field.
   * @param value the value to set.
   */
  public void setFeeChargesDue(java.math.BigDecimal value) {
    this.feeChargesDue = value;
  }

  /**
   * Gets the value of the 'feeChargesPaid' field.
   * @return The value of the 'feeChargesPaid' field.
   */
  public java.math.BigDecimal getFeeChargesPaid() {
    return feeChargesPaid;
  }


  /**
   * Sets the value of the 'feeChargesPaid' field.
   * @param value the value to set.
   */
  public void setFeeChargesPaid(java.math.BigDecimal value) {
    this.feeChargesPaid = value;
  }

  /**
   * Gets the value of the 'feeChargesWaived' field.
   * @return The value of the 'feeChargesWaived' field.
   */
  public java.math.BigDecimal getFeeChargesWaived() {
    return feeChargesWaived;
  }


  /**
   * Sets the value of the 'feeChargesWaived' field.
   * @param value the value to set.
   */
  public void setFeeChargesWaived(java.math.BigDecimal value) {
    this.feeChargesWaived = value;
  }

  /**
   * Gets the value of the 'feeChargesWrittenOff' field.
   * @return The value of the 'feeChargesWrittenOff' field.
   */
  public java.math.BigDecimal getFeeChargesWrittenOff() {
    return feeChargesWrittenOff;
  }


  /**
   * Sets the value of the 'feeChargesWrittenOff' field.
   * @param value the value to set.
   */
  public void setFeeChargesWrittenOff(java.math.BigDecimal value) {
    this.feeChargesWrittenOff = value;
  }

  /**
   * Gets the value of the 'feeChargesOutstanding' field.
   * @return The value of the 'feeChargesOutstanding' field.
   */
  public java.math.BigDecimal getFeeChargesOutstanding() {
    return feeChargesOutstanding;
  }


  /**
   * Sets the value of the 'feeChargesOutstanding' field.
   * @param value the value to set.
   */
  public void setFeeChargesOutstanding(java.math.BigDecimal value) {
    this.feeChargesOutstanding = value;
  }

  /**
   * Gets the value of the 'penaltyChargesDue' field.
   * @return The value of the 'penaltyChargesDue' field.
   */
  public java.math.BigDecimal getPenaltyChargesDue() {
    return penaltyChargesDue;
  }


  /**
   * Sets the value of the 'penaltyChargesDue' field.
   * @param value the value to set.
   */
  public void setPenaltyChargesDue(java.math.BigDecimal value) {
    this.penaltyChargesDue = value;
  }

  /**
   * Gets the value of the 'penaltyChargesPaid' field.
   * @return The value of the 'penaltyChargesPaid' field.
   */
  public java.math.BigDecimal getPenaltyChargesPaid() {
    return penaltyChargesPaid;
  }


  /**
   * Sets the value of the 'penaltyChargesPaid' field.
   * @param value the value to set.
   */
  public void setPenaltyChargesPaid(java.math.BigDecimal value) {
    this.penaltyChargesPaid = value;
  }

  /**
   * Gets the value of the 'penaltyChargesWaived' field.
   * @return The value of the 'penaltyChargesWaived' field.
   */
  public java.math.BigDecimal getPenaltyChargesWaived() {
    return penaltyChargesWaived;
  }


  /**
   * Sets the value of the 'penaltyChargesWaived' field.
   * @param value the value to set.
   */
  public void setPenaltyChargesWaived(java.math.BigDecimal value) {
    this.penaltyChargesWaived = value;
  }

  /**
   * Gets the value of the 'penaltyChargesWrittenOff' field.
   * @return The value of the 'penaltyChargesWrittenOff' field.
   */
  public java.math.BigDecimal getPenaltyChargesWrittenOff() {
    return penaltyChargesWrittenOff;
  }


  /**
   * Sets the value of the 'penaltyChargesWrittenOff' field.
   * @param value the value to set.
   */
  public void setPenaltyChargesWrittenOff(java.math.BigDecimal value) {
    this.penaltyChargesWrittenOff = value;
  }

  /**
   * Gets the value of the 'penaltyChargesOutstanding' field.
   * @return The value of the 'penaltyChargesOutstanding' field.
   */
  public java.math.BigDecimal getPenaltyChargesOutstanding() {
    return penaltyChargesOutstanding;
  }


  /**
   * Sets the value of the 'penaltyChargesOutstanding' field.
   * @param value the value to set.
   */
  public void setPenaltyChargesOutstanding(java.math.BigDecimal value) {
    this.penaltyChargesOutstanding = value;
  }

  /**
   * Gets the value of the 'totalOriginalDueForPeriod' field.
   * @return The value of the 'totalOriginalDueForPeriod' field.
   */
  public java.math.BigDecimal getTotalOriginalDueForPeriod() {
    return totalOriginalDueForPeriod;
  }


  /**
   * Sets the value of the 'totalOriginalDueForPeriod' field.
   * @param value the value to set.
   */
  public void setTotalOriginalDueForPeriod(java.math.BigDecimal value) {
    this.totalOriginalDueForPeriod = value;
  }

  /**
   * Gets the value of the 'totalDueForPeriod' field.
   * @return The value of the 'totalDueForPeriod' field.
   */
  public java.math.BigDecimal getTotalDueForPeriod() {
    return totalDueForPeriod;
  }


  /**
   * Sets the value of the 'totalDueForPeriod' field.
   * @param value the value to set.
   */
  public void setTotalDueForPeriod(java.math.BigDecimal value) {
    this.totalDueForPeriod = value;
  }

  /**
   * Gets the value of the 'totalPaidForPeriod' field.
   * @return The value of the 'totalPaidForPeriod' field.
   */
  public java.math.BigDecimal getTotalPaidForPeriod() {
    return totalPaidForPeriod;
  }


  /**
   * Sets the value of the 'totalPaidForPeriod' field.
   * @param value the value to set.
   */
  public void setTotalPaidForPeriod(java.math.BigDecimal value) {
    this.totalPaidForPeriod = value;
  }

  /**
   * Gets the value of the 'totalPaidInAdvanceForPeriod' field.
   * @return The value of the 'totalPaidInAdvanceForPeriod' field.
   */
  public java.math.BigDecimal getTotalPaidInAdvanceForPeriod() {
    return totalPaidInAdvanceForPeriod;
  }


  /**
   * Sets the value of the 'totalPaidInAdvanceForPeriod' field.
   * @param value the value to set.
   */
  public void setTotalPaidInAdvanceForPeriod(java.math.BigDecimal value) {
    this.totalPaidInAdvanceForPeriod = value;
  }

  /**
   * Gets the value of the 'totalPaidLateForPeriod' field.
   * @return The value of the 'totalPaidLateForPeriod' field.
   */
  public java.math.BigDecimal getTotalPaidLateForPeriod() {
    return totalPaidLateForPeriod;
  }


  /**
   * Sets the value of the 'totalPaidLateForPeriod' field.
   * @param value the value to set.
   */
  public void setTotalPaidLateForPeriod(java.math.BigDecimal value) {
    this.totalPaidLateForPeriod = value;
  }

  /**
   * Gets the value of the 'totalWaivedForPeriod' field.
   * @return The value of the 'totalWaivedForPeriod' field.
   */
  public java.math.BigDecimal getTotalWaivedForPeriod() {
    return totalWaivedForPeriod;
  }


  /**
   * Sets the value of the 'totalWaivedForPeriod' field.
   * @param value the value to set.
   */
  public void setTotalWaivedForPeriod(java.math.BigDecimal value) {
    this.totalWaivedForPeriod = value;
  }

  /**
   * Gets the value of the 'totalWrittenOffForPeriod' field.
   * @return The value of the 'totalWrittenOffForPeriod' field.
   */
  public java.math.BigDecimal getTotalWrittenOffForPeriod() {
    return totalWrittenOffForPeriod;
  }


  /**
   * Sets the value of the 'totalWrittenOffForPeriod' field.
   * @param value the value to set.
   */
  public void setTotalWrittenOffForPeriod(java.math.BigDecimal value) {
    this.totalWrittenOffForPeriod = value;
  }

  /**
   * Gets the value of the 'totalOutstandingForPeriod' field.
   * @return The value of the 'totalOutstandingForPeriod' field.
   */
  public java.math.BigDecimal getTotalOutstandingForPeriod() {
    return totalOutstandingForPeriod;
  }


  /**
   * Sets the value of the 'totalOutstandingForPeriod' field.
   * @param value the value to set.
   */
  public void setTotalOutstandingForPeriod(java.math.BigDecimal value) {
    this.totalOutstandingForPeriod = value;
  }

  /**
   * Gets the value of the 'totalOverdue' field.
   * @return The value of the 'totalOverdue' field.
   */
  public java.math.BigDecimal getTotalOverdue() {
    return totalOverdue;
  }


  /**
   * Sets the value of the 'totalOverdue' field.
   * @param value the value to set.
   */
  public void setTotalOverdue(java.math.BigDecimal value) {
    this.totalOverdue = value;
  }

  /**
   * Gets the value of the 'totalActualCostOfLoanForPeriod' field.
   * @return The value of the 'totalActualCostOfLoanForPeriod' field.
   */
  public java.math.BigDecimal getTotalActualCostOfLoanForPeriod() {
    return totalActualCostOfLoanForPeriod;
  }


  /**
   * Sets the value of the 'totalActualCostOfLoanForPeriod' field.
   * @param value the value to set.
   */
  public void setTotalActualCostOfLoanForPeriod(java.math.BigDecimal value) {
    this.totalActualCostOfLoanForPeriod = value;
  }

  /**
   * Gets the value of the 'totalInstallmentAmountForPeriod' field.
   * @return The value of the 'totalInstallmentAmountForPeriod' field.
   */
  public java.math.BigDecimal getTotalInstallmentAmountForPeriod() {
    return totalInstallmentAmountForPeriod;
  }


  /**
   * Sets the value of the 'totalInstallmentAmountForPeriod' field.
   * @param value the value to set.
   */
  public void setTotalInstallmentAmountForPeriod(java.math.BigDecimal value) {
    this.totalInstallmentAmountForPeriod = value;
  }

  /**
   * Gets the value of the 'totalCredits' field.
   * @return The value of the 'totalCredits' field.
   */
  public java.math.BigDecimal getTotalCredits() {
    return totalCredits;
  }


  /**
   * Sets the value of the 'totalCredits' field.
   * @param value the value to set.
   */
  public void setTotalCredits(java.math.BigDecimal value) {
    this.totalCredits = value;
  }

  /**
   * Gets the value of the 'downPaymentPeriod' field.
   * @return The value of the 'downPaymentPeriod' field.
   */
  public java.lang.Boolean getDownPaymentPeriod() {
    return downPaymentPeriod;
  }


  /**
   * Sets the value of the 'downPaymentPeriod' field.
   * @param value the value to set.
   */
  public void setDownPaymentPeriod(java.lang.Boolean value) {
    this.downPaymentPeriod = value;
  }

  /**
   * Creates a new LoanSchedulePeriodDataV1 RecordBuilder.
   * @return A new LoanSchedulePeriodDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder newBuilder() {
    return new org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder();
  }

  /**
   * Creates a new LoanSchedulePeriodDataV1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LoanSchedulePeriodDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder newBuilder(org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder other) {
    if (other == null) {
      return new org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder(other);
    }
  }

  /**
   * Creates a new LoanSchedulePeriodDataV1 RecordBuilder by copying an existing LoanSchedulePeriodDataV1 instance.
   * @param other The existing instance to copy.
   * @return A new LoanSchedulePeriodDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder newBuilder(org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1 other) {
    if (other == null) {
      return new org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder(other);
    }
  }

  /**
   * RecordBuilder for LoanSchedulePeriodDataV1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LoanSchedulePeriodDataV1>
    implements org.apache.avro.data.RecordBuilder<LoanSchedulePeriodDataV1> {

    private java.lang.Integer period;
    private java.lang.String fromDate;
    private java.lang.String dueDate;
    private java.lang.String obligationsMetOnDate;
    private java.lang.Boolean complete;
    private java.lang.Integer daysInPeriod;
    private java.math.BigDecimal principalDisbursed;
    private java.math.BigDecimal principalOriginalDue;
    private java.math.BigDecimal principalDue;
    private java.math.BigDecimal principalPaid;
    private java.math.BigDecimal principalWrittenOff;
    private java.math.BigDecimal principalOutstanding;
    private java.math.BigDecimal principalLoanBalanceOutstanding;
    private java.math.BigDecimal interestOriginalDue;
    private java.math.BigDecimal interestDue;
    private java.math.BigDecimal interestPaid;
    private java.math.BigDecimal interestWaived;
    private java.math.BigDecimal interestWrittenOff;
    private java.math.BigDecimal interestOutstanding;
    private java.math.BigDecimal feeChargesDue;
    private java.math.BigDecimal feeChargesPaid;
    private java.math.BigDecimal feeChargesWaived;
    private java.math.BigDecimal feeChargesWrittenOff;
    private java.math.BigDecimal feeChargesOutstanding;
    private java.math.BigDecimal penaltyChargesDue;
    private java.math.BigDecimal penaltyChargesPaid;
    private java.math.BigDecimal penaltyChargesWaived;
    private java.math.BigDecimal penaltyChargesWrittenOff;
    private java.math.BigDecimal penaltyChargesOutstanding;
    private java.math.BigDecimal totalOriginalDueForPeriod;
    private java.math.BigDecimal totalDueForPeriod;
    private java.math.BigDecimal totalPaidForPeriod;
    private java.math.BigDecimal totalPaidInAdvanceForPeriod;
    private java.math.BigDecimal totalPaidLateForPeriod;
    private java.math.BigDecimal totalWaivedForPeriod;
    private java.math.BigDecimal totalWrittenOffForPeriod;
    private java.math.BigDecimal totalOutstandingForPeriod;
    private java.math.BigDecimal totalOverdue;
    private java.math.BigDecimal totalActualCostOfLoanForPeriod;
    private java.math.BigDecimal totalInstallmentAmountForPeriod;
    private java.math.BigDecimal totalCredits;
    private java.lang.Boolean downPaymentPeriod;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.period)) {
        this.period = data().deepCopy(fields()[0].schema(), other.period);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.fromDate)) {
        this.fromDate = data().deepCopy(fields()[1].schema(), other.fromDate);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.dueDate)) {
        this.dueDate = data().deepCopy(fields()[2].schema(), other.dueDate);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.obligationsMetOnDate)) {
        this.obligationsMetOnDate = data().deepCopy(fields()[3].schema(), other.obligationsMetOnDate);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.complete)) {
        this.complete = data().deepCopy(fields()[4].schema(), other.complete);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.daysInPeriod)) {
        this.daysInPeriod = data().deepCopy(fields()[5].schema(), other.daysInPeriod);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.principalDisbursed)) {
        this.principalDisbursed = data().deepCopy(fields()[6].schema(), other.principalDisbursed);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.principalOriginalDue)) {
        this.principalOriginalDue = data().deepCopy(fields()[7].schema(), other.principalOriginalDue);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.principalDue)) {
        this.principalDue = data().deepCopy(fields()[8].schema(), other.principalDue);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.principalPaid)) {
        this.principalPaid = data().deepCopy(fields()[9].schema(), other.principalPaid);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.principalWrittenOff)) {
        this.principalWrittenOff = data().deepCopy(fields()[10].schema(), other.principalWrittenOff);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.principalOutstanding)) {
        this.principalOutstanding = data().deepCopy(fields()[11].schema(), other.principalOutstanding);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.principalLoanBalanceOutstanding)) {
        this.principalLoanBalanceOutstanding = data().deepCopy(fields()[12].schema(), other.principalLoanBalanceOutstanding);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.interestOriginalDue)) {
        this.interestOriginalDue = data().deepCopy(fields()[13].schema(), other.interestOriginalDue);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.interestDue)) {
        this.interestDue = data().deepCopy(fields()[14].schema(), other.interestDue);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.interestPaid)) {
        this.interestPaid = data().deepCopy(fields()[15].schema(), other.interestPaid);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.interestWaived)) {
        this.interestWaived = data().deepCopy(fields()[16].schema(), other.interestWaived);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.interestWrittenOff)) {
        this.interestWrittenOff = data().deepCopy(fields()[17].schema(), other.interestWrittenOff);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.interestOutstanding)) {
        this.interestOutstanding = data().deepCopy(fields()[18].schema(), other.interestOutstanding);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.feeChargesDue)) {
        this.feeChargesDue = data().deepCopy(fields()[19].schema(), other.feeChargesDue);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.feeChargesPaid)) {
        this.feeChargesPaid = data().deepCopy(fields()[20].schema(), other.feeChargesPaid);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.feeChargesWaived)) {
        this.feeChargesWaived = data().deepCopy(fields()[21].schema(), other.feeChargesWaived);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.feeChargesWrittenOff)) {
        this.feeChargesWrittenOff = data().deepCopy(fields()[22].schema(), other.feeChargesWrittenOff);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.feeChargesOutstanding)) {
        this.feeChargesOutstanding = data().deepCopy(fields()[23].schema(), other.feeChargesOutstanding);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.penaltyChargesDue)) {
        this.penaltyChargesDue = data().deepCopy(fields()[24].schema(), other.penaltyChargesDue);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
      if (isValidValue(fields()[25], other.penaltyChargesPaid)) {
        this.penaltyChargesPaid = data().deepCopy(fields()[25].schema(), other.penaltyChargesPaid);
        fieldSetFlags()[25] = other.fieldSetFlags()[25];
      }
      if (isValidValue(fields()[26], other.penaltyChargesWaived)) {
        this.penaltyChargesWaived = data().deepCopy(fields()[26].schema(), other.penaltyChargesWaived);
        fieldSetFlags()[26] = other.fieldSetFlags()[26];
      }
      if (isValidValue(fields()[27], other.penaltyChargesWrittenOff)) {
        this.penaltyChargesWrittenOff = data().deepCopy(fields()[27].schema(), other.penaltyChargesWrittenOff);
        fieldSetFlags()[27] = other.fieldSetFlags()[27];
      }
      if (isValidValue(fields()[28], other.penaltyChargesOutstanding)) {
        this.penaltyChargesOutstanding = data().deepCopy(fields()[28].schema(), other.penaltyChargesOutstanding);
        fieldSetFlags()[28] = other.fieldSetFlags()[28];
      }
      if (isValidValue(fields()[29], other.totalOriginalDueForPeriod)) {
        this.totalOriginalDueForPeriod = data().deepCopy(fields()[29].schema(), other.totalOriginalDueForPeriod);
        fieldSetFlags()[29] = other.fieldSetFlags()[29];
      }
      if (isValidValue(fields()[30], other.totalDueForPeriod)) {
        this.totalDueForPeriod = data().deepCopy(fields()[30].schema(), other.totalDueForPeriod);
        fieldSetFlags()[30] = other.fieldSetFlags()[30];
      }
      if (isValidValue(fields()[31], other.totalPaidForPeriod)) {
        this.totalPaidForPeriod = data().deepCopy(fields()[31].schema(), other.totalPaidForPeriod);
        fieldSetFlags()[31] = other.fieldSetFlags()[31];
      }
      if (isValidValue(fields()[32], other.totalPaidInAdvanceForPeriod)) {
        this.totalPaidInAdvanceForPeriod = data().deepCopy(fields()[32].schema(), other.totalPaidInAdvanceForPeriod);
        fieldSetFlags()[32] = other.fieldSetFlags()[32];
      }
      if (isValidValue(fields()[33], other.totalPaidLateForPeriod)) {
        this.totalPaidLateForPeriod = data().deepCopy(fields()[33].schema(), other.totalPaidLateForPeriod);
        fieldSetFlags()[33] = other.fieldSetFlags()[33];
      }
      if (isValidValue(fields()[34], other.totalWaivedForPeriod)) {
        this.totalWaivedForPeriod = data().deepCopy(fields()[34].schema(), other.totalWaivedForPeriod);
        fieldSetFlags()[34] = other.fieldSetFlags()[34];
      }
      if (isValidValue(fields()[35], other.totalWrittenOffForPeriod)) {
        this.totalWrittenOffForPeriod = data().deepCopy(fields()[35].schema(), other.totalWrittenOffForPeriod);
        fieldSetFlags()[35] = other.fieldSetFlags()[35];
      }
      if (isValidValue(fields()[36], other.totalOutstandingForPeriod)) {
        this.totalOutstandingForPeriod = data().deepCopy(fields()[36].schema(), other.totalOutstandingForPeriod);
        fieldSetFlags()[36] = other.fieldSetFlags()[36];
      }
      if (isValidValue(fields()[37], other.totalOverdue)) {
        this.totalOverdue = data().deepCopy(fields()[37].schema(), other.totalOverdue);
        fieldSetFlags()[37] = other.fieldSetFlags()[37];
      }
      if (isValidValue(fields()[38], other.totalActualCostOfLoanForPeriod)) {
        this.totalActualCostOfLoanForPeriod = data().deepCopy(fields()[38].schema(), other.totalActualCostOfLoanForPeriod);
        fieldSetFlags()[38] = other.fieldSetFlags()[38];
      }
      if (isValidValue(fields()[39], other.totalInstallmentAmountForPeriod)) {
        this.totalInstallmentAmountForPeriod = data().deepCopy(fields()[39].schema(), other.totalInstallmentAmountForPeriod);
        fieldSetFlags()[39] = other.fieldSetFlags()[39];
      }
      if (isValidValue(fields()[40], other.totalCredits)) {
        this.totalCredits = data().deepCopy(fields()[40].schema(), other.totalCredits);
        fieldSetFlags()[40] = other.fieldSetFlags()[40];
      }
      if (isValidValue(fields()[41], other.downPaymentPeriod)) {
        this.downPaymentPeriod = data().deepCopy(fields()[41].schema(), other.downPaymentPeriod);
        fieldSetFlags()[41] = other.fieldSetFlags()[41];
      }
    }

    /**
     * Creates a Builder by copying an existing LoanSchedulePeriodDataV1 instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.period)) {
        this.period = data().deepCopy(fields()[0].schema(), other.period);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.fromDate)) {
        this.fromDate = data().deepCopy(fields()[1].schema(), other.fromDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.dueDate)) {
        this.dueDate = data().deepCopy(fields()[2].schema(), other.dueDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.obligationsMetOnDate)) {
        this.obligationsMetOnDate = data().deepCopy(fields()[3].schema(), other.obligationsMetOnDate);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.complete)) {
        this.complete = data().deepCopy(fields()[4].schema(), other.complete);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.daysInPeriod)) {
        this.daysInPeriod = data().deepCopy(fields()[5].schema(), other.daysInPeriod);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.principalDisbursed)) {
        this.principalDisbursed = data().deepCopy(fields()[6].schema(), other.principalDisbursed);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.principalOriginalDue)) {
        this.principalOriginalDue = data().deepCopy(fields()[7].schema(), other.principalOriginalDue);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.principalDue)) {
        this.principalDue = data().deepCopy(fields()[8].schema(), other.principalDue);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.principalPaid)) {
        this.principalPaid = data().deepCopy(fields()[9].schema(), other.principalPaid);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.principalWrittenOff)) {
        this.principalWrittenOff = data().deepCopy(fields()[10].schema(), other.principalWrittenOff);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.principalOutstanding)) {
        this.principalOutstanding = data().deepCopy(fields()[11].schema(), other.principalOutstanding);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.principalLoanBalanceOutstanding)) {
        this.principalLoanBalanceOutstanding = data().deepCopy(fields()[12].schema(), other.principalLoanBalanceOutstanding);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.interestOriginalDue)) {
        this.interestOriginalDue = data().deepCopy(fields()[13].schema(), other.interestOriginalDue);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.interestDue)) {
        this.interestDue = data().deepCopy(fields()[14].schema(), other.interestDue);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.interestPaid)) {
        this.interestPaid = data().deepCopy(fields()[15].schema(), other.interestPaid);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.interestWaived)) {
        this.interestWaived = data().deepCopy(fields()[16].schema(), other.interestWaived);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.interestWrittenOff)) {
        this.interestWrittenOff = data().deepCopy(fields()[17].schema(), other.interestWrittenOff);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.interestOutstanding)) {
        this.interestOutstanding = data().deepCopy(fields()[18].schema(), other.interestOutstanding);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.feeChargesDue)) {
        this.feeChargesDue = data().deepCopy(fields()[19].schema(), other.feeChargesDue);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.feeChargesPaid)) {
        this.feeChargesPaid = data().deepCopy(fields()[20].schema(), other.feeChargesPaid);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.feeChargesWaived)) {
        this.feeChargesWaived = data().deepCopy(fields()[21].schema(), other.feeChargesWaived);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.feeChargesWrittenOff)) {
        this.feeChargesWrittenOff = data().deepCopy(fields()[22].schema(), other.feeChargesWrittenOff);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.feeChargesOutstanding)) {
        this.feeChargesOutstanding = data().deepCopy(fields()[23].schema(), other.feeChargesOutstanding);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.penaltyChargesDue)) {
        this.penaltyChargesDue = data().deepCopy(fields()[24].schema(), other.penaltyChargesDue);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.penaltyChargesPaid)) {
        this.penaltyChargesPaid = data().deepCopy(fields()[25].schema(), other.penaltyChargesPaid);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.penaltyChargesWaived)) {
        this.penaltyChargesWaived = data().deepCopy(fields()[26].schema(), other.penaltyChargesWaived);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.penaltyChargesWrittenOff)) {
        this.penaltyChargesWrittenOff = data().deepCopy(fields()[27].schema(), other.penaltyChargesWrittenOff);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.penaltyChargesOutstanding)) {
        this.penaltyChargesOutstanding = data().deepCopy(fields()[28].schema(), other.penaltyChargesOutstanding);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.totalOriginalDueForPeriod)) {
        this.totalOriginalDueForPeriod = data().deepCopy(fields()[29].schema(), other.totalOriginalDueForPeriod);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.totalDueForPeriod)) {
        this.totalDueForPeriod = data().deepCopy(fields()[30].schema(), other.totalDueForPeriod);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.totalPaidForPeriod)) {
        this.totalPaidForPeriod = data().deepCopy(fields()[31].schema(), other.totalPaidForPeriod);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.totalPaidInAdvanceForPeriod)) {
        this.totalPaidInAdvanceForPeriod = data().deepCopy(fields()[32].schema(), other.totalPaidInAdvanceForPeriod);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.totalPaidLateForPeriod)) {
        this.totalPaidLateForPeriod = data().deepCopy(fields()[33].schema(), other.totalPaidLateForPeriod);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.totalWaivedForPeriod)) {
        this.totalWaivedForPeriod = data().deepCopy(fields()[34].schema(), other.totalWaivedForPeriod);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.totalWrittenOffForPeriod)) {
        this.totalWrittenOffForPeriod = data().deepCopy(fields()[35].schema(), other.totalWrittenOffForPeriod);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.totalOutstandingForPeriod)) {
        this.totalOutstandingForPeriod = data().deepCopy(fields()[36].schema(), other.totalOutstandingForPeriod);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.totalOverdue)) {
        this.totalOverdue = data().deepCopy(fields()[37].schema(), other.totalOverdue);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.totalActualCostOfLoanForPeriod)) {
        this.totalActualCostOfLoanForPeriod = data().deepCopy(fields()[38].schema(), other.totalActualCostOfLoanForPeriod);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.totalInstallmentAmountForPeriod)) {
        this.totalInstallmentAmountForPeriod = data().deepCopy(fields()[39].schema(), other.totalInstallmentAmountForPeriod);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.totalCredits)) {
        this.totalCredits = data().deepCopy(fields()[40].schema(), other.totalCredits);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.downPaymentPeriod)) {
        this.downPaymentPeriod = data().deepCopy(fields()[41].schema(), other.downPaymentPeriod);
        fieldSetFlags()[41] = true;
      }
    }

    /**
      * Gets the value of the 'period' field.
      * @return The value.
      */
    public java.lang.Integer getPeriod() {
      return period;
    }


    /**
      * Sets the value of the 'period' field.
      * @param value The value of 'period'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setPeriod(java.lang.Integer value) {
      validate(fields()[0], value);
      this.period = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'period' field has been set.
      * @return True if the 'period' field has been set, false otherwise.
      */
    public boolean hasPeriod() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'period' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearPeriod() {
      period = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'fromDate' field.
      * @return The value.
      */
    public java.lang.String getFromDate() {
      return fromDate;
    }


    /**
      * Sets the value of the 'fromDate' field.
      * @param value The value of 'fromDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setFromDate(java.lang.String value) {
      validate(fields()[1], value);
      this.fromDate = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'fromDate' field has been set.
      * @return True if the 'fromDate' field has been set, false otherwise.
      */
    public boolean hasFromDate() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'fromDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearFromDate() {
      fromDate = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'dueDate' field.
      * @return The value.
      */
    public java.lang.String getDueDate() {
      return dueDate;
    }


    /**
      * Sets the value of the 'dueDate' field.
      * @param value The value of 'dueDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setDueDate(java.lang.String value) {
      validate(fields()[2], value);
      this.dueDate = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'dueDate' field has been set.
      * @return True if the 'dueDate' field has been set, false otherwise.
      */
    public boolean hasDueDate() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'dueDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearDueDate() {
      dueDate = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'obligationsMetOnDate' field.
      * @return The value.
      */
    public java.lang.String getObligationsMetOnDate() {
      return obligationsMetOnDate;
    }


    /**
      * Sets the value of the 'obligationsMetOnDate' field.
      * @param value The value of 'obligationsMetOnDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setObligationsMetOnDate(java.lang.String value) {
      validate(fields()[3], value);
      this.obligationsMetOnDate = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'obligationsMetOnDate' field has been set.
      * @return True if the 'obligationsMetOnDate' field has been set, false otherwise.
      */
    public boolean hasObligationsMetOnDate() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'obligationsMetOnDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearObligationsMetOnDate() {
      obligationsMetOnDate = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'complete' field.
      * @return The value.
      */
    public java.lang.Boolean getComplete() {
      return complete;
    }


    /**
      * Sets the value of the 'complete' field.
      * @param value The value of 'complete'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setComplete(java.lang.Boolean value) {
      validate(fields()[4], value);
      this.complete = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'complete' field has been set.
      * @return True if the 'complete' field has been set, false otherwise.
      */
    public boolean hasComplete() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'complete' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearComplete() {
      complete = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'daysInPeriod' field.
      * @return The value.
      */
    public java.lang.Integer getDaysInPeriod() {
      return daysInPeriod;
    }


    /**
      * Sets the value of the 'daysInPeriod' field.
      * @param value The value of 'daysInPeriod'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setDaysInPeriod(java.lang.Integer value) {
      validate(fields()[5], value);
      this.daysInPeriod = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'daysInPeriod' field has been set.
      * @return True if the 'daysInPeriod' field has been set, false otherwise.
      */
    public boolean hasDaysInPeriod() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'daysInPeriod' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearDaysInPeriod() {
      daysInPeriod = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'principalDisbursed' field.
      * @return The value.
      */
    public java.math.BigDecimal getPrincipalDisbursed() {
      return principalDisbursed;
    }


    /**
      * Sets the value of the 'principalDisbursed' field.
      * @param value The value of 'principalDisbursed'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setPrincipalDisbursed(java.math.BigDecimal value) {
      validate(fields()[6], value);
      this.principalDisbursed = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'principalDisbursed' field has been set.
      * @return True if the 'principalDisbursed' field has been set, false otherwise.
      */
    public boolean hasPrincipalDisbursed() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'principalDisbursed' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearPrincipalDisbursed() {
      principalDisbursed = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'principalOriginalDue' field.
      * @return The value.
      */
    public java.math.BigDecimal getPrincipalOriginalDue() {
      return principalOriginalDue;
    }


    /**
      * Sets the value of the 'principalOriginalDue' field.
      * @param value The value of 'principalOriginalDue'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setPrincipalOriginalDue(java.math.BigDecimal value) {
      validate(fields()[7], value);
      this.principalOriginalDue = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'principalOriginalDue' field has been set.
      * @return True if the 'principalOriginalDue' field has been set, false otherwise.
      */
    public boolean hasPrincipalOriginalDue() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'principalOriginalDue' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearPrincipalOriginalDue() {
      principalOriginalDue = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'principalDue' field.
      * @return The value.
      */
    public java.math.BigDecimal getPrincipalDue() {
      return principalDue;
    }


    /**
      * Sets the value of the 'principalDue' field.
      * @param value The value of 'principalDue'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setPrincipalDue(java.math.BigDecimal value) {
      validate(fields()[8], value);
      this.principalDue = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'principalDue' field has been set.
      * @return True if the 'principalDue' field has been set, false otherwise.
      */
    public boolean hasPrincipalDue() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'principalDue' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearPrincipalDue() {
      principalDue = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'principalPaid' field.
      * @return The value.
      */
    public java.math.BigDecimal getPrincipalPaid() {
      return principalPaid;
    }


    /**
      * Sets the value of the 'principalPaid' field.
      * @param value The value of 'principalPaid'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setPrincipalPaid(java.math.BigDecimal value) {
      validate(fields()[9], value);
      this.principalPaid = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'principalPaid' field has been set.
      * @return True if the 'principalPaid' field has been set, false otherwise.
      */
    public boolean hasPrincipalPaid() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'principalPaid' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearPrincipalPaid() {
      principalPaid = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'principalWrittenOff' field.
      * @return The value.
      */
    public java.math.BigDecimal getPrincipalWrittenOff() {
      return principalWrittenOff;
    }


    /**
      * Sets the value of the 'principalWrittenOff' field.
      * @param value The value of 'principalWrittenOff'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setPrincipalWrittenOff(java.math.BigDecimal value) {
      validate(fields()[10], value);
      this.principalWrittenOff = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'principalWrittenOff' field has been set.
      * @return True if the 'principalWrittenOff' field has been set, false otherwise.
      */
    public boolean hasPrincipalWrittenOff() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'principalWrittenOff' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearPrincipalWrittenOff() {
      principalWrittenOff = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'principalOutstanding' field.
      * @return The value.
      */
    public java.math.BigDecimal getPrincipalOutstanding() {
      return principalOutstanding;
    }


    /**
      * Sets the value of the 'principalOutstanding' field.
      * @param value The value of 'principalOutstanding'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setPrincipalOutstanding(java.math.BigDecimal value) {
      validate(fields()[11], value);
      this.principalOutstanding = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'principalOutstanding' field has been set.
      * @return True if the 'principalOutstanding' field has been set, false otherwise.
      */
    public boolean hasPrincipalOutstanding() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'principalOutstanding' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearPrincipalOutstanding() {
      principalOutstanding = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'principalLoanBalanceOutstanding' field.
      * @return The value.
      */
    public java.math.BigDecimal getPrincipalLoanBalanceOutstanding() {
      return principalLoanBalanceOutstanding;
    }


    /**
      * Sets the value of the 'principalLoanBalanceOutstanding' field.
      * @param value The value of 'principalLoanBalanceOutstanding'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setPrincipalLoanBalanceOutstanding(java.math.BigDecimal value) {
      validate(fields()[12], value);
      this.principalLoanBalanceOutstanding = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'principalLoanBalanceOutstanding' field has been set.
      * @return True if the 'principalLoanBalanceOutstanding' field has been set, false otherwise.
      */
    public boolean hasPrincipalLoanBalanceOutstanding() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'principalLoanBalanceOutstanding' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearPrincipalLoanBalanceOutstanding() {
      principalLoanBalanceOutstanding = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'interestOriginalDue' field.
      * @return The value.
      */
    public java.math.BigDecimal getInterestOriginalDue() {
      return interestOriginalDue;
    }


    /**
      * Sets the value of the 'interestOriginalDue' field.
      * @param value The value of 'interestOriginalDue'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setInterestOriginalDue(java.math.BigDecimal value) {
      validate(fields()[13], value);
      this.interestOriginalDue = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'interestOriginalDue' field has been set.
      * @return True if the 'interestOriginalDue' field has been set, false otherwise.
      */
    public boolean hasInterestOriginalDue() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'interestOriginalDue' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearInterestOriginalDue() {
      interestOriginalDue = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'interestDue' field.
      * @return The value.
      */
    public java.math.BigDecimal getInterestDue() {
      return interestDue;
    }


    /**
      * Sets the value of the 'interestDue' field.
      * @param value The value of 'interestDue'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setInterestDue(java.math.BigDecimal value) {
      validate(fields()[14], value);
      this.interestDue = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'interestDue' field has been set.
      * @return True if the 'interestDue' field has been set, false otherwise.
      */
    public boolean hasInterestDue() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'interestDue' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearInterestDue() {
      interestDue = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'interestPaid' field.
      * @return The value.
      */
    public java.math.BigDecimal getInterestPaid() {
      return interestPaid;
    }


    /**
      * Sets the value of the 'interestPaid' field.
      * @param value The value of 'interestPaid'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setInterestPaid(java.math.BigDecimal value) {
      validate(fields()[15], value);
      this.interestPaid = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'interestPaid' field has been set.
      * @return True if the 'interestPaid' field has been set, false otherwise.
      */
    public boolean hasInterestPaid() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'interestPaid' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearInterestPaid() {
      interestPaid = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'interestWaived' field.
      * @return The value.
      */
    public java.math.BigDecimal getInterestWaived() {
      return interestWaived;
    }


    /**
      * Sets the value of the 'interestWaived' field.
      * @param value The value of 'interestWaived'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setInterestWaived(java.math.BigDecimal value) {
      validate(fields()[16], value);
      this.interestWaived = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'interestWaived' field has been set.
      * @return True if the 'interestWaived' field has been set, false otherwise.
      */
    public boolean hasInterestWaived() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'interestWaived' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearInterestWaived() {
      interestWaived = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'interestWrittenOff' field.
      * @return The value.
      */
    public java.math.BigDecimal getInterestWrittenOff() {
      return interestWrittenOff;
    }


    /**
      * Sets the value of the 'interestWrittenOff' field.
      * @param value The value of 'interestWrittenOff'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setInterestWrittenOff(java.math.BigDecimal value) {
      validate(fields()[17], value);
      this.interestWrittenOff = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'interestWrittenOff' field has been set.
      * @return True if the 'interestWrittenOff' field has been set, false otherwise.
      */
    public boolean hasInterestWrittenOff() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'interestWrittenOff' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearInterestWrittenOff() {
      interestWrittenOff = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'interestOutstanding' field.
      * @return The value.
      */
    public java.math.BigDecimal getInterestOutstanding() {
      return interestOutstanding;
    }


    /**
      * Sets the value of the 'interestOutstanding' field.
      * @param value The value of 'interestOutstanding'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setInterestOutstanding(java.math.BigDecimal value) {
      validate(fields()[18], value);
      this.interestOutstanding = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'interestOutstanding' field has been set.
      * @return True if the 'interestOutstanding' field has been set, false otherwise.
      */
    public boolean hasInterestOutstanding() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'interestOutstanding' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearInterestOutstanding() {
      interestOutstanding = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'feeChargesDue' field.
      * @return The value.
      */
    public java.math.BigDecimal getFeeChargesDue() {
      return feeChargesDue;
    }


    /**
      * Sets the value of the 'feeChargesDue' field.
      * @param value The value of 'feeChargesDue'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setFeeChargesDue(java.math.BigDecimal value) {
      validate(fields()[19], value);
      this.feeChargesDue = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'feeChargesDue' field has been set.
      * @return True if the 'feeChargesDue' field has been set, false otherwise.
      */
    public boolean hasFeeChargesDue() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'feeChargesDue' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearFeeChargesDue() {
      feeChargesDue = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'feeChargesPaid' field.
      * @return The value.
      */
    public java.math.BigDecimal getFeeChargesPaid() {
      return feeChargesPaid;
    }


    /**
      * Sets the value of the 'feeChargesPaid' field.
      * @param value The value of 'feeChargesPaid'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setFeeChargesPaid(java.math.BigDecimal value) {
      validate(fields()[20], value);
      this.feeChargesPaid = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'feeChargesPaid' field has been set.
      * @return True if the 'feeChargesPaid' field has been set, false otherwise.
      */
    public boolean hasFeeChargesPaid() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'feeChargesPaid' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearFeeChargesPaid() {
      feeChargesPaid = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'feeChargesWaived' field.
      * @return The value.
      */
    public java.math.BigDecimal getFeeChargesWaived() {
      return feeChargesWaived;
    }


    /**
      * Sets the value of the 'feeChargesWaived' field.
      * @param value The value of 'feeChargesWaived'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setFeeChargesWaived(java.math.BigDecimal value) {
      validate(fields()[21], value);
      this.feeChargesWaived = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'feeChargesWaived' field has been set.
      * @return True if the 'feeChargesWaived' field has been set, false otherwise.
      */
    public boolean hasFeeChargesWaived() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'feeChargesWaived' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearFeeChargesWaived() {
      feeChargesWaived = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'feeChargesWrittenOff' field.
      * @return The value.
      */
    public java.math.BigDecimal getFeeChargesWrittenOff() {
      return feeChargesWrittenOff;
    }


    /**
      * Sets the value of the 'feeChargesWrittenOff' field.
      * @param value The value of 'feeChargesWrittenOff'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setFeeChargesWrittenOff(java.math.BigDecimal value) {
      validate(fields()[22], value);
      this.feeChargesWrittenOff = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'feeChargesWrittenOff' field has been set.
      * @return True if the 'feeChargesWrittenOff' field has been set, false otherwise.
      */
    public boolean hasFeeChargesWrittenOff() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'feeChargesWrittenOff' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearFeeChargesWrittenOff() {
      feeChargesWrittenOff = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'feeChargesOutstanding' field.
      * @return The value.
      */
    public java.math.BigDecimal getFeeChargesOutstanding() {
      return feeChargesOutstanding;
    }


    /**
      * Sets the value of the 'feeChargesOutstanding' field.
      * @param value The value of 'feeChargesOutstanding'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setFeeChargesOutstanding(java.math.BigDecimal value) {
      validate(fields()[23], value);
      this.feeChargesOutstanding = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'feeChargesOutstanding' field has been set.
      * @return True if the 'feeChargesOutstanding' field has been set, false otherwise.
      */
    public boolean hasFeeChargesOutstanding() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'feeChargesOutstanding' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearFeeChargesOutstanding() {
      feeChargesOutstanding = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'penaltyChargesDue' field.
      * @return The value.
      */
    public java.math.BigDecimal getPenaltyChargesDue() {
      return penaltyChargesDue;
    }


    /**
      * Sets the value of the 'penaltyChargesDue' field.
      * @param value The value of 'penaltyChargesDue'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setPenaltyChargesDue(java.math.BigDecimal value) {
      validate(fields()[24], value);
      this.penaltyChargesDue = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'penaltyChargesDue' field has been set.
      * @return True if the 'penaltyChargesDue' field has been set, false otherwise.
      */
    public boolean hasPenaltyChargesDue() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'penaltyChargesDue' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearPenaltyChargesDue() {
      penaltyChargesDue = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'penaltyChargesPaid' field.
      * @return The value.
      */
    public java.math.BigDecimal getPenaltyChargesPaid() {
      return penaltyChargesPaid;
    }


    /**
      * Sets the value of the 'penaltyChargesPaid' field.
      * @param value The value of 'penaltyChargesPaid'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setPenaltyChargesPaid(java.math.BigDecimal value) {
      validate(fields()[25], value);
      this.penaltyChargesPaid = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'penaltyChargesPaid' field has been set.
      * @return True if the 'penaltyChargesPaid' field has been set, false otherwise.
      */
    public boolean hasPenaltyChargesPaid() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'penaltyChargesPaid' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearPenaltyChargesPaid() {
      penaltyChargesPaid = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'penaltyChargesWaived' field.
      * @return The value.
      */
    public java.math.BigDecimal getPenaltyChargesWaived() {
      return penaltyChargesWaived;
    }


    /**
      * Sets the value of the 'penaltyChargesWaived' field.
      * @param value The value of 'penaltyChargesWaived'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setPenaltyChargesWaived(java.math.BigDecimal value) {
      validate(fields()[26], value);
      this.penaltyChargesWaived = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'penaltyChargesWaived' field has been set.
      * @return True if the 'penaltyChargesWaived' field has been set, false otherwise.
      */
    public boolean hasPenaltyChargesWaived() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'penaltyChargesWaived' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearPenaltyChargesWaived() {
      penaltyChargesWaived = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'penaltyChargesWrittenOff' field.
      * @return The value.
      */
    public java.math.BigDecimal getPenaltyChargesWrittenOff() {
      return penaltyChargesWrittenOff;
    }


    /**
      * Sets the value of the 'penaltyChargesWrittenOff' field.
      * @param value The value of 'penaltyChargesWrittenOff'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setPenaltyChargesWrittenOff(java.math.BigDecimal value) {
      validate(fields()[27], value);
      this.penaltyChargesWrittenOff = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'penaltyChargesWrittenOff' field has been set.
      * @return True if the 'penaltyChargesWrittenOff' field has been set, false otherwise.
      */
    public boolean hasPenaltyChargesWrittenOff() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'penaltyChargesWrittenOff' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearPenaltyChargesWrittenOff() {
      penaltyChargesWrittenOff = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'penaltyChargesOutstanding' field.
      * @return The value.
      */
    public java.math.BigDecimal getPenaltyChargesOutstanding() {
      return penaltyChargesOutstanding;
    }


    /**
      * Sets the value of the 'penaltyChargesOutstanding' field.
      * @param value The value of 'penaltyChargesOutstanding'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setPenaltyChargesOutstanding(java.math.BigDecimal value) {
      validate(fields()[28], value);
      this.penaltyChargesOutstanding = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'penaltyChargesOutstanding' field has been set.
      * @return True if the 'penaltyChargesOutstanding' field has been set, false otherwise.
      */
    public boolean hasPenaltyChargesOutstanding() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'penaltyChargesOutstanding' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearPenaltyChargesOutstanding() {
      penaltyChargesOutstanding = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalOriginalDueForPeriod' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalOriginalDueForPeriod() {
      return totalOriginalDueForPeriod;
    }


    /**
      * Sets the value of the 'totalOriginalDueForPeriod' field.
      * @param value The value of 'totalOriginalDueForPeriod'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setTotalOriginalDueForPeriod(java.math.BigDecimal value) {
      validate(fields()[29], value);
      this.totalOriginalDueForPeriod = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'totalOriginalDueForPeriod' field has been set.
      * @return True if the 'totalOriginalDueForPeriod' field has been set, false otherwise.
      */
    public boolean hasTotalOriginalDueForPeriod() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'totalOriginalDueForPeriod' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearTotalOriginalDueForPeriod() {
      totalOriginalDueForPeriod = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalDueForPeriod' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalDueForPeriod() {
      return totalDueForPeriod;
    }


    /**
      * Sets the value of the 'totalDueForPeriod' field.
      * @param value The value of 'totalDueForPeriod'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setTotalDueForPeriod(java.math.BigDecimal value) {
      validate(fields()[30], value);
      this.totalDueForPeriod = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'totalDueForPeriod' field has been set.
      * @return True if the 'totalDueForPeriod' field has been set, false otherwise.
      */
    public boolean hasTotalDueForPeriod() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'totalDueForPeriod' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearTotalDueForPeriod() {
      totalDueForPeriod = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalPaidForPeriod' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalPaidForPeriod() {
      return totalPaidForPeriod;
    }


    /**
      * Sets the value of the 'totalPaidForPeriod' field.
      * @param value The value of 'totalPaidForPeriod'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setTotalPaidForPeriod(java.math.BigDecimal value) {
      validate(fields()[31], value);
      this.totalPaidForPeriod = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
      * Checks whether the 'totalPaidForPeriod' field has been set.
      * @return True if the 'totalPaidForPeriod' field has been set, false otherwise.
      */
    public boolean hasTotalPaidForPeriod() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'totalPaidForPeriod' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearTotalPaidForPeriod() {
      totalPaidForPeriod = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalPaidInAdvanceForPeriod' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalPaidInAdvanceForPeriod() {
      return totalPaidInAdvanceForPeriod;
    }


    /**
      * Sets the value of the 'totalPaidInAdvanceForPeriod' field.
      * @param value The value of 'totalPaidInAdvanceForPeriod'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setTotalPaidInAdvanceForPeriod(java.math.BigDecimal value) {
      validate(fields()[32], value);
      this.totalPaidInAdvanceForPeriod = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /**
      * Checks whether the 'totalPaidInAdvanceForPeriod' field has been set.
      * @return True if the 'totalPaidInAdvanceForPeriod' field has been set, false otherwise.
      */
    public boolean hasTotalPaidInAdvanceForPeriod() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'totalPaidInAdvanceForPeriod' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearTotalPaidInAdvanceForPeriod() {
      totalPaidInAdvanceForPeriod = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalPaidLateForPeriod' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalPaidLateForPeriod() {
      return totalPaidLateForPeriod;
    }


    /**
      * Sets the value of the 'totalPaidLateForPeriod' field.
      * @param value The value of 'totalPaidLateForPeriod'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setTotalPaidLateForPeriod(java.math.BigDecimal value) {
      validate(fields()[33], value);
      this.totalPaidLateForPeriod = value;
      fieldSetFlags()[33] = true;
      return this;
    }

    /**
      * Checks whether the 'totalPaidLateForPeriod' field has been set.
      * @return True if the 'totalPaidLateForPeriod' field has been set, false otherwise.
      */
    public boolean hasTotalPaidLateForPeriod() {
      return fieldSetFlags()[33];
    }


    /**
      * Clears the value of the 'totalPaidLateForPeriod' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearTotalPaidLateForPeriod() {
      totalPaidLateForPeriod = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalWaivedForPeriod' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalWaivedForPeriod() {
      return totalWaivedForPeriod;
    }


    /**
      * Sets the value of the 'totalWaivedForPeriod' field.
      * @param value The value of 'totalWaivedForPeriod'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setTotalWaivedForPeriod(java.math.BigDecimal value) {
      validate(fields()[34], value);
      this.totalWaivedForPeriod = value;
      fieldSetFlags()[34] = true;
      return this;
    }

    /**
      * Checks whether the 'totalWaivedForPeriod' field has been set.
      * @return True if the 'totalWaivedForPeriod' field has been set, false otherwise.
      */
    public boolean hasTotalWaivedForPeriod() {
      return fieldSetFlags()[34];
    }


    /**
      * Clears the value of the 'totalWaivedForPeriod' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearTotalWaivedForPeriod() {
      totalWaivedForPeriod = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalWrittenOffForPeriod' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalWrittenOffForPeriod() {
      return totalWrittenOffForPeriod;
    }


    /**
      * Sets the value of the 'totalWrittenOffForPeriod' field.
      * @param value The value of 'totalWrittenOffForPeriod'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setTotalWrittenOffForPeriod(java.math.BigDecimal value) {
      validate(fields()[35], value);
      this.totalWrittenOffForPeriod = value;
      fieldSetFlags()[35] = true;
      return this;
    }

    /**
      * Checks whether the 'totalWrittenOffForPeriod' field has been set.
      * @return True if the 'totalWrittenOffForPeriod' field has been set, false otherwise.
      */
    public boolean hasTotalWrittenOffForPeriod() {
      return fieldSetFlags()[35];
    }


    /**
      * Clears the value of the 'totalWrittenOffForPeriod' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearTotalWrittenOffForPeriod() {
      totalWrittenOffForPeriod = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalOutstandingForPeriod' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalOutstandingForPeriod() {
      return totalOutstandingForPeriod;
    }


    /**
      * Sets the value of the 'totalOutstandingForPeriod' field.
      * @param value The value of 'totalOutstandingForPeriod'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setTotalOutstandingForPeriod(java.math.BigDecimal value) {
      validate(fields()[36], value);
      this.totalOutstandingForPeriod = value;
      fieldSetFlags()[36] = true;
      return this;
    }

    /**
      * Checks whether the 'totalOutstandingForPeriod' field has been set.
      * @return True if the 'totalOutstandingForPeriod' field has been set, false otherwise.
      */
    public boolean hasTotalOutstandingForPeriod() {
      return fieldSetFlags()[36];
    }


    /**
      * Clears the value of the 'totalOutstandingForPeriod' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearTotalOutstandingForPeriod() {
      totalOutstandingForPeriod = null;
      fieldSetFlags()[36] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalOverdue' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalOverdue() {
      return totalOverdue;
    }


    /**
      * Sets the value of the 'totalOverdue' field.
      * @param value The value of 'totalOverdue'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setTotalOverdue(java.math.BigDecimal value) {
      validate(fields()[37], value);
      this.totalOverdue = value;
      fieldSetFlags()[37] = true;
      return this;
    }

    /**
      * Checks whether the 'totalOverdue' field has been set.
      * @return True if the 'totalOverdue' field has been set, false otherwise.
      */
    public boolean hasTotalOverdue() {
      return fieldSetFlags()[37];
    }


    /**
      * Clears the value of the 'totalOverdue' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearTotalOverdue() {
      totalOverdue = null;
      fieldSetFlags()[37] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalActualCostOfLoanForPeriod' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalActualCostOfLoanForPeriod() {
      return totalActualCostOfLoanForPeriod;
    }


    /**
      * Sets the value of the 'totalActualCostOfLoanForPeriod' field.
      * @param value The value of 'totalActualCostOfLoanForPeriod'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setTotalActualCostOfLoanForPeriod(java.math.BigDecimal value) {
      validate(fields()[38], value);
      this.totalActualCostOfLoanForPeriod = value;
      fieldSetFlags()[38] = true;
      return this;
    }

    /**
      * Checks whether the 'totalActualCostOfLoanForPeriod' field has been set.
      * @return True if the 'totalActualCostOfLoanForPeriod' field has been set, false otherwise.
      */
    public boolean hasTotalActualCostOfLoanForPeriod() {
      return fieldSetFlags()[38];
    }


    /**
      * Clears the value of the 'totalActualCostOfLoanForPeriod' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearTotalActualCostOfLoanForPeriod() {
      totalActualCostOfLoanForPeriod = null;
      fieldSetFlags()[38] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalInstallmentAmountForPeriod' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalInstallmentAmountForPeriod() {
      return totalInstallmentAmountForPeriod;
    }


    /**
      * Sets the value of the 'totalInstallmentAmountForPeriod' field.
      * @param value The value of 'totalInstallmentAmountForPeriod'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setTotalInstallmentAmountForPeriod(java.math.BigDecimal value) {
      validate(fields()[39], value);
      this.totalInstallmentAmountForPeriod = value;
      fieldSetFlags()[39] = true;
      return this;
    }

    /**
      * Checks whether the 'totalInstallmentAmountForPeriod' field has been set.
      * @return True if the 'totalInstallmentAmountForPeriod' field has been set, false otherwise.
      */
    public boolean hasTotalInstallmentAmountForPeriod() {
      return fieldSetFlags()[39];
    }


    /**
      * Clears the value of the 'totalInstallmentAmountForPeriod' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearTotalInstallmentAmountForPeriod() {
      totalInstallmentAmountForPeriod = null;
      fieldSetFlags()[39] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalCredits' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalCredits() {
      return totalCredits;
    }


    /**
      * Sets the value of the 'totalCredits' field.
      * @param value The value of 'totalCredits'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setTotalCredits(java.math.BigDecimal value) {
      validate(fields()[40], value);
      this.totalCredits = value;
      fieldSetFlags()[40] = true;
      return this;
    }

    /**
      * Checks whether the 'totalCredits' field has been set.
      * @return True if the 'totalCredits' field has been set, false otherwise.
      */
    public boolean hasTotalCredits() {
      return fieldSetFlags()[40];
    }


    /**
      * Clears the value of the 'totalCredits' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearTotalCredits() {
      totalCredits = null;
      fieldSetFlags()[40] = false;
      return this;
    }

    /**
      * Gets the value of the 'downPaymentPeriod' field.
      * @return The value.
      */
    public java.lang.Boolean getDownPaymentPeriod() {
      return downPaymentPeriod;
    }


    /**
      * Sets the value of the 'downPaymentPeriod' field.
      * @param value The value of 'downPaymentPeriod'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder setDownPaymentPeriod(java.lang.Boolean value) {
      validate(fields()[41], value);
      this.downPaymentPeriod = value;
      fieldSetFlags()[41] = true;
      return this;
    }

    /**
      * Checks whether the 'downPaymentPeriod' field has been set.
      * @return True if the 'downPaymentPeriod' field has been set, false otherwise.
      */
    public boolean hasDownPaymentPeriod() {
      return fieldSetFlags()[41];
    }


    /**
      * Clears the value of the 'downPaymentPeriod' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1.Builder clearDownPaymentPeriod() {
      downPaymentPeriod = null;
      fieldSetFlags()[41] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public LoanSchedulePeriodDataV1 build() {
      try {
        LoanSchedulePeriodDataV1 record = new LoanSchedulePeriodDataV1();
        record.period = fieldSetFlags()[0] ? this.period : (java.lang.Integer) defaultValue(fields()[0]);
        record.fromDate = fieldSetFlags()[1] ? this.fromDate : (java.lang.String) defaultValue(fields()[1]);
        record.dueDate = fieldSetFlags()[2] ? this.dueDate : (java.lang.String) defaultValue(fields()[2]);
        record.obligationsMetOnDate = fieldSetFlags()[3] ? this.obligationsMetOnDate : (java.lang.String) defaultValue(fields()[3]);
        record.complete = fieldSetFlags()[4] ? this.complete : (java.lang.Boolean) defaultValue(fields()[4]);
        record.daysInPeriod = fieldSetFlags()[5] ? this.daysInPeriod : (java.lang.Integer) defaultValue(fields()[5]);
        record.principalDisbursed = fieldSetFlags()[6] ? this.principalDisbursed : (java.math.BigDecimal) defaultValue(fields()[6]);
        record.principalOriginalDue = fieldSetFlags()[7] ? this.principalOriginalDue : (java.math.BigDecimal) defaultValue(fields()[7]);
        record.principalDue = fieldSetFlags()[8] ? this.principalDue : (java.math.BigDecimal) defaultValue(fields()[8]);
        record.principalPaid = fieldSetFlags()[9] ? this.principalPaid : (java.math.BigDecimal) defaultValue(fields()[9]);
        record.principalWrittenOff = fieldSetFlags()[10] ? this.principalWrittenOff : (java.math.BigDecimal) defaultValue(fields()[10]);
        record.principalOutstanding = fieldSetFlags()[11] ? this.principalOutstanding : (java.math.BigDecimal) defaultValue(fields()[11]);
        record.principalLoanBalanceOutstanding = fieldSetFlags()[12] ? this.principalLoanBalanceOutstanding : (java.math.BigDecimal) defaultValue(fields()[12]);
        record.interestOriginalDue = fieldSetFlags()[13] ? this.interestOriginalDue : (java.math.BigDecimal) defaultValue(fields()[13]);
        record.interestDue = fieldSetFlags()[14] ? this.interestDue : (java.math.BigDecimal) defaultValue(fields()[14]);
        record.interestPaid = fieldSetFlags()[15] ? this.interestPaid : (java.math.BigDecimal) defaultValue(fields()[15]);
        record.interestWaived = fieldSetFlags()[16] ? this.interestWaived : (java.math.BigDecimal) defaultValue(fields()[16]);
        record.interestWrittenOff = fieldSetFlags()[17] ? this.interestWrittenOff : (java.math.BigDecimal) defaultValue(fields()[17]);
        record.interestOutstanding = fieldSetFlags()[18] ? this.interestOutstanding : (java.math.BigDecimal) defaultValue(fields()[18]);
        record.feeChargesDue = fieldSetFlags()[19] ? this.feeChargesDue : (java.math.BigDecimal) defaultValue(fields()[19]);
        record.feeChargesPaid = fieldSetFlags()[20] ? this.feeChargesPaid : (java.math.BigDecimal) defaultValue(fields()[20]);
        record.feeChargesWaived = fieldSetFlags()[21] ? this.feeChargesWaived : (java.math.BigDecimal) defaultValue(fields()[21]);
        record.feeChargesWrittenOff = fieldSetFlags()[22] ? this.feeChargesWrittenOff : (java.math.BigDecimal) defaultValue(fields()[22]);
        record.feeChargesOutstanding = fieldSetFlags()[23] ? this.feeChargesOutstanding : (java.math.BigDecimal) defaultValue(fields()[23]);
        record.penaltyChargesDue = fieldSetFlags()[24] ? this.penaltyChargesDue : (java.math.BigDecimal) defaultValue(fields()[24]);
        record.penaltyChargesPaid = fieldSetFlags()[25] ? this.penaltyChargesPaid : (java.math.BigDecimal) defaultValue(fields()[25]);
        record.penaltyChargesWaived = fieldSetFlags()[26] ? this.penaltyChargesWaived : (java.math.BigDecimal) defaultValue(fields()[26]);
        record.penaltyChargesWrittenOff = fieldSetFlags()[27] ? this.penaltyChargesWrittenOff : (java.math.BigDecimal) defaultValue(fields()[27]);
        record.penaltyChargesOutstanding = fieldSetFlags()[28] ? this.penaltyChargesOutstanding : (java.math.BigDecimal) defaultValue(fields()[28]);
        record.totalOriginalDueForPeriod = fieldSetFlags()[29] ? this.totalOriginalDueForPeriod : (java.math.BigDecimal) defaultValue(fields()[29]);
        record.totalDueForPeriod = fieldSetFlags()[30] ? this.totalDueForPeriod : (java.math.BigDecimal) defaultValue(fields()[30]);
        record.totalPaidForPeriod = fieldSetFlags()[31] ? this.totalPaidForPeriod : (java.math.BigDecimal) defaultValue(fields()[31]);
        record.totalPaidInAdvanceForPeriod = fieldSetFlags()[32] ? this.totalPaidInAdvanceForPeriod : (java.math.BigDecimal) defaultValue(fields()[32]);
        record.totalPaidLateForPeriod = fieldSetFlags()[33] ? this.totalPaidLateForPeriod : (java.math.BigDecimal) defaultValue(fields()[33]);
        record.totalWaivedForPeriod = fieldSetFlags()[34] ? this.totalWaivedForPeriod : (java.math.BigDecimal) defaultValue(fields()[34]);
        record.totalWrittenOffForPeriod = fieldSetFlags()[35] ? this.totalWrittenOffForPeriod : (java.math.BigDecimal) defaultValue(fields()[35]);
        record.totalOutstandingForPeriod = fieldSetFlags()[36] ? this.totalOutstandingForPeriod : (java.math.BigDecimal) defaultValue(fields()[36]);
        record.totalOverdue = fieldSetFlags()[37] ? this.totalOverdue : (java.math.BigDecimal) defaultValue(fields()[37]);
        record.totalActualCostOfLoanForPeriod = fieldSetFlags()[38] ? this.totalActualCostOfLoanForPeriod : (java.math.BigDecimal) defaultValue(fields()[38]);
        record.totalInstallmentAmountForPeriod = fieldSetFlags()[39] ? this.totalInstallmentAmountForPeriod : (java.math.BigDecimal) defaultValue(fields()[39]);
        record.totalCredits = fieldSetFlags()[40] ? this.totalCredits : (java.math.BigDecimal) defaultValue(fields()[40]);
        record.downPaymentPeriod = fieldSetFlags()[41] ? this.downPaymentPeriod : (java.lang.Boolean) defaultValue(fields()[41]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<LoanSchedulePeriodDataV1>
    WRITER$ = (org.apache.avro.io.DatumWriter<LoanSchedulePeriodDataV1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<LoanSchedulePeriodDataV1>
    READER$ = (org.apache.avro.io.DatumReader<LoanSchedulePeriodDataV1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










