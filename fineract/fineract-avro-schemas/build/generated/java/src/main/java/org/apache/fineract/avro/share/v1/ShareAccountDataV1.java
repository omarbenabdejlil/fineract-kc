/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

package org.apache.fineract.avro.share.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ShareAccountDataV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, org.apache.fineract.avro.generator.ByteBufferSerializable {
  private static final long serialVersionUID = -8414690722714952606L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ShareAccountDataV1\",\"namespace\":\"org.apache.fineract.avro.share.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"accountNo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"savingsAccountNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"clientId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"clientName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"defaultShares\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"productId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"productName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ShareAccountStatusEnumDataV1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"submittedAndPendingApproval\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"approved\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"rejected\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"active\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"closed\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"timeline\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ShareAccountApplicationTimelineDataV1\",\"fields\":[{\"name\":\"submittedOnDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"submittedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"submittedByFirstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"submittedByLastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"rejectedDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"rejectedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"rejectedByFirstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"rejectedByLastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"approvedDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"approvedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"approvedByFirstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"approvedByLastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activatedDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activatedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activatedByFirstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activatedByLastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closedDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closedByFirstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closedByLastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"currency\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CurrencyDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"decimalPlaces\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"inMultiplesOf\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"displaySymbol\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nameCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"displayLabel\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"summary\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ShareAccountSummaryDataV1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"accountNo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"totalApprovedShares\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"totalPendingForApprovalShares\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"productId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"productName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"shortProductName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",\"ShareAccountStatusEnumDataV1\"],\"default\":null},{\"name\":\"currency\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.CurrencyDataV1\"],\"default\":null},{\"name\":\"timeline\",\"type\":[\"null\",\"ShareAccountApplicationTimelineDataV1\"],\"default\":null}]}],\"default\":null},{\"name\":\"purchasedShares\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ShareAccountTransactionDataV1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"accountId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"purchasedDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"numberOfShares\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"purchasedPrice\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"EnumOptionDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"amount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"chargeAmount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"amountPaid\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null}]}}],\"default\":null},{\"name\":\"savingsAccountId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"currentMarketPrice\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"lockinPeriod\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"lockPeriodTypeEnum\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"minimumActivePeriod\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"minimumActivePeriodTypeEnum\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"allowDividendCalculationForInactiveClients\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<ShareAccountDataV1> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ShareAccountDataV1> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ShareAccountDataV1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ShareAccountDataV1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ShareAccountDataV1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ShareAccountDataV1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  @Override
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ShareAccountDataV1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ShareAccountDataV1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ShareAccountDataV1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.Long id;
  private java.lang.String accountNo;
  private java.lang.String externalId;
  private java.lang.String savingsAccountNumber;
  private java.lang.Long clientId;
  private java.lang.String clientName;
  private java.lang.Long defaultShares;
  private java.lang.Long productId;
  private java.lang.String productName;
  private org.apache.fineract.avro.share.v1.ShareAccountStatusEnumDataV1 status;
  private org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1 timeline;
  private org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency;
  private org.apache.fineract.avro.share.v1.ShareAccountSummaryDataV1 summary;
  private java.util.List<org.apache.fineract.avro.share.v1.ShareAccountTransactionDataV1> purchasedShares;
  private java.lang.Long savingsAccountId;
  private java.math.BigDecimal currentMarketPrice;
  private java.lang.Integer lockinPeriod;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 lockPeriodTypeEnum;
  private java.lang.Integer minimumActivePeriod;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 minimumActivePeriodTypeEnum;
  private java.lang.Boolean allowDividendCalculationForInactiveClients;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ShareAccountDataV1() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param accountNo The new value for accountNo
   * @param externalId The new value for externalId
   * @param savingsAccountNumber The new value for savingsAccountNumber
   * @param clientId The new value for clientId
   * @param clientName The new value for clientName
   * @param defaultShares The new value for defaultShares
   * @param productId The new value for productId
   * @param productName The new value for productName
   * @param status The new value for status
   * @param timeline The new value for timeline
   * @param currency The new value for currency
   * @param summary The new value for summary
   * @param purchasedShares The new value for purchasedShares
   * @param savingsAccountId The new value for savingsAccountId
   * @param currentMarketPrice The new value for currentMarketPrice
   * @param lockinPeriod The new value for lockinPeriod
   * @param lockPeriodTypeEnum The new value for lockPeriodTypeEnum
   * @param minimumActivePeriod The new value for minimumActivePeriod
   * @param minimumActivePeriodTypeEnum The new value for minimumActivePeriodTypeEnum
   * @param allowDividendCalculationForInactiveClients The new value for allowDividendCalculationForInactiveClients
   */
  public ShareAccountDataV1(java.lang.Long id, java.lang.String accountNo, java.lang.String externalId, java.lang.String savingsAccountNumber, java.lang.Long clientId, java.lang.String clientName, java.lang.Long defaultShares, java.lang.Long productId, java.lang.String productName, org.apache.fineract.avro.share.v1.ShareAccountStatusEnumDataV1 status, org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1 timeline, org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency, org.apache.fineract.avro.share.v1.ShareAccountSummaryDataV1 summary, java.util.List<org.apache.fineract.avro.share.v1.ShareAccountTransactionDataV1> purchasedShares, java.lang.Long savingsAccountId, java.math.BigDecimal currentMarketPrice, java.lang.Integer lockinPeriod, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 lockPeriodTypeEnum, java.lang.Integer minimumActivePeriod, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 minimumActivePeriodTypeEnum, java.lang.Boolean allowDividendCalculationForInactiveClients) {
    this.id = id;
    this.accountNo = accountNo;
    this.externalId = externalId;
    this.savingsAccountNumber = savingsAccountNumber;
    this.clientId = clientId;
    this.clientName = clientName;
    this.defaultShares = defaultShares;
    this.productId = productId;
    this.productName = productName;
    this.status = status;
    this.timeline = timeline;
    this.currency = currency;
    this.summary = summary;
    this.purchasedShares = purchasedShares;
    this.savingsAccountId = savingsAccountId;
    this.currentMarketPrice = currentMarketPrice;
    this.lockinPeriod = lockinPeriod;
    this.lockPeriodTypeEnum = lockPeriodTypeEnum;
    this.minimumActivePeriod = minimumActivePeriod;
    this.minimumActivePeriodTypeEnum = minimumActivePeriodTypeEnum;
    this.allowDividendCalculationForInactiveClients = allowDividendCalculationForInactiveClients;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return accountNo;
    case 2: return externalId;
    case 3: return savingsAccountNumber;
    case 4: return clientId;
    case 5: return clientName;
    case 6: return defaultShares;
    case 7: return productId;
    case 8: return productName;
    case 9: return status;
    case 10: return timeline;
    case 11: return currency;
    case 12: return summary;
    case 13: return purchasedShares;
    case 14: return savingsAccountId;
    case 15: return currentMarketPrice;
    case 16: return lockinPeriod;
    case 17: return lockPeriodTypeEnum;
    case 18: return minimumActivePeriod;
    case 19: return minimumActivePeriodTypeEnum;
    case 20: return allowDividendCalculationForInactiveClients;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: accountNo = value$ != null ? value$.toString() : null; break;
    case 2: externalId = value$ != null ? value$.toString() : null; break;
    case 3: savingsAccountNumber = value$ != null ? value$.toString() : null; break;
    case 4: clientId = (java.lang.Long)value$; break;
    case 5: clientName = value$ != null ? value$.toString() : null; break;
    case 6: defaultShares = (java.lang.Long)value$; break;
    case 7: productId = (java.lang.Long)value$; break;
    case 8: productName = value$ != null ? value$.toString() : null; break;
    case 9: status = (org.apache.fineract.avro.share.v1.ShareAccountStatusEnumDataV1)value$; break;
    case 10: timeline = (org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1)value$; break;
    case 11: currency = (org.apache.fineract.avro.generic.v1.CurrencyDataV1)value$; break;
    case 12: summary = (org.apache.fineract.avro.share.v1.ShareAccountSummaryDataV1)value$; break;
    case 13: purchasedShares = (java.util.List<org.apache.fineract.avro.share.v1.ShareAccountTransactionDataV1>)value$; break;
    case 14: savingsAccountId = (java.lang.Long)value$; break;
    case 15: currentMarketPrice = (java.math.BigDecimal)value$; break;
    case 16: lockinPeriod = (java.lang.Integer)value$; break;
    case 17: lockPeriodTypeEnum = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 18: minimumActivePeriod = (java.lang.Integer)value$; break;
    case 19: minimumActivePeriodTypeEnum = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 20: allowDividendCalculationForInactiveClients = (java.lang.Boolean)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'accountNo' field.
   * @return The value of the 'accountNo' field.
   */
  public java.lang.String getAccountNo() {
    return accountNo;
  }


  /**
   * Sets the value of the 'accountNo' field.
   * @param value the value to set.
   */
  public void setAccountNo(java.lang.String value) {
    this.accountNo = value;
  }

  /**
   * Gets the value of the 'externalId' field.
   * @return The value of the 'externalId' field.
   */
  public java.lang.String getExternalId() {
    return externalId;
  }


  /**
   * Sets the value of the 'externalId' field.
   * @param value the value to set.
   */
  public void setExternalId(java.lang.String value) {
    this.externalId = value;
  }

  /**
   * Gets the value of the 'savingsAccountNumber' field.
   * @return The value of the 'savingsAccountNumber' field.
   */
  public java.lang.String getSavingsAccountNumber() {
    return savingsAccountNumber;
  }


  /**
   * Sets the value of the 'savingsAccountNumber' field.
   * @param value the value to set.
   */
  public void setSavingsAccountNumber(java.lang.String value) {
    this.savingsAccountNumber = value;
  }

  /**
   * Gets the value of the 'clientId' field.
   * @return The value of the 'clientId' field.
   */
  public java.lang.Long getClientId() {
    return clientId;
  }


  /**
   * Sets the value of the 'clientId' field.
   * @param value the value to set.
   */
  public void setClientId(java.lang.Long value) {
    this.clientId = value;
  }

  /**
   * Gets the value of the 'clientName' field.
   * @return The value of the 'clientName' field.
   */
  public java.lang.String getClientName() {
    return clientName;
  }


  /**
   * Sets the value of the 'clientName' field.
   * @param value the value to set.
   */
  public void setClientName(java.lang.String value) {
    this.clientName = value;
  }

  /**
   * Gets the value of the 'defaultShares' field.
   * @return The value of the 'defaultShares' field.
   */
  public java.lang.Long getDefaultShares() {
    return defaultShares;
  }


  /**
   * Sets the value of the 'defaultShares' field.
   * @param value the value to set.
   */
  public void setDefaultShares(java.lang.Long value) {
    this.defaultShares = value;
  }

  /**
   * Gets the value of the 'productId' field.
   * @return The value of the 'productId' field.
   */
  public java.lang.Long getProductId() {
    return productId;
  }


  /**
   * Sets the value of the 'productId' field.
   * @param value the value to set.
   */
  public void setProductId(java.lang.Long value) {
    this.productId = value;
  }

  /**
   * Gets the value of the 'productName' field.
   * @return The value of the 'productName' field.
   */
  public java.lang.String getProductName() {
    return productName;
  }


  /**
   * Sets the value of the 'productName' field.
   * @param value the value to set.
   */
  public void setProductName(java.lang.String value) {
    this.productName = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public org.apache.fineract.avro.share.v1.ShareAccountStatusEnumDataV1 getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(org.apache.fineract.avro.share.v1.ShareAccountStatusEnumDataV1 value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'timeline' field.
   * @return The value of the 'timeline' field.
   */
  public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1 getTimeline() {
    return timeline;
  }


  /**
   * Sets the value of the 'timeline' field.
   * @param value the value to set.
   */
  public void setTimeline(org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1 value) {
    this.timeline = value;
  }

  /**
   * Gets the value of the 'currency' field.
   * @return The value of the 'currency' field.
   */
  public org.apache.fineract.avro.generic.v1.CurrencyDataV1 getCurrency() {
    return currency;
  }


  /**
   * Sets the value of the 'currency' field.
   * @param value the value to set.
   */
  public void setCurrency(org.apache.fineract.avro.generic.v1.CurrencyDataV1 value) {
    this.currency = value;
  }

  /**
   * Gets the value of the 'summary' field.
   * @return The value of the 'summary' field.
   */
  public org.apache.fineract.avro.share.v1.ShareAccountSummaryDataV1 getSummary() {
    return summary;
  }


  /**
   * Sets the value of the 'summary' field.
   * @param value the value to set.
   */
  public void setSummary(org.apache.fineract.avro.share.v1.ShareAccountSummaryDataV1 value) {
    this.summary = value;
  }

  /**
   * Gets the value of the 'purchasedShares' field.
   * @return The value of the 'purchasedShares' field.
   */
  public java.util.List<org.apache.fineract.avro.share.v1.ShareAccountTransactionDataV1> getPurchasedShares() {
    return purchasedShares;
  }


  /**
   * Sets the value of the 'purchasedShares' field.
   * @param value the value to set.
   */
  public void setPurchasedShares(java.util.List<org.apache.fineract.avro.share.v1.ShareAccountTransactionDataV1> value) {
    this.purchasedShares = value;
  }

  /**
   * Gets the value of the 'savingsAccountId' field.
   * @return The value of the 'savingsAccountId' field.
   */
  public java.lang.Long getSavingsAccountId() {
    return savingsAccountId;
  }


  /**
   * Sets the value of the 'savingsAccountId' field.
   * @param value the value to set.
   */
  public void setSavingsAccountId(java.lang.Long value) {
    this.savingsAccountId = value;
  }

  /**
   * Gets the value of the 'currentMarketPrice' field.
   * @return The value of the 'currentMarketPrice' field.
   */
  public java.math.BigDecimal getCurrentMarketPrice() {
    return currentMarketPrice;
  }


  /**
   * Sets the value of the 'currentMarketPrice' field.
   * @param value the value to set.
   */
  public void setCurrentMarketPrice(java.math.BigDecimal value) {
    this.currentMarketPrice = value;
  }

  /**
   * Gets the value of the 'lockinPeriod' field.
   * @return The value of the 'lockinPeriod' field.
   */
  public java.lang.Integer getLockinPeriod() {
    return lockinPeriod;
  }


  /**
   * Sets the value of the 'lockinPeriod' field.
   * @param value the value to set.
   */
  public void setLockinPeriod(java.lang.Integer value) {
    this.lockinPeriod = value;
  }

  /**
   * Gets the value of the 'lockPeriodTypeEnum' field.
   * @return The value of the 'lockPeriodTypeEnum' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getLockPeriodTypeEnum() {
    return lockPeriodTypeEnum;
  }


  /**
   * Sets the value of the 'lockPeriodTypeEnum' field.
   * @param value the value to set.
   */
  public void setLockPeriodTypeEnum(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.lockPeriodTypeEnum = value;
  }

  /**
   * Gets the value of the 'minimumActivePeriod' field.
   * @return The value of the 'minimumActivePeriod' field.
   */
  public java.lang.Integer getMinimumActivePeriod() {
    return minimumActivePeriod;
  }


  /**
   * Sets the value of the 'minimumActivePeriod' field.
   * @param value the value to set.
   */
  public void setMinimumActivePeriod(java.lang.Integer value) {
    this.minimumActivePeriod = value;
  }

  /**
   * Gets the value of the 'minimumActivePeriodTypeEnum' field.
   * @return The value of the 'minimumActivePeriodTypeEnum' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getMinimumActivePeriodTypeEnum() {
    return minimumActivePeriodTypeEnum;
  }


  /**
   * Sets the value of the 'minimumActivePeriodTypeEnum' field.
   * @param value the value to set.
   */
  public void setMinimumActivePeriodTypeEnum(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.minimumActivePeriodTypeEnum = value;
  }

  /**
   * Gets the value of the 'allowDividendCalculationForInactiveClients' field.
   * @return The value of the 'allowDividendCalculationForInactiveClients' field.
   */
  public java.lang.Boolean getAllowDividendCalculationForInactiveClients() {
    return allowDividendCalculationForInactiveClients;
  }


  /**
   * Sets the value of the 'allowDividendCalculationForInactiveClients' field.
   * @param value the value to set.
   */
  public void setAllowDividendCalculationForInactiveClients(java.lang.Boolean value) {
    this.allowDividendCalculationForInactiveClients = value;
  }

  /**
   * Creates a new ShareAccountDataV1 RecordBuilder.
   * @return A new ShareAccountDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder newBuilder() {
    return new org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder();
  }

  /**
   * Creates a new ShareAccountDataV1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ShareAccountDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder newBuilder(org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder other) {
    if (other == null) {
      return new org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder(other);
    }
  }

  /**
   * Creates a new ShareAccountDataV1 RecordBuilder by copying an existing ShareAccountDataV1 instance.
   * @param other The existing instance to copy.
   * @return A new ShareAccountDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder newBuilder(org.apache.fineract.avro.share.v1.ShareAccountDataV1 other) {
    if (other == null) {
      return new org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder(other);
    }
  }

  /**
   * RecordBuilder for ShareAccountDataV1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ShareAccountDataV1>
    implements org.apache.avro.data.RecordBuilder<ShareAccountDataV1> {

    private java.lang.Long id;
    private java.lang.String accountNo;
    private java.lang.String externalId;
    private java.lang.String savingsAccountNumber;
    private java.lang.Long clientId;
    private java.lang.String clientName;
    private java.lang.Long defaultShares;
    private java.lang.Long productId;
    private java.lang.String productName;
    private org.apache.fineract.avro.share.v1.ShareAccountStatusEnumDataV1 status;
    private org.apache.fineract.avro.share.v1.ShareAccountStatusEnumDataV1.Builder statusBuilder;
    private org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1 timeline;
    private org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder timelineBuilder;
    private org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency;
    private org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder currencyBuilder;
    private org.apache.fineract.avro.share.v1.ShareAccountSummaryDataV1 summary;
    private org.apache.fineract.avro.share.v1.ShareAccountSummaryDataV1.Builder summaryBuilder;
    private java.util.List<org.apache.fineract.avro.share.v1.ShareAccountTransactionDataV1> purchasedShares;
    private java.lang.Long savingsAccountId;
    private java.math.BigDecimal currentMarketPrice;
    private java.lang.Integer lockinPeriod;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 lockPeriodTypeEnum;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder lockPeriodTypeEnumBuilder;
    private java.lang.Integer minimumActivePeriod;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 minimumActivePeriodTypeEnum;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder minimumActivePeriodTypeEnumBuilder;
    private java.lang.Boolean allowDividendCalculationForInactiveClients;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.accountNo)) {
        this.accountNo = data().deepCopy(fields()[1].schema(), other.accountNo);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.externalId)) {
        this.externalId = data().deepCopy(fields()[2].schema(), other.externalId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.savingsAccountNumber)) {
        this.savingsAccountNumber = data().deepCopy(fields()[3].schema(), other.savingsAccountNumber);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.clientId)) {
        this.clientId = data().deepCopy(fields()[4].schema(), other.clientId);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.clientName)) {
        this.clientName = data().deepCopy(fields()[5].schema(), other.clientName);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.defaultShares)) {
        this.defaultShares = data().deepCopy(fields()[6].schema(), other.defaultShares);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.productId)) {
        this.productId = data().deepCopy(fields()[7].schema(), other.productId);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.productName)) {
        this.productName = data().deepCopy(fields()[8].schema(), other.productName);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.status)) {
        this.status = data().deepCopy(fields()[9].schema(), other.status);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (other.hasStatusBuilder()) {
        this.statusBuilder = org.apache.fineract.avro.share.v1.ShareAccountStatusEnumDataV1.newBuilder(other.getStatusBuilder());
      }
      if (isValidValue(fields()[10], other.timeline)) {
        this.timeline = data().deepCopy(fields()[10].schema(), other.timeline);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (other.hasTimelineBuilder()) {
        this.timelineBuilder = org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.newBuilder(other.getTimelineBuilder());
      }
      if (isValidValue(fields()[11], other.currency)) {
        this.currency = data().deepCopy(fields()[11].schema(), other.currency);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (other.hasCurrencyBuilder()) {
        this.currencyBuilder = org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder(other.getCurrencyBuilder());
      }
      if (isValidValue(fields()[12], other.summary)) {
        this.summary = data().deepCopy(fields()[12].schema(), other.summary);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (other.hasSummaryBuilder()) {
        this.summaryBuilder = org.apache.fineract.avro.share.v1.ShareAccountSummaryDataV1.newBuilder(other.getSummaryBuilder());
      }
      if (isValidValue(fields()[13], other.purchasedShares)) {
        this.purchasedShares = data().deepCopy(fields()[13].schema(), other.purchasedShares);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.savingsAccountId)) {
        this.savingsAccountId = data().deepCopy(fields()[14].schema(), other.savingsAccountId);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.currentMarketPrice)) {
        this.currentMarketPrice = data().deepCopy(fields()[15].schema(), other.currentMarketPrice);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.lockinPeriod)) {
        this.lockinPeriod = data().deepCopy(fields()[16].schema(), other.lockinPeriod);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.lockPeriodTypeEnum)) {
        this.lockPeriodTypeEnum = data().deepCopy(fields()[17].schema(), other.lockPeriodTypeEnum);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (other.hasLockPeriodTypeEnumBuilder()) {
        this.lockPeriodTypeEnumBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getLockPeriodTypeEnumBuilder());
      }
      if (isValidValue(fields()[18], other.minimumActivePeriod)) {
        this.minimumActivePeriod = data().deepCopy(fields()[18].schema(), other.minimumActivePeriod);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.minimumActivePeriodTypeEnum)) {
        this.minimumActivePeriodTypeEnum = data().deepCopy(fields()[19].schema(), other.minimumActivePeriodTypeEnum);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (other.hasMinimumActivePeriodTypeEnumBuilder()) {
        this.minimumActivePeriodTypeEnumBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getMinimumActivePeriodTypeEnumBuilder());
      }
      if (isValidValue(fields()[20], other.allowDividendCalculationForInactiveClients)) {
        this.allowDividendCalculationForInactiveClients = data().deepCopy(fields()[20].schema(), other.allowDividendCalculationForInactiveClients);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
    }

    /**
     * Creates a Builder by copying an existing ShareAccountDataV1 instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.fineract.avro.share.v1.ShareAccountDataV1 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.accountNo)) {
        this.accountNo = data().deepCopy(fields()[1].schema(), other.accountNo);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.externalId)) {
        this.externalId = data().deepCopy(fields()[2].schema(), other.externalId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.savingsAccountNumber)) {
        this.savingsAccountNumber = data().deepCopy(fields()[3].schema(), other.savingsAccountNumber);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.clientId)) {
        this.clientId = data().deepCopy(fields()[4].schema(), other.clientId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.clientName)) {
        this.clientName = data().deepCopy(fields()[5].schema(), other.clientName);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.defaultShares)) {
        this.defaultShares = data().deepCopy(fields()[6].schema(), other.defaultShares);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.productId)) {
        this.productId = data().deepCopy(fields()[7].schema(), other.productId);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.productName)) {
        this.productName = data().deepCopy(fields()[8].schema(), other.productName);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.status)) {
        this.status = data().deepCopy(fields()[9].schema(), other.status);
        fieldSetFlags()[9] = true;
      }
      this.statusBuilder = null;
      if (isValidValue(fields()[10], other.timeline)) {
        this.timeline = data().deepCopy(fields()[10].schema(), other.timeline);
        fieldSetFlags()[10] = true;
      }
      this.timelineBuilder = null;
      if (isValidValue(fields()[11], other.currency)) {
        this.currency = data().deepCopy(fields()[11].schema(), other.currency);
        fieldSetFlags()[11] = true;
      }
      this.currencyBuilder = null;
      if (isValidValue(fields()[12], other.summary)) {
        this.summary = data().deepCopy(fields()[12].schema(), other.summary);
        fieldSetFlags()[12] = true;
      }
      this.summaryBuilder = null;
      if (isValidValue(fields()[13], other.purchasedShares)) {
        this.purchasedShares = data().deepCopy(fields()[13].schema(), other.purchasedShares);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.savingsAccountId)) {
        this.savingsAccountId = data().deepCopy(fields()[14].schema(), other.savingsAccountId);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.currentMarketPrice)) {
        this.currentMarketPrice = data().deepCopy(fields()[15].schema(), other.currentMarketPrice);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.lockinPeriod)) {
        this.lockinPeriod = data().deepCopy(fields()[16].schema(), other.lockinPeriod);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.lockPeriodTypeEnum)) {
        this.lockPeriodTypeEnum = data().deepCopy(fields()[17].schema(), other.lockPeriodTypeEnum);
        fieldSetFlags()[17] = true;
      }
      this.lockPeriodTypeEnumBuilder = null;
      if (isValidValue(fields()[18], other.minimumActivePeriod)) {
        this.minimumActivePeriod = data().deepCopy(fields()[18].schema(), other.minimumActivePeriod);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.minimumActivePeriodTypeEnum)) {
        this.minimumActivePeriodTypeEnum = data().deepCopy(fields()[19].schema(), other.minimumActivePeriodTypeEnum);
        fieldSetFlags()[19] = true;
      }
      this.minimumActivePeriodTypeEnumBuilder = null;
      if (isValidValue(fields()[20], other.allowDividendCalculationForInactiveClients)) {
        this.allowDividendCalculationForInactiveClients = data().deepCopy(fields()[20].schema(), other.allowDividendCalculationForInactiveClients);
        fieldSetFlags()[20] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setId(java.lang.Long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'accountNo' field.
      * @return The value.
      */
    public java.lang.String getAccountNo() {
      return accountNo;
    }


    /**
      * Sets the value of the 'accountNo' field.
      * @param value The value of 'accountNo'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setAccountNo(java.lang.String value) {
      validate(fields()[1], value);
      this.accountNo = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'accountNo' field has been set.
      * @return True if the 'accountNo' field has been set, false otherwise.
      */
    public boolean hasAccountNo() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'accountNo' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder clearAccountNo() {
      accountNo = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'externalId' field.
      * @return The value.
      */
    public java.lang.String getExternalId() {
      return externalId;
    }


    /**
      * Sets the value of the 'externalId' field.
      * @param value The value of 'externalId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setExternalId(java.lang.String value) {
      validate(fields()[2], value);
      this.externalId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'externalId' field has been set.
      * @return True if the 'externalId' field has been set, false otherwise.
      */
    public boolean hasExternalId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'externalId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder clearExternalId() {
      externalId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'savingsAccountNumber' field.
      * @return The value.
      */
    public java.lang.String getSavingsAccountNumber() {
      return savingsAccountNumber;
    }


    /**
      * Sets the value of the 'savingsAccountNumber' field.
      * @param value The value of 'savingsAccountNumber'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setSavingsAccountNumber(java.lang.String value) {
      validate(fields()[3], value);
      this.savingsAccountNumber = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'savingsAccountNumber' field has been set.
      * @return True if the 'savingsAccountNumber' field has been set, false otherwise.
      */
    public boolean hasSavingsAccountNumber() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'savingsAccountNumber' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder clearSavingsAccountNumber() {
      savingsAccountNumber = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'clientId' field.
      * @return The value.
      */
    public java.lang.Long getClientId() {
      return clientId;
    }


    /**
      * Sets the value of the 'clientId' field.
      * @param value The value of 'clientId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setClientId(java.lang.Long value) {
      validate(fields()[4], value);
      this.clientId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'clientId' field has been set.
      * @return True if the 'clientId' field has been set, false otherwise.
      */
    public boolean hasClientId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'clientId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder clearClientId() {
      clientId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'clientName' field.
      * @return The value.
      */
    public java.lang.String getClientName() {
      return clientName;
    }


    /**
      * Sets the value of the 'clientName' field.
      * @param value The value of 'clientName'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setClientName(java.lang.String value) {
      validate(fields()[5], value);
      this.clientName = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'clientName' field has been set.
      * @return True if the 'clientName' field has been set, false otherwise.
      */
    public boolean hasClientName() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'clientName' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder clearClientName() {
      clientName = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'defaultShares' field.
      * @return The value.
      */
    public java.lang.Long getDefaultShares() {
      return defaultShares;
    }


    /**
      * Sets the value of the 'defaultShares' field.
      * @param value The value of 'defaultShares'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setDefaultShares(java.lang.Long value) {
      validate(fields()[6], value);
      this.defaultShares = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'defaultShares' field has been set.
      * @return True if the 'defaultShares' field has been set, false otherwise.
      */
    public boolean hasDefaultShares() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'defaultShares' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder clearDefaultShares() {
      defaultShares = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'productId' field.
      * @return The value.
      */
    public java.lang.Long getProductId() {
      return productId;
    }


    /**
      * Sets the value of the 'productId' field.
      * @param value The value of 'productId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setProductId(java.lang.Long value) {
      validate(fields()[7], value);
      this.productId = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'productId' field has been set.
      * @return True if the 'productId' field has been set, false otherwise.
      */
    public boolean hasProductId() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'productId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder clearProductId() {
      productId = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'productName' field.
      * @return The value.
      */
    public java.lang.String getProductName() {
      return productName;
    }


    /**
      * Sets the value of the 'productName' field.
      * @param value The value of 'productName'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setProductName(java.lang.String value) {
      validate(fields()[8], value);
      this.productName = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'productName' field has been set.
      * @return True if the 'productName' field has been set, false otherwise.
      */
    public boolean hasProductName() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'productName' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder clearProductName() {
      productName = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountStatusEnumDataV1 getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setStatus(org.apache.fineract.avro.share.v1.ShareAccountStatusEnumDataV1 value) {
      validate(fields()[9], value);
      this.statusBuilder = null;
      this.status = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'status' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.share.v1.ShareAccountStatusEnumDataV1.Builder getStatusBuilder() {
      if (statusBuilder == null) {
        if (hasStatus()) {
          setStatusBuilder(org.apache.fineract.avro.share.v1.ShareAccountStatusEnumDataV1.newBuilder(status));
        } else {
          setStatusBuilder(org.apache.fineract.avro.share.v1.ShareAccountStatusEnumDataV1.newBuilder());
        }
      }
      return statusBuilder;
    }

    /**
     * Sets the Builder instance for the 'status' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setStatusBuilder(org.apache.fineract.avro.share.v1.ShareAccountStatusEnumDataV1.Builder value) {
      clearStatus();
      statusBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'status' field has an active Builder instance
     * @return True if the 'status' field has an active Builder instance
     */
    public boolean hasStatusBuilder() {
      return statusBuilder != null;
    }

    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder clearStatus() {
      status = null;
      statusBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'timeline' field.
      * @return The value.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1 getTimeline() {
      return timeline;
    }


    /**
      * Sets the value of the 'timeline' field.
      * @param value The value of 'timeline'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setTimeline(org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1 value) {
      validate(fields()[10], value);
      this.timelineBuilder = null;
      this.timeline = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'timeline' field has been set.
      * @return True if the 'timeline' field has been set, false otherwise.
      */
    public boolean hasTimeline() {
      return fieldSetFlags()[10];
    }

    /**
     * Gets the Builder instance for the 'timeline' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder getTimelineBuilder() {
      if (timelineBuilder == null) {
        if (hasTimeline()) {
          setTimelineBuilder(org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.newBuilder(timeline));
        } else {
          setTimelineBuilder(org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.newBuilder());
        }
      }
      return timelineBuilder;
    }

    /**
     * Sets the Builder instance for the 'timeline' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setTimelineBuilder(org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder value) {
      clearTimeline();
      timelineBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'timeline' field has an active Builder instance
     * @return True if the 'timeline' field has an active Builder instance
     */
    public boolean hasTimelineBuilder() {
      return timelineBuilder != null;
    }

    /**
      * Clears the value of the 'timeline' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder clearTimeline() {
      timeline = null;
      timelineBuilder = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'currency' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.CurrencyDataV1 getCurrency() {
      return currency;
    }


    /**
      * Sets the value of the 'currency' field.
      * @param value The value of 'currency'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setCurrency(org.apache.fineract.avro.generic.v1.CurrencyDataV1 value) {
      validate(fields()[11], value);
      this.currencyBuilder = null;
      this.currency = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'currency' field has been set.
      * @return True if the 'currency' field has been set, false otherwise.
      */
    public boolean hasCurrency() {
      return fieldSetFlags()[11];
    }

    /**
     * Gets the Builder instance for the 'currency' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder getCurrencyBuilder() {
      if (currencyBuilder == null) {
        if (hasCurrency()) {
          setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder(currency));
        } else {
          setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder());
        }
      }
      return currencyBuilder;
    }

    /**
     * Sets the Builder instance for the 'currency' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder value) {
      clearCurrency();
      currencyBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'currency' field has an active Builder instance
     * @return True if the 'currency' field has an active Builder instance
     */
    public boolean hasCurrencyBuilder() {
      return currencyBuilder != null;
    }

    /**
      * Clears the value of the 'currency' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder clearCurrency() {
      currency = null;
      currencyBuilder = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'summary' field.
      * @return The value.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountSummaryDataV1 getSummary() {
      return summary;
    }


    /**
      * Sets the value of the 'summary' field.
      * @param value The value of 'summary'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setSummary(org.apache.fineract.avro.share.v1.ShareAccountSummaryDataV1 value) {
      validate(fields()[12], value);
      this.summaryBuilder = null;
      this.summary = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'summary' field has been set.
      * @return True if the 'summary' field has been set, false otherwise.
      */
    public boolean hasSummary() {
      return fieldSetFlags()[12];
    }

    /**
     * Gets the Builder instance for the 'summary' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.share.v1.ShareAccountSummaryDataV1.Builder getSummaryBuilder() {
      if (summaryBuilder == null) {
        if (hasSummary()) {
          setSummaryBuilder(org.apache.fineract.avro.share.v1.ShareAccountSummaryDataV1.newBuilder(summary));
        } else {
          setSummaryBuilder(org.apache.fineract.avro.share.v1.ShareAccountSummaryDataV1.newBuilder());
        }
      }
      return summaryBuilder;
    }

    /**
     * Sets the Builder instance for the 'summary' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setSummaryBuilder(org.apache.fineract.avro.share.v1.ShareAccountSummaryDataV1.Builder value) {
      clearSummary();
      summaryBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'summary' field has an active Builder instance
     * @return True if the 'summary' field has an active Builder instance
     */
    public boolean hasSummaryBuilder() {
      return summaryBuilder != null;
    }

    /**
      * Clears the value of the 'summary' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder clearSummary() {
      summary = null;
      summaryBuilder = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'purchasedShares' field.
      * @return The value.
      */
    public java.util.List<org.apache.fineract.avro.share.v1.ShareAccountTransactionDataV1> getPurchasedShares() {
      return purchasedShares;
    }


    /**
      * Sets the value of the 'purchasedShares' field.
      * @param value The value of 'purchasedShares'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setPurchasedShares(java.util.List<org.apache.fineract.avro.share.v1.ShareAccountTransactionDataV1> value) {
      validate(fields()[13], value);
      this.purchasedShares = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'purchasedShares' field has been set.
      * @return True if the 'purchasedShares' field has been set, false otherwise.
      */
    public boolean hasPurchasedShares() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'purchasedShares' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder clearPurchasedShares() {
      purchasedShares = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'savingsAccountId' field.
      * @return The value.
      */
    public java.lang.Long getSavingsAccountId() {
      return savingsAccountId;
    }


    /**
      * Sets the value of the 'savingsAccountId' field.
      * @param value The value of 'savingsAccountId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setSavingsAccountId(java.lang.Long value) {
      validate(fields()[14], value);
      this.savingsAccountId = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'savingsAccountId' field has been set.
      * @return True if the 'savingsAccountId' field has been set, false otherwise.
      */
    public boolean hasSavingsAccountId() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'savingsAccountId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder clearSavingsAccountId() {
      savingsAccountId = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'currentMarketPrice' field.
      * @return The value.
      */
    public java.math.BigDecimal getCurrentMarketPrice() {
      return currentMarketPrice;
    }


    /**
      * Sets the value of the 'currentMarketPrice' field.
      * @param value The value of 'currentMarketPrice'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setCurrentMarketPrice(java.math.BigDecimal value) {
      validate(fields()[15], value);
      this.currentMarketPrice = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'currentMarketPrice' field has been set.
      * @return True if the 'currentMarketPrice' field has been set, false otherwise.
      */
    public boolean hasCurrentMarketPrice() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'currentMarketPrice' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder clearCurrentMarketPrice() {
      currentMarketPrice = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'lockinPeriod' field.
      * @return The value.
      */
    public java.lang.Integer getLockinPeriod() {
      return lockinPeriod;
    }


    /**
      * Sets the value of the 'lockinPeriod' field.
      * @param value The value of 'lockinPeriod'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setLockinPeriod(java.lang.Integer value) {
      validate(fields()[16], value);
      this.lockinPeriod = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'lockinPeriod' field has been set.
      * @return True if the 'lockinPeriod' field has been set, false otherwise.
      */
    public boolean hasLockinPeriod() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'lockinPeriod' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder clearLockinPeriod() {
      lockinPeriod = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'lockPeriodTypeEnum' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getLockPeriodTypeEnum() {
      return lockPeriodTypeEnum;
    }


    /**
      * Sets the value of the 'lockPeriodTypeEnum' field.
      * @param value The value of 'lockPeriodTypeEnum'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setLockPeriodTypeEnum(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[17], value);
      this.lockPeriodTypeEnumBuilder = null;
      this.lockPeriodTypeEnum = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'lockPeriodTypeEnum' field has been set.
      * @return True if the 'lockPeriodTypeEnum' field has been set, false otherwise.
      */
    public boolean hasLockPeriodTypeEnum() {
      return fieldSetFlags()[17];
    }

    /**
     * Gets the Builder instance for the 'lockPeriodTypeEnum' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getLockPeriodTypeEnumBuilder() {
      if (lockPeriodTypeEnumBuilder == null) {
        if (hasLockPeriodTypeEnum()) {
          setLockPeriodTypeEnumBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(lockPeriodTypeEnum));
        } else {
          setLockPeriodTypeEnumBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return lockPeriodTypeEnumBuilder;
    }

    /**
     * Sets the Builder instance for the 'lockPeriodTypeEnum' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setLockPeriodTypeEnumBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearLockPeriodTypeEnum();
      lockPeriodTypeEnumBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'lockPeriodTypeEnum' field has an active Builder instance
     * @return True if the 'lockPeriodTypeEnum' field has an active Builder instance
     */
    public boolean hasLockPeriodTypeEnumBuilder() {
      return lockPeriodTypeEnumBuilder != null;
    }

    /**
      * Clears the value of the 'lockPeriodTypeEnum' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder clearLockPeriodTypeEnum() {
      lockPeriodTypeEnum = null;
      lockPeriodTypeEnumBuilder = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'minimumActivePeriod' field.
      * @return The value.
      */
    public java.lang.Integer getMinimumActivePeriod() {
      return minimumActivePeriod;
    }


    /**
      * Sets the value of the 'minimumActivePeriod' field.
      * @param value The value of 'minimumActivePeriod'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setMinimumActivePeriod(java.lang.Integer value) {
      validate(fields()[18], value);
      this.minimumActivePeriod = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'minimumActivePeriod' field has been set.
      * @return True if the 'minimumActivePeriod' field has been set, false otherwise.
      */
    public boolean hasMinimumActivePeriod() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'minimumActivePeriod' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder clearMinimumActivePeriod() {
      minimumActivePeriod = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'minimumActivePeriodTypeEnum' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getMinimumActivePeriodTypeEnum() {
      return minimumActivePeriodTypeEnum;
    }


    /**
      * Sets the value of the 'minimumActivePeriodTypeEnum' field.
      * @param value The value of 'minimumActivePeriodTypeEnum'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setMinimumActivePeriodTypeEnum(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[19], value);
      this.minimumActivePeriodTypeEnumBuilder = null;
      this.minimumActivePeriodTypeEnum = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'minimumActivePeriodTypeEnum' field has been set.
      * @return True if the 'minimumActivePeriodTypeEnum' field has been set, false otherwise.
      */
    public boolean hasMinimumActivePeriodTypeEnum() {
      return fieldSetFlags()[19];
    }

    /**
     * Gets the Builder instance for the 'minimumActivePeriodTypeEnum' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getMinimumActivePeriodTypeEnumBuilder() {
      if (minimumActivePeriodTypeEnumBuilder == null) {
        if (hasMinimumActivePeriodTypeEnum()) {
          setMinimumActivePeriodTypeEnumBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(minimumActivePeriodTypeEnum));
        } else {
          setMinimumActivePeriodTypeEnumBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return minimumActivePeriodTypeEnumBuilder;
    }

    /**
     * Sets the Builder instance for the 'minimumActivePeriodTypeEnum' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setMinimumActivePeriodTypeEnumBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearMinimumActivePeriodTypeEnum();
      minimumActivePeriodTypeEnumBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'minimumActivePeriodTypeEnum' field has an active Builder instance
     * @return True if the 'minimumActivePeriodTypeEnum' field has an active Builder instance
     */
    public boolean hasMinimumActivePeriodTypeEnumBuilder() {
      return minimumActivePeriodTypeEnumBuilder != null;
    }

    /**
      * Clears the value of the 'minimumActivePeriodTypeEnum' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder clearMinimumActivePeriodTypeEnum() {
      minimumActivePeriodTypeEnum = null;
      minimumActivePeriodTypeEnumBuilder = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'allowDividendCalculationForInactiveClients' field.
      * @return The value.
      */
    public java.lang.Boolean getAllowDividendCalculationForInactiveClients() {
      return allowDividendCalculationForInactiveClients;
    }


    /**
      * Sets the value of the 'allowDividendCalculationForInactiveClients' field.
      * @param value The value of 'allowDividendCalculationForInactiveClients'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder setAllowDividendCalculationForInactiveClients(java.lang.Boolean value) {
      validate(fields()[20], value);
      this.allowDividendCalculationForInactiveClients = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'allowDividendCalculationForInactiveClients' field has been set.
      * @return True if the 'allowDividendCalculationForInactiveClients' field has been set, false otherwise.
      */
    public boolean hasAllowDividendCalculationForInactiveClients() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'allowDividendCalculationForInactiveClients' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountDataV1.Builder clearAllowDividendCalculationForInactiveClients() {
      allowDividendCalculationForInactiveClients = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ShareAccountDataV1 build() {
      try {
        ShareAccountDataV1 record = new ShareAccountDataV1();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.accountNo = fieldSetFlags()[1] ? this.accountNo : (java.lang.String) defaultValue(fields()[1]);
        record.externalId = fieldSetFlags()[2] ? this.externalId : (java.lang.String) defaultValue(fields()[2]);
        record.savingsAccountNumber = fieldSetFlags()[3] ? this.savingsAccountNumber : (java.lang.String) defaultValue(fields()[3]);
        record.clientId = fieldSetFlags()[4] ? this.clientId : (java.lang.Long) defaultValue(fields()[4]);
        record.clientName = fieldSetFlags()[5] ? this.clientName : (java.lang.String) defaultValue(fields()[5]);
        record.defaultShares = fieldSetFlags()[6] ? this.defaultShares : (java.lang.Long) defaultValue(fields()[6]);
        record.productId = fieldSetFlags()[7] ? this.productId : (java.lang.Long) defaultValue(fields()[7]);
        record.productName = fieldSetFlags()[8] ? this.productName : (java.lang.String) defaultValue(fields()[8]);
        if (statusBuilder != null) {
          try {
            record.status = this.statusBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("status"));
            throw e;
          }
        } else {
          record.status = fieldSetFlags()[9] ? this.status : (org.apache.fineract.avro.share.v1.ShareAccountStatusEnumDataV1) defaultValue(fields()[9]);
        }
        if (timelineBuilder != null) {
          try {
            record.timeline = this.timelineBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("timeline"));
            throw e;
          }
        } else {
          record.timeline = fieldSetFlags()[10] ? this.timeline : (org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1) defaultValue(fields()[10]);
        }
        if (currencyBuilder != null) {
          try {
            record.currency = this.currencyBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("currency"));
            throw e;
          }
        } else {
          record.currency = fieldSetFlags()[11] ? this.currency : (org.apache.fineract.avro.generic.v1.CurrencyDataV1) defaultValue(fields()[11]);
        }
        if (summaryBuilder != null) {
          try {
            record.summary = this.summaryBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("summary"));
            throw e;
          }
        } else {
          record.summary = fieldSetFlags()[12] ? this.summary : (org.apache.fineract.avro.share.v1.ShareAccountSummaryDataV1) defaultValue(fields()[12]);
        }
        record.purchasedShares = fieldSetFlags()[13] ? this.purchasedShares : (java.util.List<org.apache.fineract.avro.share.v1.ShareAccountTransactionDataV1>) defaultValue(fields()[13]);
        record.savingsAccountId = fieldSetFlags()[14] ? this.savingsAccountId : (java.lang.Long) defaultValue(fields()[14]);
        record.currentMarketPrice = fieldSetFlags()[15] ? this.currentMarketPrice : (java.math.BigDecimal) defaultValue(fields()[15]);
        record.lockinPeriod = fieldSetFlags()[16] ? this.lockinPeriod : (java.lang.Integer) defaultValue(fields()[16]);
        if (lockPeriodTypeEnumBuilder != null) {
          try {
            record.lockPeriodTypeEnum = this.lockPeriodTypeEnumBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("lockPeriodTypeEnum"));
            throw e;
          }
        } else {
          record.lockPeriodTypeEnum = fieldSetFlags()[17] ? this.lockPeriodTypeEnum : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[17]);
        }
        record.minimumActivePeriod = fieldSetFlags()[18] ? this.minimumActivePeriod : (java.lang.Integer) defaultValue(fields()[18]);
        if (minimumActivePeriodTypeEnumBuilder != null) {
          try {
            record.minimumActivePeriodTypeEnum = this.minimumActivePeriodTypeEnumBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("minimumActivePeriodTypeEnum"));
            throw e;
          }
        } else {
          record.minimumActivePeriodTypeEnum = fieldSetFlags()[19] ? this.minimumActivePeriodTypeEnum : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[19]);
        }
        record.allowDividendCalculationForInactiveClients = fieldSetFlags()[20] ? this.allowDividendCalculationForInactiveClients : (java.lang.Boolean) defaultValue(fields()[20]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ShareAccountDataV1>
    WRITER$ = (org.apache.avro.io.DatumWriter<ShareAccountDataV1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ShareAccountDataV1>
    READER$ = (org.apache.avro.io.DatumReader<ShareAccountDataV1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










