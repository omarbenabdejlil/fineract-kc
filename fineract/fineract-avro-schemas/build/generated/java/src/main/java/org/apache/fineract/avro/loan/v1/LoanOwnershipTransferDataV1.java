/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

package org.apache.fineract.avro.loan.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class LoanOwnershipTransferDataV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, org.apache.fineract.avro.generator.ByteBufferSerializable {
  private static final long serialVersionUID = -1148713671894310778L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LoanOwnershipTransferDataV1\",\"namespace\":\"org.apache.fineract.avro.loan.v1\",\"fields\":[{\"name\":\"loanId\",\"type\":\"long\"},{\"name\":\"loanExternalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"transferExternalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"submittedDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"assetOwnerExternalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"currency\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CurrencyDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"decimalPlaces\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"inMultiplesOf\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"displaySymbol\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nameCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"displayLabel\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"totalOutstandingBalanceAmount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"outstandingPrincipalPortion\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"outstandingFeePortion\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"outstandingPenaltyPortion\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"outstandingInterestPortion\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"overPaymentPortion\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"unrecognizedIncomePortion\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"unpaidChargeData\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"UnpaidChargeDataV1\",\"fields\":[{\"name\":\"chargeId\",\"type\":\"long\"},{\"name\":\"chargeName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"outstandingAmount\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}}]}}],\"default\":null},{\"name\":\"transferStatus\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"transferStatusReason\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"settlementDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"purchasePriceRatio\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<LoanOwnershipTransferDataV1> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<LoanOwnershipTransferDataV1> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<LoanOwnershipTransferDataV1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<LoanOwnershipTransferDataV1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<LoanOwnershipTransferDataV1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this LoanOwnershipTransferDataV1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  @Override
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a LoanOwnershipTransferDataV1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a LoanOwnershipTransferDataV1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static LoanOwnershipTransferDataV1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private long loanId;
  private java.lang.String loanExternalId;
  private java.lang.String type;
  private java.lang.String transferExternalId;
  private java.lang.String submittedDate;
  private java.lang.String assetOwnerExternalId;
  private org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency;
  private java.math.BigDecimal totalOutstandingBalanceAmount;
  private java.math.BigDecimal outstandingPrincipalPortion;
  private java.math.BigDecimal outstandingFeePortion;
  private java.math.BigDecimal outstandingPenaltyPortion;
  private java.math.BigDecimal outstandingInterestPortion;
  private java.math.BigDecimal overPaymentPortion;
  private java.math.BigDecimal unrecognizedIncomePortion;
  private java.util.List<org.apache.fineract.avro.loan.v1.UnpaidChargeDataV1> unpaidChargeData;
  private java.lang.String transferStatus;
  private java.lang.String transferStatusReason;
  private java.lang.String settlementDate;
  private java.lang.String purchasePriceRatio;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LoanOwnershipTransferDataV1() {}

  /**
   * All-args constructor.
   * @param loanId The new value for loanId
   * @param loanExternalId The new value for loanExternalId
   * @param type The new value for type
   * @param transferExternalId The new value for transferExternalId
   * @param submittedDate The new value for submittedDate
   * @param assetOwnerExternalId The new value for assetOwnerExternalId
   * @param currency The new value for currency
   * @param totalOutstandingBalanceAmount The new value for totalOutstandingBalanceAmount
   * @param outstandingPrincipalPortion The new value for outstandingPrincipalPortion
   * @param outstandingFeePortion The new value for outstandingFeePortion
   * @param outstandingPenaltyPortion The new value for outstandingPenaltyPortion
   * @param outstandingInterestPortion The new value for outstandingInterestPortion
   * @param overPaymentPortion The new value for overPaymentPortion
   * @param unrecognizedIncomePortion The new value for unrecognizedIncomePortion
   * @param unpaidChargeData The new value for unpaidChargeData
   * @param transferStatus The new value for transferStatus
   * @param transferStatusReason The new value for transferStatusReason
   * @param settlementDate The new value for settlementDate
   * @param purchasePriceRatio The new value for purchasePriceRatio
   */
  public LoanOwnershipTransferDataV1(java.lang.Long loanId, java.lang.String loanExternalId, java.lang.String type, java.lang.String transferExternalId, java.lang.String submittedDate, java.lang.String assetOwnerExternalId, org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency, java.math.BigDecimal totalOutstandingBalanceAmount, java.math.BigDecimal outstandingPrincipalPortion, java.math.BigDecimal outstandingFeePortion, java.math.BigDecimal outstandingPenaltyPortion, java.math.BigDecimal outstandingInterestPortion, java.math.BigDecimal overPaymentPortion, java.math.BigDecimal unrecognizedIncomePortion, java.util.List<org.apache.fineract.avro.loan.v1.UnpaidChargeDataV1> unpaidChargeData, java.lang.String transferStatus, java.lang.String transferStatusReason, java.lang.String settlementDate, java.lang.String purchasePriceRatio) {
    this.loanId = loanId;
    this.loanExternalId = loanExternalId;
    this.type = type;
    this.transferExternalId = transferExternalId;
    this.submittedDate = submittedDate;
    this.assetOwnerExternalId = assetOwnerExternalId;
    this.currency = currency;
    this.totalOutstandingBalanceAmount = totalOutstandingBalanceAmount;
    this.outstandingPrincipalPortion = outstandingPrincipalPortion;
    this.outstandingFeePortion = outstandingFeePortion;
    this.outstandingPenaltyPortion = outstandingPenaltyPortion;
    this.outstandingInterestPortion = outstandingInterestPortion;
    this.overPaymentPortion = overPaymentPortion;
    this.unrecognizedIncomePortion = unrecognizedIncomePortion;
    this.unpaidChargeData = unpaidChargeData;
    this.transferStatus = transferStatus;
    this.transferStatusReason = transferStatusReason;
    this.settlementDate = settlementDate;
    this.purchasePriceRatio = purchasePriceRatio;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return loanId;
    case 1: return loanExternalId;
    case 2: return type;
    case 3: return transferExternalId;
    case 4: return submittedDate;
    case 5: return assetOwnerExternalId;
    case 6: return currency;
    case 7: return totalOutstandingBalanceAmount;
    case 8: return outstandingPrincipalPortion;
    case 9: return outstandingFeePortion;
    case 10: return outstandingPenaltyPortion;
    case 11: return outstandingInterestPortion;
    case 12: return overPaymentPortion;
    case 13: return unrecognizedIncomePortion;
    case 14: return unpaidChargeData;
    case 15: return transferStatus;
    case 16: return transferStatusReason;
    case 17: return settlementDate;
    case 18: return purchasePriceRatio;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: loanId = (java.lang.Long)value$; break;
    case 1: loanExternalId = value$ != null ? value$.toString() : null; break;
    case 2: type = value$ != null ? value$.toString() : null; break;
    case 3: transferExternalId = value$ != null ? value$.toString() : null; break;
    case 4: submittedDate = value$ != null ? value$.toString() : null; break;
    case 5: assetOwnerExternalId = value$ != null ? value$.toString() : null; break;
    case 6: currency = (org.apache.fineract.avro.generic.v1.CurrencyDataV1)value$; break;
    case 7: totalOutstandingBalanceAmount = (java.math.BigDecimal)value$; break;
    case 8: outstandingPrincipalPortion = (java.math.BigDecimal)value$; break;
    case 9: outstandingFeePortion = (java.math.BigDecimal)value$; break;
    case 10: outstandingPenaltyPortion = (java.math.BigDecimal)value$; break;
    case 11: outstandingInterestPortion = (java.math.BigDecimal)value$; break;
    case 12: overPaymentPortion = (java.math.BigDecimal)value$; break;
    case 13: unrecognizedIncomePortion = (java.math.BigDecimal)value$; break;
    case 14: unpaidChargeData = (java.util.List<org.apache.fineract.avro.loan.v1.UnpaidChargeDataV1>)value$; break;
    case 15: transferStatus = value$ != null ? value$.toString() : null; break;
    case 16: transferStatusReason = value$ != null ? value$.toString() : null; break;
    case 17: settlementDate = value$ != null ? value$.toString() : null; break;
    case 18: purchasePriceRatio = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'loanId' field.
   * @return The value of the 'loanId' field.
   */
  public long getLoanId() {
    return loanId;
  }


  /**
   * Sets the value of the 'loanId' field.
   * @param value the value to set.
   */
  public void setLoanId(long value) {
    this.loanId = value;
  }

  /**
   * Gets the value of the 'loanExternalId' field.
   * @return The value of the 'loanExternalId' field.
   */
  public java.lang.String getLoanExternalId() {
    return loanExternalId;
  }


  /**
   * Sets the value of the 'loanExternalId' field.
   * @param value the value to set.
   */
  public void setLoanExternalId(java.lang.String value) {
    this.loanExternalId = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public java.lang.String getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.String value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'transferExternalId' field.
   * @return The value of the 'transferExternalId' field.
   */
  public java.lang.String getTransferExternalId() {
    return transferExternalId;
  }


  /**
   * Sets the value of the 'transferExternalId' field.
   * @param value the value to set.
   */
  public void setTransferExternalId(java.lang.String value) {
    this.transferExternalId = value;
  }

  /**
   * Gets the value of the 'submittedDate' field.
   * @return The value of the 'submittedDate' field.
   */
  public java.lang.String getSubmittedDate() {
    return submittedDate;
  }


  /**
   * Sets the value of the 'submittedDate' field.
   * @param value the value to set.
   */
  public void setSubmittedDate(java.lang.String value) {
    this.submittedDate = value;
  }

  /**
   * Gets the value of the 'assetOwnerExternalId' field.
   * @return The value of the 'assetOwnerExternalId' field.
   */
  public java.lang.String getAssetOwnerExternalId() {
    return assetOwnerExternalId;
  }


  /**
   * Sets the value of the 'assetOwnerExternalId' field.
   * @param value the value to set.
   */
  public void setAssetOwnerExternalId(java.lang.String value) {
    this.assetOwnerExternalId = value;
  }

  /**
   * Gets the value of the 'currency' field.
   * @return The value of the 'currency' field.
   */
  public org.apache.fineract.avro.generic.v1.CurrencyDataV1 getCurrency() {
    return currency;
  }


  /**
   * Sets the value of the 'currency' field.
   * @param value the value to set.
   */
  public void setCurrency(org.apache.fineract.avro.generic.v1.CurrencyDataV1 value) {
    this.currency = value;
  }

  /**
   * Gets the value of the 'totalOutstandingBalanceAmount' field.
   * @return The value of the 'totalOutstandingBalanceAmount' field.
   */
  public java.math.BigDecimal getTotalOutstandingBalanceAmount() {
    return totalOutstandingBalanceAmount;
  }


  /**
   * Sets the value of the 'totalOutstandingBalanceAmount' field.
   * @param value the value to set.
   */
  public void setTotalOutstandingBalanceAmount(java.math.BigDecimal value) {
    this.totalOutstandingBalanceAmount = value;
  }

  /**
   * Gets the value of the 'outstandingPrincipalPortion' field.
   * @return The value of the 'outstandingPrincipalPortion' field.
   */
  public java.math.BigDecimal getOutstandingPrincipalPortion() {
    return outstandingPrincipalPortion;
  }


  /**
   * Sets the value of the 'outstandingPrincipalPortion' field.
   * @param value the value to set.
   */
  public void setOutstandingPrincipalPortion(java.math.BigDecimal value) {
    this.outstandingPrincipalPortion = value;
  }

  /**
   * Gets the value of the 'outstandingFeePortion' field.
   * @return The value of the 'outstandingFeePortion' field.
   */
  public java.math.BigDecimal getOutstandingFeePortion() {
    return outstandingFeePortion;
  }


  /**
   * Sets the value of the 'outstandingFeePortion' field.
   * @param value the value to set.
   */
  public void setOutstandingFeePortion(java.math.BigDecimal value) {
    this.outstandingFeePortion = value;
  }

  /**
   * Gets the value of the 'outstandingPenaltyPortion' field.
   * @return The value of the 'outstandingPenaltyPortion' field.
   */
  public java.math.BigDecimal getOutstandingPenaltyPortion() {
    return outstandingPenaltyPortion;
  }


  /**
   * Sets the value of the 'outstandingPenaltyPortion' field.
   * @param value the value to set.
   */
  public void setOutstandingPenaltyPortion(java.math.BigDecimal value) {
    this.outstandingPenaltyPortion = value;
  }

  /**
   * Gets the value of the 'outstandingInterestPortion' field.
   * @return The value of the 'outstandingInterestPortion' field.
   */
  public java.math.BigDecimal getOutstandingInterestPortion() {
    return outstandingInterestPortion;
  }


  /**
   * Sets the value of the 'outstandingInterestPortion' field.
   * @param value the value to set.
   */
  public void setOutstandingInterestPortion(java.math.BigDecimal value) {
    this.outstandingInterestPortion = value;
  }

  /**
   * Gets the value of the 'overPaymentPortion' field.
   * @return The value of the 'overPaymentPortion' field.
   */
  public java.math.BigDecimal getOverPaymentPortion() {
    return overPaymentPortion;
  }


  /**
   * Sets the value of the 'overPaymentPortion' field.
   * @param value the value to set.
   */
  public void setOverPaymentPortion(java.math.BigDecimal value) {
    this.overPaymentPortion = value;
  }

  /**
   * Gets the value of the 'unrecognizedIncomePortion' field.
   * @return The value of the 'unrecognizedIncomePortion' field.
   */
  public java.math.BigDecimal getUnrecognizedIncomePortion() {
    return unrecognizedIncomePortion;
  }


  /**
   * Sets the value of the 'unrecognizedIncomePortion' field.
   * @param value the value to set.
   */
  public void setUnrecognizedIncomePortion(java.math.BigDecimal value) {
    this.unrecognizedIncomePortion = value;
  }

  /**
   * Gets the value of the 'unpaidChargeData' field.
   * @return The value of the 'unpaidChargeData' field.
   */
  public java.util.List<org.apache.fineract.avro.loan.v1.UnpaidChargeDataV1> getUnpaidChargeData() {
    return unpaidChargeData;
  }


  /**
   * Sets the value of the 'unpaidChargeData' field.
   * @param value the value to set.
   */
  public void setUnpaidChargeData(java.util.List<org.apache.fineract.avro.loan.v1.UnpaidChargeDataV1> value) {
    this.unpaidChargeData = value;
  }

  /**
   * Gets the value of the 'transferStatus' field.
   * @return The value of the 'transferStatus' field.
   */
  public java.lang.String getTransferStatus() {
    return transferStatus;
  }


  /**
   * Sets the value of the 'transferStatus' field.
   * @param value the value to set.
   */
  public void setTransferStatus(java.lang.String value) {
    this.transferStatus = value;
  }

  /**
   * Gets the value of the 'transferStatusReason' field.
   * @return The value of the 'transferStatusReason' field.
   */
  public java.lang.String getTransferStatusReason() {
    return transferStatusReason;
  }


  /**
   * Sets the value of the 'transferStatusReason' field.
   * @param value the value to set.
   */
  public void setTransferStatusReason(java.lang.String value) {
    this.transferStatusReason = value;
  }

  /**
   * Gets the value of the 'settlementDate' field.
   * @return The value of the 'settlementDate' field.
   */
  public java.lang.String getSettlementDate() {
    return settlementDate;
  }


  /**
   * Sets the value of the 'settlementDate' field.
   * @param value the value to set.
   */
  public void setSettlementDate(java.lang.String value) {
    this.settlementDate = value;
  }

  /**
   * Gets the value of the 'purchasePriceRatio' field.
   * @return The value of the 'purchasePriceRatio' field.
   */
  public java.lang.String getPurchasePriceRatio() {
    return purchasePriceRatio;
  }


  /**
   * Sets the value of the 'purchasePriceRatio' field.
   * @param value the value to set.
   */
  public void setPurchasePriceRatio(java.lang.String value) {
    this.purchasePriceRatio = value;
  }

  /**
   * Creates a new LoanOwnershipTransferDataV1 RecordBuilder.
   * @return A new LoanOwnershipTransferDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder newBuilder() {
    return new org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder();
  }

  /**
   * Creates a new LoanOwnershipTransferDataV1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LoanOwnershipTransferDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder newBuilder(org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder other) {
    if (other == null) {
      return new org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder(other);
    }
  }

  /**
   * Creates a new LoanOwnershipTransferDataV1 RecordBuilder by copying an existing LoanOwnershipTransferDataV1 instance.
   * @param other The existing instance to copy.
   * @return A new LoanOwnershipTransferDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder newBuilder(org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1 other) {
    if (other == null) {
      return new org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder(other);
    }
  }

  /**
   * RecordBuilder for LoanOwnershipTransferDataV1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LoanOwnershipTransferDataV1>
    implements org.apache.avro.data.RecordBuilder<LoanOwnershipTransferDataV1> {

    private long loanId;
    private java.lang.String loanExternalId;
    private java.lang.String type;
    private java.lang.String transferExternalId;
    private java.lang.String submittedDate;
    private java.lang.String assetOwnerExternalId;
    private org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency;
    private org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder currencyBuilder;
    private java.math.BigDecimal totalOutstandingBalanceAmount;
    private java.math.BigDecimal outstandingPrincipalPortion;
    private java.math.BigDecimal outstandingFeePortion;
    private java.math.BigDecimal outstandingPenaltyPortion;
    private java.math.BigDecimal outstandingInterestPortion;
    private java.math.BigDecimal overPaymentPortion;
    private java.math.BigDecimal unrecognizedIncomePortion;
    private java.util.List<org.apache.fineract.avro.loan.v1.UnpaidChargeDataV1> unpaidChargeData;
    private java.lang.String transferStatus;
    private java.lang.String transferStatusReason;
    private java.lang.String settlementDate;
    private java.lang.String purchasePriceRatio;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.loanId)) {
        this.loanId = data().deepCopy(fields()[0].schema(), other.loanId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.loanExternalId)) {
        this.loanExternalId = data().deepCopy(fields()[1].schema(), other.loanExternalId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.transferExternalId)) {
        this.transferExternalId = data().deepCopy(fields()[3].schema(), other.transferExternalId);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.submittedDate)) {
        this.submittedDate = data().deepCopy(fields()[4].schema(), other.submittedDate);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.assetOwnerExternalId)) {
        this.assetOwnerExternalId = data().deepCopy(fields()[5].schema(), other.assetOwnerExternalId);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.currency)) {
        this.currency = data().deepCopy(fields()[6].schema(), other.currency);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (other.hasCurrencyBuilder()) {
        this.currencyBuilder = org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder(other.getCurrencyBuilder());
      }
      if (isValidValue(fields()[7], other.totalOutstandingBalanceAmount)) {
        this.totalOutstandingBalanceAmount = data().deepCopy(fields()[7].schema(), other.totalOutstandingBalanceAmount);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.outstandingPrincipalPortion)) {
        this.outstandingPrincipalPortion = data().deepCopy(fields()[8].schema(), other.outstandingPrincipalPortion);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.outstandingFeePortion)) {
        this.outstandingFeePortion = data().deepCopy(fields()[9].schema(), other.outstandingFeePortion);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.outstandingPenaltyPortion)) {
        this.outstandingPenaltyPortion = data().deepCopy(fields()[10].schema(), other.outstandingPenaltyPortion);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.outstandingInterestPortion)) {
        this.outstandingInterestPortion = data().deepCopy(fields()[11].schema(), other.outstandingInterestPortion);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.overPaymentPortion)) {
        this.overPaymentPortion = data().deepCopy(fields()[12].schema(), other.overPaymentPortion);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.unrecognizedIncomePortion)) {
        this.unrecognizedIncomePortion = data().deepCopy(fields()[13].schema(), other.unrecognizedIncomePortion);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.unpaidChargeData)) {
        this.unpaidChargeData = data().deepCopy(fields()[14].schema(), other.unpaidChargeData);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.transferStatus)) {
        this.transferStatus = data().deepCopy(fields()[15].schema(), other.transferStatus);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.transferStatusReason)) {
        this.transferStatusReason = data().deepCopy(fields()[16].schema(), other.transferStatusReason);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.settlementDate)) {
        this.settlementDate = data().deepCopy(fields()[17].schema(), other.settlementDate);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.purchasePriceRatio)) {
        this.purchasePriceRatio = data().deepCopy(fields()[18].schema(), other.purchasePriceRatio);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
    }

    /**
     * Creates a Builder by copying an existing LoanOwnershipTransferDataV1 instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.loanId)) {
        this.loanId = data().deepCopy(fields()[0].schema(), other.loanId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.loanExternalId)) {
        this.loanExternalId = data().deepCopy(fields()[1].schema(), other.loanExternalId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.transferExternalId)) {
        this.transferExternalId = data().deepCopy(fields()[3].schema(), other.transferExternalId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.submittedDate)) {
        this.submittedDate = data().deepCopy(fields()[4].schema(), other.submittedDate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.assetOwnerExternalId)) {
        this.assetOwnerExternalId = data().deepCopy(fields()[5].schema(), other.assetOwnerExternalId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.currency)) {
        this.currency = data().deepCopy(fields()[6].schema(), other.currency);
        fieldSetFlags()[6] = true;
      }
      this.currencyBuilder = null;
      if (isValidValue(fields()[7], other.totalOutstandingBalanceAmount)) {
        this.totalOutstandingBalanceAmount = data().deepCopy(fields()[7].schema(), other.totalOutstandingBalanceAmount);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.outstandingPrincipalPortion)) {
        this.outstandingPrincipalPortion = data().deepCopy(fields()[8].schema(), other.outstandingPrincipalPortion);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.outstandingFeePortion)) {
        this.outstandingFeePortion = data().deepCopy(fields()[9].schema(), other.outstandingFeePortion);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.outstandingPenaltyPortion)) {
        this.outstandingPenaltyPortion = data().deepCopy(fields()[10].schema(), other.outstandingPenaltyPortion);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.outstandingInterestPortion)) {
        this.outstandingInterestPortion = data().deepCopy(fields()[11].schema(), other.outstandingInterestPortion);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.overPaymentPortion)) {
        this.overPaymentPortion = data().deepCopy(fields()[12].schema(), other.overPaymentPortion);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.unrecognizedIncomePortion)) {
        this.unrecognizedIncomePortion = data().deepCopy(fields()[13].schema(), other.unrecognizedIncomePortion);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.unpaidChargeData)) {
        this.unpaidChargeData = data().deepCopy(fields()[14].schema(), other.unpaidChargeData);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.transferStatus)) {
        this.transferStatus = data().deepCopy(fields()[15].schema(), other.transferStatus);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.transferStatusReason)) {
        this.transferStatusReason = data().deepCopy(fields()[16].schema(), other.transferStatusReason);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.settlementDate)) {
        this.settlementDate = data().deepCopy(fields()[17].schema(), other.settlementDate);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.purchasePriceRatio)) {
        this.purchasePriceRatio = data().deepCopy(fields()[18].schema(), other.purchasePriceRatio);
        fieldSetFlags()[18] = true;
      }
    }

    /**
      * Gets the value of the 'loanId' field.
      * @return The value.
      */
    public long getLoanId() {
      return loanId;
    }


    /**
      * Sets the value of the 'loanId' field.
      * @param value The value of 'loanId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder setLoanId(long value) {
      validate(fields()[0], value);
      this.loanId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'loanId' field has been set.
      * @return True if the 'loanId' field has been set, false otherwise.
      */
    public boolean hasLoanId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'loanId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder clearLoanId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'loanExternalId' field.
      * @return The value.
      */
    public java.lang.String getLoanExternalId() {
      return loanExternalId;
    }


    /**
      * Sets the value of the 'loanExternalId' field.
      * @param value The value of 'loanExternalId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder setLoanExternalId(java.lang.String value) {
      validate(fields()[1], value);
      this.loanExternalId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'loanExternalId' field has been set.
      * @return True if the 'loanExternalId' field has been set, false otherwise.
      */
    public boolean hasLoanExternalId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'loanExternalId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder clearLoanExternalId() {
      loanExternalId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.String getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder setType(java.lang.String value) {
      validate(fields()[2], value);
      this.type = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder clearType() {
      type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'transferExternalId' field.
      * @return The value.
      */
    public java.lang.String getTransferExternalId() {
      return transferExternalId;
    }


    /**
      * Sets the value of the 'transferExternalId' field.
      * @param value The value of 'transferExternalId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder setTransferExternalId(java.lang.String value) {
      validate(fields()[3], value);
      this.transferExternalId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'transferExternalId' field has been set.
      * @return True if the 'transferExternalId' field has been set, false otherwise.
      */
    public boolean hasTransferExternalId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'transferExternalId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder clearTransferExternalId() {
      transferExternalId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'submittedDate' field.
      * @return The value.
      */
    public java.lang.String getSubmittedDate() {
      return submittedDate;
    }


    /**
      * Sets the value of the 'submittedDate' field.
      * @param value The value of 'submittedDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder setSubmittedDate(java.lang.String value) {
      validate(fields()[4], value);
      this.submittedDate = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'submittedDate' field has been set.
      * @return True if the 'submittedDate' field has been set, false otherwise.
      */
    public boolean hasSubmittedDate() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'submittedDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder clearSubmittedDate() {
      submittedDate = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'assetOwnerExternalId' field.
      * @return The value.
      */
    public java.lang.String getAssetOwnerExternalId() {
      return assetOwnerExternalId;
    }


    /**
      * Sets the value of the 'assetOwnerExternalId' field.
      * @param value The value of 'assetOwnerExternalId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder setAssetOwnerExternalId(java.lang.String value) {
      validate(fields()[5], value);
      this.assetOwnerExternalId = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'assetOwnerExternalId' field has been set.
      * @return True if the 'assetOwnerExternalId' field has been set, false otherwise.
      */
    public boolean hasAssetOwnerExternalId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'assetOwnerExternalId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder clearAssetOwnerExternalId() {
      assetOwnerExternalId = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'currency' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.CurrencyDataV1 getCurrency() {
      return currency;
    }


    /**
      * Sets the value of the 'currency' field.
      * @param value The value of 'currency'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder setCurrency(org.apache.fineract.avro.generic.v1.CurrencyDataV1 value) {
      validate(fields()[6], value);
      this.currencyBuilder = null;
      this.currency = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'currency' field has been set.
      * @return True if the 'currency' field has been set, false otherwise.
      */
    public boolean hasCurrency() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'currency' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder getCurrencyBuilder() {
      if (currencyBuilder == null) {
        if (hasCurrency()) {
          setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder(currency));
        } else {
          setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder());
        }
      }
      return currencyBuilder;
    }

    /**
     * Sets the Builder instance for the 'currency' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder value) {
      clearCurrency();
      currencyBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'currency' field has an active Builder instance
     * @return True if the 'currency' field has an active Builder instance
     */
    public boolean hasCurrencyBuilder() {
      return currencyBuilder != null;
    }

    /**
      * Clears the value of the 'currency' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder clearCurrency() {
      currency = null;
      currencyBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalOutstandingBalanceAmount' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalOutstandingBalanceAmount() {
      return totalOutstandingBalanceAmount;
    }


    /**
      * Sets the value of the 'totalOutstandingBalanceAmount' field.
      * @param value The value of 'totalOutstandingBalanceAmount'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder setTotalOutstandingBalanceAmount(java.math.BigDecimal value) {
      validate(fields()[7], value);
      this.totalOutstandingBalanceAmount = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'totalOutstandingBalanceAmount' field has been set.
      * @return True if the 'totalOutstandingBalanceAmount' field has been set, false otherwise.
      */
    public boolean hasTotalOutstandingBalanceAmount() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'totalOutstandingBalanceAmount' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder clearTotalOutstandingBalanceAmount() {
      totalOutstandingBalanceAmount = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'outstandingPrincipalPortion' field.
      * @return The value.
      */
    public java.math.BigDecimal getOutstandingPrincipalPortion() {
      return outstandingPrincipalPortion;
    }


    /**
      * Sets the value of the 'outstandingPrincipalPortion' field.
      * @param value The value of 'outstandingPrincipalPortion'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder setOutstandingPrincipalPortion(java.math.BigDecimal value) {
      validate(fields()[8], value);
      this.outstandingPrincipalPortion = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'outstandingPrincipalPortion' field has been set.
      * @return True if the 'outstandingPrincipalPortion' field has been set, false otherwise.
      */
    public boolean hasOutstandingPrincipalPortion() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'outstandingPrincipalPortion' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder clearOutstandingPrincipalPortion() {
      outstandingPrincipalPortion = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'outstandingFeePortion' field.
      * @return The value.
      */
    public java.math.BigDecimal getOutstandingFeePortion() {
      return outstandingFeePortion;
    }


    /**
      * Sets the value of the 'outstandingFeePortion' field.
      * @param value The value of 'outstandingFeePortion'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder setOutstandingFeePortion(java.math.BigDecimal value) {
      validate(fields()[9], value);
      this.outstandingFeePortion = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'outstandingFeePortion' field has been set.
      * @return True if the 'outstandingFeePortion' field has been set, false otherwise.
      */
    public boolean hasOutstandingFeePortion() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'outstandingFeePortion' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder clearOutstandingFeePortion() {
      outstandingFeePortion = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'outstandingPenaltyPortion' field.
      * @return The value.
      */
    public java.math.BigDecimal getOutstandingPenaltyPortion() {
      return outstandingPenaltyPortion;
    }


    /**
      * Sets the value of the 'outstandingPenaltyPortion' field.
      * @param value The value of 'outstandingPenaltyPortion'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder setOutstandingPenaltyPortion(java.math.BigDecimal value) {
      validate(fields()[10], value);
      this.outstandingPenaltyPortion = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'outstandingPenaltyPortion' field has been set.
      * @return True if the 'outstandingPenaltyPortion' field has been set, false otherwise.
      */
    public boolean hasOutstandingPenaltyPortion() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'outstandingPenaltyPortion' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder clearOutstandingPenaltyPortion() {
      outstandingPenaltyPortion = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'outstandingInterestPortion' field.
      * @return The value.
      */
    public java.math.BigDecimal getOutstandingInterestPortion() {
      return outstandingInterestPortion;
    }


    /**
      * Sets the value of the 'outstandingInterestPortion' field.
      * @param value The value of 'outstandingInterestPortion'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder setOutstandingInterestPortion(java.math.BigDecimal value) {
      validate(fields()[11], value);
      this.outstandingInterestPortion = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'outstandingInterestPortion' field has been set.
      * @return True if the 'outstandingInterestPortion' field has been set, false otherwise.
      */
    public boolean hasOutstandingInterestPortion() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'outstandingInterestPortion' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder clearOutstandingInterestPortion() {
      outstandingInterestPortion = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'overPaymentPortion' field.
      * @return The value.
      */
    public java.math.BigDecimal getOverPaymentPortion() {
      return overPaymentPortion;
    }


    /**
      * Sets the value of the 'overPaymentPortion' field.
      * @param value The value of 'overPaymentPortion'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder setOverPaymentPortion(java.math.BigDecimal value) {
      validate(fields()[12], value);
      this.overPaymentPortion = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'overPaymentPortion' field has been set.
      * @return True if the 'overPaymentPortion' field has been set, false otherwise.
      */
    public boolean hasOverPaymentPortion() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'overPaymentPortion' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder clearOverPaymentPortion() {
      overPaymentPortion = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'unrecognizedIncomePortion' field.
      * @return The value.
      */
    public java.math.BigDecimal getUnrecognizedIncomePortion() {
      return unrecognizedIncomePortion;
    }


    /**
      * Sets the value of the 'unrecognizedIncomePortion' field.
      * @param value The value of 'unrecognizedIncomePortion'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder setUnrecognizedIncomePortion(java.math.BigDecimal value) {
      validate(fields()[13], value);
      this.unrecognizedIncomePortion = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'unrecognizedIncomePortion' field has been set.
      * @return True if the 'unrecognizedIncomePortion' field has been set, false otherwise.
      */
    public boolean hasUnrecognizedIncomePortion() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'unrecognizedIncomePortion' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder clearUnrecognizedIncomePortion() {
      unrecognizedIncomePortion = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'unpaidChargeData' field.
      * @return The value.
      */
    public java.util.List<org.apache.fineract.avro.loan.v1.UnpaidChargeDataV1> getUnpaidChargeData() {
      return unpaidChargeData;
    }


    /**
      * Sets the value of the 'unpaidChargeData' field.
      * @param value The value of 'unpaidChargeData'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder setUnpaidChargeData(java.util.List<org.apache.fineract.avro.loan.v1.UnpaidChargeDataV1> value) {
      validate(fields()[14], value);
      this.unpaidChargeData = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'unpaidChargeData' field has been set.
      * @return True if the 'unpaidChargeData' field has been set, false otherwise.
      */
    public boolean hasUnpaidChargeData() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'unpaidChargeData' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder clearUnpaidChargeData() {
      unpaidChargeData = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'transferStatus' field.
      * @return The value.
      */
    public java.lang.String getTransferStatus() {
      return transferStatus;
    }


    /**
      * Sets the value of the 'transferStatus' field.
      * @param value The value of 'transferStatus'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder setTransferStatus(java.lang.String value) {
      validate(fields()[15], value);
      this.transferStatus = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'transferStatus' field has been set.
      * @return True if the 'transferStatus' field has been set, false otherwise.
      */
    public boolean hasTransferStatus() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'transferStatus' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder clearTransferStatus() {
      transferStatus = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'transferStatusReason' field.
      * @return The value.
      */
    public java.lang.String getTransferStatusReason() {
      return transferStatusReason;
    }


    /**
      * Sets the value of the 'transferStatusReason' field.
      * @param value The value of 'transferStatusReason'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder setTransferStatusReason(java.lang.String value) {
      validate(fields()[16], value);
      this.transferStatusReason = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'transferStatusReason' field has been set.
      * @return True if the 'transferStatusReason' field has been set, false otherwise.
      */
    public boolean hasTransferStatusReason() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'transferStatusReason' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder clearTransferStatusReason() {
      transferStatusReason = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'settlementDate' field.
      * @return The value.
      */
    public java.lang.String getSettlementDate() {
      return settlementDate;
    }


    /**
      * Sets the value of the 'settlementDate' field.
      * @param value The value of 'settlementDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder setSettlementDate(java.lang.String value) {
      validate(fields()[17], value);
      this.settlementDate = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'settlementDate' field has been set.
      * @return True if the 'settlementDate' field has been set, false otherwise.
      */
    public boolean hasSettlementDate() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'settlementDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder clearSettlementDate() {
      settlementDate = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'purchasePriceRatio' field.
      * @return The value.
      */
    public java.lang.String getPurchasePriceRatio() {
      return purchasePriceRatio;
    }


    /**
      * Sets the value of the 'purchasePriceRatio' field.
      * @param value The value of 'purchasePriceRatio'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder setPurchasePriceRatio(java.lang.String value) {
      validate(fields()[18], value);
      this.purchasePriceRatio = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'purchasePriceRatio' field has been set.
      * @return True if the 'purchasePriceRatio' field has been set, false otherwise.
      */
    public boolean hasPurchasePriceRatio() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'purchasePriceRatio' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanOwnershipTransferDataV1.Builder clearPurchasePriceRatio() {
      purchasePriceRatio = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public LoanOwnershipTransferDataV1 build() {
      try {
        LoanOwnershipTransferDataV1 record = new LoanOwnershipTransferDataV1();
        record.loanId = fieldSetFlags()[0] ? this.loanId : (java.lang.Long) defaultValue(fields()[0]);
        record.loanExternalId = fieldSetFlags()[1] ? this.loanExternalId : (java.lang.String) defaultValue(fields()[1]);
        record.type = fieldSetFlags()[2] ? this.type : (java.lang.String) defaultValue(fields()[2]);
        record.transferExternalId = fieldSetFlags()[3] ? this.transferExternalId : (java.lang.String) defaultValue(fields()[3]);
        record.submittedDate = fieldSetFlags()[4] ? this.submittedDate : (java.lang.String) defaultValue(fields()[4]);
        record.assetOwnerExternalId = fieldSetFlags()[5] ? this.assetOwnerExternalId : (java.lang.String) defaultValue(fields()[5]);
        if (currencyBuilder != null) {
          try {
            record.currency = this.currencyBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("currency"));
            throw e;
          }
        } else {
          record.currency = fieldSetFlags()[6] ? this.currency : (org.apache.fineract.avro.generic.v1.CurrencyDataV1) defaultValue(fields()[6]);
        }
        record.totalOutstandingBalanceAmount = fieldSetFlags()[7] ? this.totalOutstandingBalanceAmount : (java.math.BigDecimal) defaultValue(fields()[7]);
        record.outstandingPrincipalPortion = fieldSetFlags()[8] ? this.outstandingPrincipalPortion : (java.math.BigDecimal) defaultValue(fields()[8]);
        record.outstandingFeePortion = fieldSetFlags()[9] ? this.outstandingFeePortion : (java.math.BigDecimal) defaultValue(fields()[9]);
        record.outstandingPenaltyPortion = fieldSetFlags()[10] ? this.outstandingPenaltyPortion : (java.math.BigDecimal) defaultValue(fields()[10]);
        record.outstandingInterestPortion = fieldSetFlags()[11] ? this.outstandingInterestPortion : (java.math.BigDecimal) defaultValue(fields()[11]);
        record.overPaymentPortion = fieldSetFlags()[12] ? this.overPaymentPortion : (java.math.BigDecimal) defaultValue(fields()[12]);
        record.unrecognizedIncomePortion = fieldSetFlags()[13] ? this.unrecognizedIncomePortion : (java.math.BigDecimal) defaultValue(fields()[13]);
        record.unpaidChargeData = fieldSetFlags()[14] ? this.unpaidChargeData : (java.util.List<org.apache.fineract.avro.loan.v1.UnpaidChargeDataV1>) defaultValue(fields()[14]);
        record.transferStatus = fieldSetFlags()[15] ? this.transferStatus : (java.lang.String) defaultValue(fields()[15]);
        record.transferStatusReason = fieldSetFlags()[16] ? this.transferStatusReason : (java.lang.String) defaultValue(fields()[16]);
        record.settlementDate = fieldSetFlags()[17] ? this.settlementDate : (java.lang.String) defaultValue(fields()[17]);
        record.purchasePriceRatio = fieldSetFlags()[18] ? this.purchasePriceRatio : (java.lang.String) defaultValue(fields()[18]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<LoanOwnershipTransferDataV1>
    WRITER$ = (org.apache.avro.io.DatumWriter<LoanOwnershipTransferDataV1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<LoanOwnershipTransferDataV1>
    READER$ = (org.apache.avro.io.DatumReader<LoanOwnershipTransferDataV1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










