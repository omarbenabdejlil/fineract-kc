/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

package org.apache.fineract.avro.savings.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AccountTransferDataV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, org.apache.fineract.avro.generator.ByteBufferSerializable {
  private static final long serialVersionUID = 1053113416264886235L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AccountTransferDataV1\",\"namespace\":\"org.apache.fineract.avro.savings.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"reversed\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"currency\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CurrencyDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"decimalPlaces\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"inMultiplesOf\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"displaySymbol\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nameCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"displayLabel\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"transferAmount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"transferDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"transferDescription\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fromOffice\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"OfficeDataV1\",\"namespace\":\"org.apache.fineract.avro.office.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nameDecorated\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"openingDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"hierarchy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"parentId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"parentName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"allowedParents\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"OfficeDataV1\"}],\"default\":null}]}],\"default\":null},{\"name\":\"fromClient\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ClientDataV1\",\"namespace\":\"org.apache.fineract.avro.client.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"accountNo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"EnumOptionDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"subStatus\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CodeValueDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"position\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"active\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"mandatory\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"active\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"activationDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"firstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"middlename\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fullname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"displayName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"mobileNo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"emailAddress\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"dateOfBirth\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"gender\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.CodeValueDataV1\"],\"default\":null},{\"name\":\"clientType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.CodeValueDataV1\"],\"default\":null},{\"name\":\"clientClassification\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.CodeValueDataV1\"],\"default\":null},{\"name\":\"isStaff\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"officeId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"officeName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"transferToOfficeId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"transferToOfficeName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"imageId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"imagePresent\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"staffId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"staffName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"timeline\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ClientTimelineDataV1\",\"fields\":[{\"name\":\"submittedOnDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"submittedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"submittedByFirstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"submittedByLastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activatedOnDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activatedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activatedByFirstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activatedByLastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closedOnDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closedByFirstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closedByLastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"savingsProductId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"savingsProductName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"savingsAccountId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"legalForm\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"clientCollateralManagements\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ClientCollateralManagementDataV1\",\"fields\":[{\"name\":\"quantity\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"pctToBase\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"unitPrice\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"total\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalCollateral\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"defa","ult\":null},{\"name\":\"groups\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GroupGeneralDataV1\",\"namespace\":\"org.apache.fineract.avro.group.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"accountNo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"active\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"activationDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"officeId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"officeName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"centerId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"centerName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"staffId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"staffName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"hierarchy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"groupLevel\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"groupRoles\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GroupRoleDataV1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"role\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.CodeValueDataV1\"],\"default\":null},{\"name\":\"clientId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"clientName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"calendarsData\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"CalendarDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"calendarInstanceId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"entityId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"entityType\",\"type\":[\"null\",\"EnumOptionDataV1\"],\"default\":null},{\"name\":\"title\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"location\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"startDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"endDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"meetingTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"duration\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"EnumOptionDataV1\"],\"default\":null},{\"name\":\"repeating\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"recurrence\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"frequency\",\"type\":[\"null\",\"EnumOptionDataV1\"],\"default\":null},{\"name\":\"interval\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"repeatsOnDay\",\"type\":[\"null\",\"EnumOptionDataV1\"],\"default\":null},{\"name\":\"repeatsOnNthDayOfMonth\",\"type\":[\"null\",\"EnumOptionDataV1\"],\"default\":null},{\"name\":\"remindBy\",\"type\":[\"null\",\"EnumOptionDataV1\"],\"default\":null},{\"name\":\"firstReminder\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"secondReminder\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"recurringDates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"nextTenRecurringDates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"humanReadable\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"recentEligibleMeetingDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"createdDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lastUpdatedDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"createdByUserId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"createdByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lastUpdatedByUserId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"lastUpdatedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"repeatsOnDayOfMonth\",\"type\":[\"null\",\"int\"],\"default\":null}]}}],\"default\":null},{\"name\":\"collectionMeetingCalendar\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.CalendarDataV1\"],\"default\":null}]}}],\"default\":null}]}],\"default\":null},{\"name\":\"fromAccountType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"fromAccount\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PortfolioAccountDataV1\",\"namespace\":\"org.apache.fineract.avro.portfolio.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"accountNo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"groupId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"groupName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"clientId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"clientName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"productId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"productName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fieldOfficerId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"fieldOfficerName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"currency\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.CurrencyDataV1\"],\"default\":null},{\"name\":\"amtForTransfer\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null}]}],\"default\":null},{\"name\":\"toOffice\",\"type\":[\"null\",\"org.apache.fineract.avro.office.v1.OfficeDataV1\"],\"default\":null},{\"name\":\"toClient\",\"type\":[\"null\",\"org.apache.fineract.avro.client.v1.ClientDataV1\"],\"default\":null},{\"name\":\"toAccountType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"toAccount\",\"type\":[\"null\",\"org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<AccountTransferDataV1> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AccountTransferDataV1> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AccountTransferDataV1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AccountTransferDataV1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AccountTransferDataV1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AccountTransferDataV1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  @Override
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AccountTransferDataV1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AccountTransferDataV1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AccountTransferDataV1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.Integer id;
  private java.lang.Boolean reversed;
  private org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency;
  private java.math.BigDecimal transferAmount;
  private java.lang.String transferDate;
  private java.lang.String transferDescription;
  private org.apache.fineract.avro.office.v1.OfficeDataV1 fromOffice;
  private org.apache.fineract.avro.client.v1.ClientDataV1 fromClient;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 fromAccountType;
  private org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1 fromAccount;
  private org.apache.fineract.avro.office.v1.OfficeDataV1 toOffice;
  private org.apache.fineract.avro.client.v1.ClientDataV1 toClient;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 toAccountType;
  private org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1 toAccount;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AccountTransferDataV1() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param reversed The new value for reversed
   * @param currency The new value for currency
   * @param transferAmount The new value for transferAmount
   * @param transferDate The new value for transferDate
   * @param transferDescription The new value for transferDescription
   * @param fromOffice The new value for fromOffice
   * @param fromClient The new value for fromClient
   * @param fromAccountType The new value for fromAccountType
   * @param fromAccount The new value for fromAccount
   * @param toOffice The new value for toOffice
   * @param toClient The new value for toClient
   * @param toAccountType The new value for toAccountType
   * @param toAccount The new value for toAccount
   */
  public AccountTransferDataV1(java.lang.Integer id, java.lang.Boolean reversed, org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency, java.math.BigDecimal transferAmount, java.lang.String transferDate, java.lang.String transferDescription, org.apache.fineract.avro.office.v1.OfficeDataV1 fromOffice, org.apache.fineract.avro.client.v1.ClientDataV1 fromClient, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 fromAccountType, org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1 fromAccount, org.apache.fineract.avro.office.v1.OfficeDataV1 toOffice, org.apache.fineract.avro.client.v1.ClientDataV1 toClient, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 toAccountType, org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1 toAccount) {
    this.id = id;
    this.reversed = reversed;
    this.currency = currency;
    this.transferAmount = transferAmount;
    this.transferDate = transferDate;
    this.transferDescription = transferDescription;
    this.fromOffice = fromOffice;
    this.fromClient = fromClient;
    this.fromAccountType = fromAccountType;
    this.fromAccount = fromAccount;
    this.toOffice = toOffice;
    this.toClient = toClient;
    this.toAccountType = toAccountType;
    this.toAccount = toAccount;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return reversed;
    case 2: return currency;
    case 3: return transferAmount;
    case 4: return transferDate;
    case 5: return transferDescription;
    case 6: return fromOffice;
    case 7: return fromClient;
    case 8: return fromAccountType;
    case 9: return fromAccount;
    case 10: return toOffice;
    case 11: return toClient;
    case 12: return toAccountType;
    case 13: return toAccount;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Integer)value$; break;
    case 1: reversed = (java.lang.Boolean)value$; break;
    case 2: currency = (org.apache.fineract.avro.generic.v1.CurrencyDataV1)value$; break;
    case 3: transferAmount = (java.math.BigDecimal)value$; break;
    case 4: transferDate = value$ != null ? value$.toString() : null; break;
    case 5: transferDescription = value$ != null ? value$.toString() : null; break;
    case 6: fromOffice = (org.apache.fineract.avro.office.v1.OfficeDataV1)value$; break;
    case 7: fromClient = (org.apache.fineract.avro.client.v1.ClientDataV1)value$; break;
    case 8: fromAccountType = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 9: fromAccount = (org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1)value$; break;
    case 10: toOffice = (org.apache.fineract.avro.office.v1.OfficeDataV1)value$; break;
    case 11: toClient = (org.apache.fineract.avro.client.v1.ClientDataV1)value$; break;
    case 12: toAccountType = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 13: toAccount = (org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Integer getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Integer value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'reversed' field.
   * @return The value of the 'reversed' field.
   */
  public java.lang.Boolean getReversed() {
    return reversed;
  }


  /**
   * Sets the value of the 'reversed' field.
   * @param value the value to set.
   */
  public void setReversed(java.lang.Boolean value) {
    this.reversed = value;
  }

  /**
   * Gets the value of the 'currency' field.
   * @return The value of the 'currency' field.
   */
  public org.apache.fineract.avro.generic.v1.CurrencyDataV1 getCurrency() {
    return currency;
  }


  /**
   * Sets the value of the 'currency' field.
   * @param value the value to set.
   */
  public void setCurrency(org.apache.fineract.avro.generic.v1.CurrencyDataV1 value) {
    this.currency = value;
  }

  /**
   * Gets the value of the 'transferAmount' field.
   * @return The value of the 'transferAmount' field.
   */
  public java.math.BigDecimal getTransferAmount() {
    return transferAmount;
  }


  /**
   * Sets the value of the 'transferAmount' field.
   * @param value the value to set.
   */
  public void setTransferAmount(java.math.BigDecimal value) {
    this.transferAmount = value;
  }

  /**
   * Gets the value of the 'transferDate' field.
   * @return The value of the 'transferDate' field.
   */
  public java.lang.String getTransferDate() {
    return transferDate;
  }


  /**
   * Sets the value of the 'transferDate' field.
   * @param value the value to set.
   */
  public void setTransferDate(java.lang.String value) {
    this.transferDate = value;
  }

  /**
   * Gets the value of the 'transferDescription' field.
   * @return The value of the 'transferDescription' field.
   */
  public java.lang.String getTransferDescription() {
    return transferDescription;
  }


  /**
   * Sets the value of the 'transferDescription' field.
   * @param value the value to set.
   */
  public void setTransferDescription(java.lang.String value) {
    this.transferDescription = value;
  }

  /**
   * Gets the value of the 'fromOffice' field.
   * @return The value of the 'fromOffice' field.
   */
  public org.apache.fineract.avro.office.v1.OfficeDataV1 getFromOffice() {
    return fromOffice;
  }


  /**
   * Sets the value of the 'fromOffice' field.
   * @param value the value to set.
   */
  public void setFromOffice(org.apache.fineract.avro.office.v1.OfficeDataV1 value) {
    this.fromOffice = value;
  }

  /**
   * Gets the value of the 'fromClient' field.
   * @return The value of the 'fromClient' field.
   */
  public org.apache.fineract.avro.client.v1.ClientDataV1 getFromClient() {
    return fromClient;
  }


  /**
   * Sets the value of the 'fromClient' field.
   * @param value the value to set.
   */
  public void setFromClient(org.apache.fineract.avro.client.v1.ClientDataV1 value) {
    this.fromClient = value;
  }

  /**
   * Gets the value of the 'fromAccountType' field.
   * @return The value of the 'fromAccountType' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getFromAccountType() {
    return fromAccountType;
  }


  /**
   * Sets the value of the 'fromAccountType' field.
   * @param value the value to set.
   */
  public void setFromAccountType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.fromAccountType = value;
  }

  /**
   * Gets the value of the 'fromAccount' field.
   * @return The value of the 'fromAccount' field.
   */
  public org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1 getFromAccount() {
    return fromAccount;
  }


  /**
   * Sets the value of the 'fromAccount' field.
   * @param value the value to set.
   */
  public void setFromAccount(org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1 value) {
    this.fromAccount = value;
  }

  /**
   * Gets the value of the 'toOffice' field.
   * @return The value of the 'toOffice' field.
   */
  public org.apache.fineract.avro.office.v1.OfficeDataV1 getToOffice() {
    return toOffice;
  }


  /**
   * Sets the value of the 'toOffice' field.
   * @param value the value to set.
   */
  public void setToOffice(org.apache.fineract.avro.office.v1.OfficeDataV1 value) {
    this.toOffice = value;
  }

  /**
   * Gets the value of the 'toClient' field.
   * @return The value of the 'toClient' field.
   */
  public org.apache.fineract.avro.client.v1.ClientDataV1 getToClient() {
    return toClient;
  }


  /**
   * Sets the value of the 'toClient' field.
   * @param value the value to set.
   */
  public void setToClient(org.apache.fineract.avro.client.v1.ClientDataV1 value) {
    this.toClient = value;
  }

  /**
   * Gets the value of the 'toAccountType' field.
   * @return The value of the 'toAccountType' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getToAccountType() {
    return toAccountType;
  }


  /**
   * Sets the value of the 'toAccountType' field.
   * @param value the value to set.
   */
  public void setToAccountType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.toAccountType = value;
  }

  /**
   * Gets the value of the 'toAccount' field.
   * @return The value of the 'toAccount' field.
   */
  public org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1 getToAccount() {
    return toAccount;
  }


  /**
   * Sets the value of the 'toAccount' field.
   * @param value the value to set.
   */
  public void setToAccount(org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1 value) {
    this.toAccount = value;
  }

  /**
   * Creates a new AccountTransferDataV1 RecordBuilder.
   * @return A new AccountTransferDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder newBuilder() {
    return new org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder();
  }

  /**
   * Creates a new AccountTransferDataV1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AccountTransferDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder newBuilder(org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder other) {
    if (other == null) {
      return new org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder(other);
    }
  }

  /**
   * Creates a new AccountTransferDataV1 RecordBuilder by copying an existing AccountTransferDataV1 instance.
   * @param other The existing instance to copy.
   * @return A new AccountTransferDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder newBuilder(org.apache.fineract.avro.savings.v1.AccountTransferDataV1 other) {
    if (other == null) {
      return new org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder(other);
    }
  }

  /**
   * RecordBuilder for AccountTransferDataV1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AccountTransferDataV1>
    implements org.apache.avro.data.RecordBuilder<AccountTransferDataV1> {

    private java.lang.Integer id;
    private java.lang.Boolean reversed;
    private org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency;
    private org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder currencyBuilder;
    private java.math.BigDecimal transferAmount;
    private java.lang.String transferDate;
    private java.lang.String transferDescription;
    private org.apache.fineract.avro.office.v1.OfficeDataV1 fromOffice;
    private org.apache.fineract.avro.office.v1.OfficeDataV1.Builder fromOfficeBuilder;
    private org.apache.fineract.avro.client.v1.ClientDataV1 fromClient;
    private org.apache.fineract.avro.client.v1.ClientDataV1.Builder fromClientBuilder;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 fromAccountType;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder fromAccountTypeBuilder;
    private org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1 fromAccount;
    private org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1.Builder fromAccountBuilder;
    private org.apache.fineract.avro.office.v1.OfficeDataV1 toOffice;
    private org.apache.fineract.avro.office.v1.OfficeDataV1.Builder toOfficeBuilder;
    private org.apache.fineract.avro.client.v1.ClientDataV1 toClient;
    private org.apache.fineract.avro.client.v1.ClientDataV1.Builder toClientBuilder;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 toAccountType;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder toAccountTypeBuilder;
    private org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1 toAccount;
    private org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1.Builder toAccountBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.reversed)) {
        this.reversed = data().deepCopy(fields()[1].schema(), other.reversed);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.currency)) {
        this.currency = data().deepCopy(fields()[2].schema(), other.currency);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasCurrencyBuilder()) {
        this.currencyBuilder = org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder(other.getCurrencyBuilder());
      }
      if (isValidValue(fields()[3], other.transferAmount)) {
        this.transferAmount = data().deepCopy(fields()[3].schema(), other.transferAmount);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.transferDate)) {
        this.transferDate = data().deepCopy(fields()[4].schema(), other.transferDate);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.transferDescription)) {
        this.transferDescription = data().deepCopy(fields()[5].schema(), other.transferDescription);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.fromOffice)) {
        this.fromOffice = data().deepCopy(fields()[6].schema(), other.fromOffice);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (other.hasFromOfficeBuilder()) {
        this.fromOfficeBuilder = org.apache.fineract.avro.office.v1.OfficeDataV1.newBuilder(other.getFromOfficeBuilder());
      }
      if (isValidValue(fields()[7], other.fromClient)) {
        this.fromClient = data().deepCopy(fields()[7].schema(), other.fromClient);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (other.hasFromClientBuilder()) {
        this.fromClientBuilder = org.apache.fineract.avro.client.v1.ClientDataV1.newBuilder(other.getFromClientBuilder());
      }
      if (isValidValue(fields()[8], other.fromAccountType)) {
        this.fromAccountType = data().deepCopy(fields()[8].schema(), other.fromAccountType);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (other.hasFromAccountTypeBuilder()) {
        this.fromAccountTypeBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getFromAccountTypeBuilder());
      }
      if (isValidValue(fields()[9], other.fromAccount)) {
        this.fromAccount = data().deepCopy(fields()[9].schema(), other.fromAccount);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (other.hasFromAccountBuilder()) {
        this.fromAccountBuilder = org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1.newBuilder(other.getFromAccountBuilder());
      }
      if (isValidValue(fields()[10], other.toOffice)) {
        this.toOffice = data().deepCopy(fields()[10].schema(), other.toOffice);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (other.hasToOfficeBuilder()) {
        this.toOfficeBuilder = org.apache.fineract.avro.office.v1.OfficeDataV1.newBuilder(other.getToOfficeBuilder());
      }
      if (isValidValue(fields()[11], other.toClient)) {
        this.toClient = data().deepCopy(fields()[11].schema(), other.toClient);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (other.hasToClientBuilder()) {
        this.toClientBuilder = org.apache.fineract.avro.client.v1.ClientDataV1.newBuilder(other.getToClientBuilder());
      }
      if (isValidValue(fields()[12], other.toAccountType)) {
        this.toAccountType = data().deepCopy(fields()[12].schema(), other.toAccountType);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (other.hasToAccountTypeBuilder()) {
        this.toAccountTypeBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getToAccountTypeBuilder());
      }
      if (isValidValue(fields()[13], other.toAccount)) {
        this.toAccount = data().deepCopy(fields()[13].schema(), other.toAccount);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (other.hasToAccountBuilder()) {
        this.toAccountBuilder = org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1.newBuilder(other.getToAccountBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing AccountTransferDataV1 instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.fineract.avro.savings.v1.AccountTransferDataV1 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.reversed)) {
        this.reversed = data().deepCopy(fields()[1].schema(), other.reversed);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.currency)) {
        this.currency = data().deepCopy(fields()[2].schema(), other.currency);
        fieldSetFlags()[2] = true;
      }
      this.currencyBuilder = null;
      if (isValidValue(fields()[3], other.transferAmount)) {
        this.transferAmount = data().deepCopy(fields()[3].schema(), other.transferAmount);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.transferDate)) {
        this.transferDate = data().deepCopy(fields()[4].schema(), other.transferDate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.transferDescription)) {
        this.transferDescription = data().deepCopy(fields()[5].schema(), other.transferDescription);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.fromOffice)) {
        this.fromOffice = data().deepCopy(fields()[6].schema(), other.fromOffice);
        fieldSetFlags()[6] = true;
      }
      this.fromOfficeBuilder = null;
      if (isValidValue(fields()[7], other.fromClient)) {
        this.fromClient = data().deepCopy(fields()[7].schema(), other.fromClient);
        fieldSetFlags()[7] = true;
      }
      this.fromClientBuilder = null;
      if (isValidValue(fields()[8], other.fromAccountType)) {
        this.fromAccountType = data().deepCopy(fields()[8].schema(), other.fromAccountType);
        fieldSetFlags()[8] = true;
      }
      this.fromAccountTypeBuilder = null;
      if (isValidValue(fields()[9], other.fromAccount)) {
        this.fromAccount = data().deepCopy(fields()[9].schema(), other.fromAccount);
        fieldSetFlags()[9] = true;
      }
      this.fromAccountBuilder = null;
      if (isValidValue(fields()[10], other.toOffice)) {
        this.toOffice = data().deepCopy(fields()[10].schema(), other.toOffice);
        fieldSetFlags()[10] = true;
      }
      this.toOfficeBuilder = null;
      if (isValidValue(fields()[11], other.toClient)) {
        this.toClient = data().deepCopy(fields()[11].schema(), other.toClient);
        fieldSetFlags()[11] = true;
      }
      this.toClientBuilder = null;
      if (isValidValue(fields()[12], other.toAccountType)) {
        this.toAccountType = data().deepCopy(fields()[12].schema(), other.toAccountType);
        fieldSetFlags()[12] = true;
      }
      this.toAccountTypeBuilder = null;
      if (isValidValue(fields()[13], other.toAccount)) {
        this.toAccount = data().deepCopy(fields()[13].schema(), other.toAccount);
        fieldSetFlags()[13] = true;
      }
      this.toAccountBuilder = null;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Integer getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder setId(java.lang.Integer value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'reversed' field.
      * @return The value.
      */
    public java.lang.Boolean getReversed() {
      return reversed;
    }


    /**
      * Sets the value of the 'reversed' field.
      * @param value The value of 'reversed'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder setReversed(java.lang.Boolean value) {
      validate(fields()[1], value);
      this.reversed = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'reversed' field has been set.
      * @return True if the 'reversed' field has been set, false otherwise.
      */
    public boolean hasReversed() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'reversed' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder clearReversed() {
      reversed = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'currency' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.CurrencyDataV1 getCurrency() {
      return currency;
    }


    /**
      * Sets the value of the 'currency' field.
      * @param value The value of 'currency'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder setCurrency(org.apache.fineract.avro.generic.v1.CurrencyDataV1 value) {
      validate(fields()[2], value);
      this.currencyBuilder = null;
      this.currency = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'currency' field has been set.
      * @return True if the 'currency' field has been set, false otherwise.
      */
    public boolean hasCurrency() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'currency' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder getCurrencyBuilder() {
      if (currencyBuilder == null) {
        if (hasCurrency()) {
          setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder(currency));
        } else {
          setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder());
        }
      }
      return currencyBuilder;
    }

    /**
     * Sets the Builder instance for the 'currency' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder value) {
      clearCurrency();
      currencyBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'currency' field has an active Builder instance
     * @return True if the 'currency' field has an active Builder instance
     */
    public boolean hasCurrencyBuilder() {
      return currencyBuilder != null;
    }

    /**
      * Clears the value of the 'currency' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder clearCurrency() {
      currency = null;
      currencyBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'transferAmount' field.
      * @return The value.
      */
    public java.math.BigDecimal getTransferAmount() {
      return transferAmount;
    }


    /**
      * Sets the value of the 'transferAmount' field.
      * @param value The value of 'transferAmount'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder setTransferAmount(java.math.BigDecimal value) {
      validate(fields()[3], value);
      this.transferAmount = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'transferAmount' field has been set.
      * @return True if the 'transferAmount' field has been set, false otherwise.
      */
    public boolean hasTransferAmount() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'transferAmount' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder clearTransferAmount() {
      transferAmount = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'transferDate' field.
      * @return The value.
      */
    public java.lang.String getTransferDate() {
      return transferDate;
    }


    /**
      * Sets the value of the 'transferDate' field.
      * @param value The value of 'transferDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder setTransferDate(java.lang.String value) {
      validate(fields()[4], value);
      this.transferDate = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'transferDate' field has been set.
      * @return True if the 'transferDate' field has been set, false otherwise.
      */
    public boolean hasTransferDate() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'transferDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder clearTransferDate() {
      transferDate = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'transferDescription' field.
      * @return The value.
      */
    public java.lang.String getTransferDescription() {
      return transferDescription;
    }


    /**
      * Sets the value of the 'transferDescription' field.
      * @param value The value of 'transferDescription'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder setTransferDescription(java.lang.String value) {
      validate(fields()[5], value);
      this.transferDescription = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'transferDescription' field has been set.
      * @return True if the 'transferDescription' field has been set, false otherwise.
      */
    public boolean hasTransferDescription() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'transferDescription' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder clearTransferDescription() {
      transferDescription = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'fromOffice' field.
      * @return The value.
      */
    public org.apache.fineract.avro.office.v1.OfficeDataV1 getFromOffice() {
      return fromOffice;
    }


    /**
      * Sets the value of the 'fromOffice' field.
      * @param value The value of 'fromOffice'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder setFromOffice(org.apache.fineract.avro.office.v1.OfficeDataV1 value) {
      validate(fields()[6], value);
      this.fromOfficeBuilder = null;
      this.fromOffice = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'fromOffice' field has been set.
      * @return True if the 'fromOffice' field has been set, false otherwise.
      */
    public boolean hasFromOffice() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'fromOffice' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.office.v1.OfficeDataV1.Builder getFromOfficeBuilder() {
      if (fromOfficeBuilder == null) {
        if (hasFromOffice()) {
          setFromOfficeBuilder(org.apache.fineract.avro.office.v1.OfficeDataV1.newBuilder(fromOffice));
        } else {
          setFromOfficeBuilder(org.apache.fineract.avro.office.v1.OfficeDataV1.newBuilder());
        }
      }
      return fromOfficeBuilder;
    }

    /**
     * Sets the Builder instance for the 'fromOffice' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder setFromOfficeBuilder(org.apache.fineract.avro.office.v1.OfficeDataV1.Builder value) {
      clearFromOffice();
      fromOfficeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'fromOffice' field has an active Builder instance
     * @return True if the 'fromOffice' field has an active Builder instance
     */
    public boolean hasFromOfficeBuilder() {
      return fromOfficeBuilder != null;
    }

    /**
      * Clears the value of the 'fromOffice' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder clearFromOffice() {
      fromOffice = null;
      fromOfficeBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'fromClient' field.
      * @return The value.
      */
    public org.apache.fineract.avro.client.v1.ClientDataV1 getFromClient() {
      return fromClient;
    }


    /**
      * Sets the value of the 'fromClient' field.
      * @param value The value of 'fromClient'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder setFromClient(org.apache.fineract.avro.client.v1.ClientDataV1 value) {
      validate(fields()[7], value);
      this.fromClientBuilder = null;
      this.fromClient = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'fromClient' field has been set.
      * @return True if the 'fromClient' field has been set, false otherwise.
      */
    public boolean hasFromClient() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'fromClient' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.client.v1.ClientDataV1.Builder getFromClientBuilder() {
      if (fromClientBuilder == null) {
        if (hasFromClient()) {
          setFromClientBuilder(org.apache.fineract.avro.client.v1.ClientDataV1.newBuilder(fromClient));
        } else {
          setFromClientBuilder(org.apache.fineract.avro.client.v1.ClientDataV1.newBuilder());
        }
      }
      return fromClientBuilder;
    }

    /**
     * Sets the Builder instance for the 'fromClient' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder setFromClientBuilder(org.apache.fineract.avro.client.v1.ClientDataV1.Builder value) {
      clearFromClient();
      fromClientBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'fromClient' field has an active Builder instance
     * @return True if the 'fromClient' field has an active Builder instance
     */
    public boolean hasFromClientBuilder() {
      return fromClientBuilder != null;
    }

    /**
      * Clears the value of the 'fromClient' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder clearFromClient() {
      fromClient = null;
      fromClientBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'fromAccountType' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getFromAccountType() {
      return fromAccountType;
    }


    /**
      * Sets the value of the 'fromAccountType' field.
      * @param value The value of 'fromAccountType'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder setFromAccountType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[8], value);
      this.fromAccountTypeBuilder = null;
      this.fromAccountType = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'fromAccountType' field has been set.
      * @return True if the 'fromAccountType' field has been set, false otherwise.
      */
    public boolean hasFromAccountType() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'fromAccountType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getFromAccountTypeBuilder() {
      if (fromAccountTypeBuilder == null) {
        if (hasFromAccountType()) {
          setFromAccountTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(fromAccountType));
        } else {
          setFromAccountTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return fromAccountTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'fromAccountType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder setFromAccountTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearFromAccountType();
      fromAccountTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'fromAccountType' field has an active Builder instance
     * @return True if the 'fromAccountType' field has an active Builder instance
     */
    public boolean hasFromAccountTypeBuilder() {
      return fromAccountTypeBuilder != null;
    }

    /**
      * Clears the value of the 'fromAccountType' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder clearFromAccountType() {
      fromAccountType = null;
      fromAccountTypeBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'fromAccount' field.
      * @return The value.
      */
    public org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1 getFromAccount() {
      return fromAccount;
    }


    /**
      * Sets the value of the 'fromAccount' field.
      * @param value The value of 'fromAccount'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder setFromAccount(org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1 value) {
      validate(fields()[9], value);
      this.fromAccountBuilder = null;
      this.fromAccount = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'fromAccount' field has been set.
      * @return True if the 'fromAccount' field has been set, false otherwise.
      */
    public boolean hasFromAccount() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'fromAccount' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1.Builder getFromAccountBuilder() {
      if (fromAccountBuilder == null) {
        if (hasFromAccount()) {
          setFromAccountBuilder(org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1.newBuilder(fromAccount));
        } else {
          setFromAccountBuilder(org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1.newBuilder());
        }
      }
      return fromAccountBuilder;
    }

    /**
     * Sets the Builder instance for the 'fromAccount' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder setFromAccountBuilder(org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1.Builder value) {
      clearFromAccount();
      fromAccountBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'fromAccount' field has an active Builder instance
     * @return True if the 'fromAccount' field has an active Builder instance
     */
    public boolean hasFromAccountBuilder() {
      return fromAccountBuilder != null;
    }

    /**
      * Clears the value of the 'fromAccount' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder clearFromAccount() {
      fromAccount = null;
      fromAccountBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'toOffice' field.
      * @return The value.
      */
    public org.apache.fineract.avro.office.v1.OfficeDataV1 getToOffice() {
      return toOffice;
    }


    /**
      * Sets the value of the 'toOffice' field.
      * @param value The value of 'toOffice'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder setToOffice(org.apache.fineract.avro.office.v1.OfficeDataV1 value) {
      validate(fields()[10], value);
      this.toOfficeBuilder = null;
      this.toOffice = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'toOffice' field has been set.
      * @return True if the 'toOffice' field has been set, false otherwise.
      */
    public boolean hasToOffice() {
      return fieldSetFlags()[10];
    }

    /**
     * Gets the Builder instance for the 'toOffice' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.office.v1.OfficeDataV1.Builder getToOfficeBuilder() {
      if (toOfficeBuilder == null) {
        if (hasToOffice()) {
          setToOfficeBuilder(org.apache.fineract.avro.office.v1.OfficeDataV1.newBuilder(toOffice));
        } else {
          setToOfficeBuilder(org.apache.fineract.avro.office.v1.OfficeDataV1.newBuilder());
        }
      }
      return toOfficeBuilder;
    }

    /**
     * Sets the Builder instance for the 'toOffice' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder setToOfficeBuilder(org.apache.fineract.avro.office.v1.OfficeDataV1.Builder value) {
      clearToOffice();
      toOfficeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'toOffice' field has an active Builder instance
     * @return True if the 'toOffice' field has an active Builder instance
     */
    public boolean hasToOfficeBuilder() {
      return toOfficeBuilder != null;
    }

    /**
      * Clears the value of the 'toOffice' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder clearToOffice() {
      toOffice = null;
      toOfficeBuilder = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'toClient' field.
      * @return The value.
      */
    public org.apache.fineract.avro.client.v1.ClientDataV1 getToClient() {
      return toClient;
    }


    /**
      * Sets the value of the 'toClient' field.
      * @param value The value of 'toClient'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder setToClient(org.apache.fineract.avro.client.v1.ClientDataV1 value) {
      validate(fields()[11], value);
      this.toClientBuilder = null;
      this.toClient = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'toClient' field has been set.
      * @return True if the 'toClient' field has been set, false otherwise.
      */
    public boolean hasToClient() {
      return fieldSetFlags()[11];
    }

    /**
     * Gets the Builder instance for the 'toClient' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.client.v1.ClientDataV1.Builder getToClientBuilder() {
      if (toClientBuilder == null) {
        if (hasToClient()) {
          setToClientBuilder(org.apache.fineract.avro.client.v1.ClientDataV1.newBuilder(toClient));
        } else {
          setToClientBuilder(org.apache.fineract.avro.client.v1.ClientDataV1.newBuilder());
        }
      }
      return toClientBuilder;
    }

    /**
     * Sets the Builder instance for the 'toClient' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder setToClientBuilder(org.apache.fineract.avro.client.v1.ClientDataV1.Builder value) {
      clearToClient();
      toClientBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'toClient' field has an active Builder instance
     * @return True if the 'toClient' field has an active Builder instance
     */
    public boolean hasToClientBuilder() {
      return toClientBuilder != null;
    }

    /**
      * Clears the value of the 'toClient' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder clearToClient() {
      toClient = null;
      toClientBuilder = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'toAccountType' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getToAccountType() {
      return toAccountType;
    }


    /**
      * Sets the value of the 'toAccountType' field.
      * @param value The value of 'toAccountType'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder setToAccountType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[12], value);
      this.toAccountTypeBuilder = null;
      this.toAccountType = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'toAccountType' field has been set.
      * @return True if the 'toAccountType' field has been set, false otherwise.
      */
    public boolean hasToAccountType() {
      return fieldSetFlags()[12];
    }

    /**
     * Gets the Builder instance for the 'toAccountType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getToAccountTypeBuilder() {
      if (toAccountTypeBuilder == null) {
        if (hasToAccountType()) {
          setToAccountTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(toAccountType));
        } else {
          setToAccountTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return toAccountTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'toAccountType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder setToAccountTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearToAccountType();
      toAccountTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'toAccountType' field has an active Builder instance
     * @return True if the 'toAccountType' field has an active Builder instance
     */
    public boolean hasToAccountTypeBuilder() {
      return toAccountTypeBuilder != null;
    }

    /**
      * Clears the value of the 'toAccountType' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder clearToAccountType() {
      toAccountType = null;
      toAccountTypeBuilder = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'toAccount' field.
      * @return The value.
      */
    public org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1 getToAccount() {
      return toAccount;
    }


    /**
      * Sets the value of the 'toAccount' field.
      * @param value The value of 'toAccount'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder setToAccount(org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1 value) {
      validate(fields()[13], value);
      this.toAccountBuilder = null;
      this.toAccount = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'toAccount' field has been set.
      * @return True if the 'toAccount' field has been set, false otherwise.
      */
    public boolean hasToAccount() {
      return fieldSetFlags()[13];
    }

    /**
     * Gets the Builder instance for the 'toAccount' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1.Builder getToAccountBuilder() {
      if (toAccountBuilder == null) {
        if (hasToAccount()) {
          setToAccountBuilder(org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1.newBuilder(toAccount));
        } else {
          setToAccountBuilder(org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1.newBuilder());
        }
      }
      return toAccountBuilder;
    }

    /**
     * Sets the Builder instance for the 'toAccount' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder setToAccountBuilder(org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1.Builder value) {
      clearToAccount();
      toAccountBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'toAccount' field has an active Builder instance
     * @return True if the 'toAccount' field has an active Builder instance
     */
    public boolean hasToAccountBuilder() {
      return toAccountBuilder != null;
    }

    /**
      * Clears the value of the 'toAccount' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder clearToAccount() {
      toAccount = null;
      toAccountBuilder = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AccountTransferDataV1 build() {
      try {
        AccountTransferDataV1 record = new AccountTransferDataV1();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Integer) defaultValue(fields()[0]);
        record.reversed = fieldSetFlags()[1] ? this.reversed : (java.lang.Boolean) defaultValue(fields()[1]);
        if (currencyBuilder != null) {
          try {
            record.currency = this.currencyBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("currency"));
            throw e;
          }
        } else {
          record.currency = fieldSetFlags()[2] ? this.currency : (org.apache.fineract.avro.generic.v1.CurrencyDataV1) defaultValue(fields()[2]);
        }
        record.transferAmount = fieldSetFlags()[3] ? this.transferAmount : (java.math.BigDecimal) defaultValue(fields()[3]);
        record.transferDate = fieldSetFlags()[4] ? this.transferDate : (java.lang.String) defaultValue(fields()[4]);
        record.transferDescription = fieldSetFlags()[5] ? this.transferDescription : (java.lang.String) defaultValue(fields()[5]);
        if (fromOfficeBuilder != null) {
          try {
            record.fromOffice = this.fromOfficeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("fromOffice"));
            throw e;
          }
        } else {
          record.fromOffice = fieldSetFlags()[6] ? this.fromOffice : (org.apache.fineract.avro.office.v1.OfficeDataV1) defaultValue(fields()[6]);
        }
        if (fromClientBuilder != null) {
          try {
            record.fromClient = this.fromClientBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("fromClient"));
            throw e;
          }
        } else {
          record.fromClient = fieldSetFlags()[7] ? this.fromClient : (org.apache.fineract.avro.client.v1.ClientDataV1) defaultValue(fields()[7]);
        }
        if (fromAccountTypeBuilder != null) {
          try {
            record.fromAccountType = this.fromAccountTypeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("fromAccountType"));
            throw e;
          }
        } else {
          record.fromAccountType = fieldSetFlags()[8] ? this.fromAccountType : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[8]);
        }
        if (fromAccountBuilder != null) {
          try {
            record.fromAccount = this.fromAccountBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("fromAccount"));
            throw e;
          }
        } else {
          record.fromAccount = fieldSetFlags()[9] ? this.fromAccount : (org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1) defaultValue(fields()[9]);
        }
        if (toOfficeBuilder != null) {
          try {
            record.toOffice = this.toOfficeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("toOffice"));
            throw e;
          }
        } else {
          record.toOffice = fieldSetFlags()[10] ? this.toOffice : (org.apache.fineract.avro.office.v1.OfficeDataV1) defaultValue(fields()[10]);
        }
        if (toClientBuilder != null) {
          try {
            record.toClient = this.toClientBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("toClient"));
            throw e;
          }
        } else {
          record.toClient = fieldSetFlags()[11] ? this.toClient : (org.apache.fineract.avro.client.v1.ClientDataV1) defaultValue(fields()[11]);
        }
        if (toAccountTypeBuilder != null) {
          try {
            record.toAccountType = this.toAccountTypeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("toAccountType"));
            throw e;
          }
        } else {
          record.toAccountType = fieldSetFlags()[12] ? this.toAccountType : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[12]);
        }
        if (toAccountBuilder != null) {
          try {
            record.toAccount = this.toAccountBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("toAccount"));
            throw e;
          }
        } else {
          record.toAccount = fieldSetFlags()[13] ? this.toAccount : (org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1) defaultValue(fields()[13]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AccountTransferDataV1>
    WRITER$ = (org.apache.avro.io.DatumWriter<AccountTransferDataV1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AccountTransferDataV1>
    READER$ = (org.apache.avro.io.DatumReader<AccountTransferDataV1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










