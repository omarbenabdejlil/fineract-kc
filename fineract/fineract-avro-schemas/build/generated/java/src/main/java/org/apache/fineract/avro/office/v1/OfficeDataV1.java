/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

package org.apache.fineract.avro.office.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class OfficeDataV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, org.apache.fineract.avro.generator.ByteBufferSerializable {
  private static final long serialVersionUID = 3772631129344819163L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OfficeDataV1\",\"namespace\":\"org.apache.fineract.avro.office.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nameDecorated\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"openingDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"hierarchy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"parentId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"parentName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"allowedParents\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"OfficeDataV1\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<OfficeDataV1> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<OfficeDataV1> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<OfficeDataV1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<OfficeDataV1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<OfficeDataV1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this OfficeDataV1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  @Override
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a OfficeDataV1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a OfficeDataV1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static OfficeDataV1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.Long id;
  private java.lang.String name;
  private java.lang.String nameDecorated;
  private java.lang.String externalId;
  private java.lang.String openingDate;
  private java.lang.String hierarchy;
  private java.lang.Long parentId;
  private java.lang.String parentName;
  private java.util.List<org.apache.fineract.avro.office.v1.OfficeDataV1> allowedParents;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public OfficeDataV1() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param name The new value for name
   * @param nameDecorated The new value for nameDecorated
   * @param externalId The new value for externalId
   * @param openingDate The new value for openingDate
   * @param hierarchy The new value for hierarchy
   * @param parentId The new value for parentId
   * @param parentName The new value for parentName
   * @param allowedParents The new value for allowedParents
   */
  public OfficeDataV1(java.lang.Long id, java.lang.String name, java.lang.String nameDecorated, java.lang.String externalId, java.lang.String openingDate, java.lang.String hierarchy, java.lang.Long parentId, java.lang.String parentName, java.util.List<org.apache.fineract.avro.office.v1.OfficeDataV1> allowedParents) {
    this.id = id;
    this.name = name;
    this.nameDecorated = nameDecorated;
    this.externalId = externalId;
    this.openingDate = openingDate;
    this.hierarchy = hierarchy;
    this.parentId = parentId;
    this.parentName = parentName;
    this.allowedParents = allowedParents;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return name;
    case 2: return nameDecorated;
    case 3: return externalId;
    case 4: return openingDate;
    case 5: return hierarchy;
    case 6: return parentId;
    case 7: return parentName;
    case 8: return allowedParents;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: name = value$ != null ? value$.toString() : null; break;
    case 2: nameDecorated = value$ != null ? value$.toString() : null; break;
    case 3: externalId = value$ != null ? value$.toString() : null; break;
    case 4: openingDate = value$ != null ? value$.toString() : null; break;
    case 5: hierarchy = value$ != null ? value$.toString() : null; break;
    case 6: parentId = (java.lang.Long)value$; break;
    case 7: parentName = value$ != null ? value$.toString() : null; break;
    case 8: allowedParents = (java.util.List<org.apache.fineract.avro.office.v1.OfficeDataV1>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'nameDecorated' field.
   * @return The value of the 'nameDecorated' field.
   */
  public java.lang.String getNameDecorated() {
    return nameDecorated;
  }


  /**
   * Sets the value of the 'nameDecorated' field.
   * @param value the value to set.
   */
  public void setNameDecorated(java.lang.String value) {
    this.nameDecorated = value;
  }

  /**
   * Gets the value of the 'externalId' field.
   * @return The value of the 'externalId' field.
   */
  public java.lang.String getExternalId() {
    return externalId;
  }


  /**
   * Sets the value of the 'externalId' field.
   * @param value the value to set.
   */
  public void setExternalId(java.lang.String value) {
    this.externalId = value;
  }

  /**
   * Gets the value of the 'openingDate' field.
   * @return The value of the 'openingDate' field.
   */
  public java.lang.String getOpeningDate() {
    return openingDate;
  }


  /**
   * Sets the value of the 'openingDate' field.
   * @param value the value to set.
   */
  public void setOpeningDate(java.lang.String value) {
    this.openingDate = value;
  }

  /**
   * Gets the value of the 'hierarchy' field.
   * @return The value of the 'hierarchy' field.
   */
  public java.lang.String getHierarchy() {
    return hierarchy;
  }


  /**
   * Sets the value of the 'hierarchy' field.
   * @param value the value to set.
   */
  public void setHierarchy(java.lang.String value) {
    this.hierarchy = value;
  }

  /**
   * Gets the value of the 'parentId' field.
   * @return The value of the 'parentId' field.
   */
  public java.lang.Long getParentId() {
    return parentId;
  }


  /**
   * Sets the value of the 'parentId' field.
   * @param value the value to set.
   */
  public void setParentId(java.lang.Long value) {
    this.parentId = value;
  }

  /**
   * Gets the value of the 'parentName' field.
   * @return The value of the 'parentName' field.
   */
  public java.lang.String getParentName() {
    return parentName;
  }


  /**
   * Sets the value of the 'parentName' field.
   * @param value the value to set.
   */
  public void setParentName(java.lang.String value) {
    this.parentName = value;
  }

  /**
   * Gets the value of the 'allowedParents' field.
   * @return The value of the 'allowedParents' field.
   */
  public java.util.List<org.apache.fineract.avro.office.v1.OfficeDataV1> getAllowedParents() {
    return allowedParents;
  }


  /**
   * Sets the value of the 'allowedParents' field.
   * @param value the value to set.
   */
  public void setAllowedParents(java.util.List<org.apache.fineract.avro.office.v1.OfficeDataV1> value) {
    this.allowedParents = value;
  }

  /**
   * Creates a new OfficeDataV1 RecordBuilder.
   * @return A new OfficeDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.office.v1.OfficeDataV1.Builder newBuilder() {
    return new org.apache.fineract.avro.office.v1.OfficeDataV1.Builder();
  }

  /**
   * Creates a new OfficeDataV1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new OfficeDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.office.v1.OfficeDataV1.Builder newBuilder(org.apache.fineract.avro.office.v1.OfficeDataV1.Builder other) {
    if (other == null) {
      return new org.apache.fineract.avro.office.v1.OfficeDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.office.v1.OfficeDataV1.Builder(other);
    }
  }

  /**
   * Creates a new OfficeDataV1 RecordBuilder by copying an existing OfficeDataV1 instance.
   * @param other The existing instance to copy.
   * @return A new OfficeDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.office.v1.OfficeDataV1.Builder newBuilder(org.apache.fineract.avro.office.v1.OfficeDataV1 other) {
    if (other == null) {
      return new org.apache.fineract.avro.office.v1.OfficeDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.office.v1.OfficeDataV1.Builder(other);
    }
  }

  /**
   * RecordBuilder for OfficeDataV1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OfficeDataV1>
    implements org.apache.avro.data.RecordBuilder<OfficeDataV1> {

    private java.lang.Long id;
    private java.lang.String name;
    private java.lang.String nameDecorated;
    private java.lang.String externalId;
    private java.lang.String openingDate;
    private java.lang.String hierarchy;
    private java.lang.Long parentId;
    private java.lang.String parentName;
    private java.util.List<org.apache.fineract.avro.office.v1.OfficeDataV1> allowedParents;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.fineract.avro.office.v1.OfficeDataV1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.nameDecorated)) {
        this.nameDecorated = data().deepCopy(fields()[2].schema(), other.nameDecorated);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.externalId)) {
        this.externalId = data().deepCopy(fields()[3].schema(), other.externalId);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.openingDate)) {
        this.openingDate = data().deepCopy(fields()[4].schema(), other.openingDate);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.hierarchy)) {
        this.hierarchy = data().deepCopy(fields()[5].schema(), other.hierarchy);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.parentId)) {
        this.parentId = data().deepCopy(fields()[6].schema(), other.parentId);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.parentName)) {
        this.parentName = data().deepCopy(fields()[7].schema(), other.parentName);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.allowedParents)) {
        this.allowedParents = data().deepCopy(fields()[8].schema(), other.allowedParents);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
    }

    /**
     * Creates a Builder by copying an existing OfficeDataV1 instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.fineract.avro.office.v1.OfficeDataV1 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.nameDecorated)) {
        this.nameDecorated = data().deepCopy(fields()[2].schema(), other.nameDecorated);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.externalId)) {
        this.externalId = data().deepCopy(fields()[3].schema(), other.externalId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.openingDate)) {
        this.openingDate = data().deepCopy(fields()[4].schema(), other.openingDate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.hierarchy)) {
        this.hierarchy = data().deepCopy(fields()[5].schema(), other.hierarchy);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.parentId)) {
        this.parentId = data().deepCopy(fields()[6].schema(), other.parentId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.parentName)) {
        this.parentName = data().deepCopy(fields()[7].schema(), other.parentName);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.allowedParents)) {
        this.allowedParents = data().deepCopy(fields()[8].schema(), other.allowedParents);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.apache.fineract.avro.office.v1.OfficeDataV1.Builder setId(java.lang.Long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.office.v1.OfficeDataV1.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public org.apache.fineract.avro.office.v1.OfficeDataV1.Builder setName(java.lang.String value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.office.v1.OfficeDataV1.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'nameDecorated' field.
      * @return The value.
      */
    public java.lang.String getNameDecorated() {
      return nameDecorated;
    }


    /**
      * Sets the value of the 'nameDecorated' field.
      * @param value The value of 'nameDecorated'.
      * @return This builder.
      */
    public org.apache.fineract.avro.office.v1.OfficeDataV1.Builder setNameDecorated(java.lang.String value) {
      validate(fields()[2], value);
      this.nameDecorated = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'nameDecorated' field has been set.
      * @return True if the 'nameDecorated' field has been set, false otherwise.
      */
    public boolean hasNameDecorated() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'nameDecorated' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.office.v1.OfficeDataV1.Builder clearNameDecorated() {
      nameDecorated = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'externalId' field.
      * @return The value.
      */
    public java.lang.String getExternalId() {
      return externalId;
    }


    /**
      * Sets the value of the 'externalId' field.
      * @param value The value of 'externalId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.office.v1.OfficeDataV1.Builder setExternalId(java.lang.String value) {
      validate(fields()[3], value);
      this.externalId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'externalId' field has been set.
      * @return True if the 'externalId' field has been set, false otherwise.
      */
    public boolean hasExternalId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'externalId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.office.v1.OfficeDataV1.Builder clearExternalId() {
      externalId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'openingDate' field.
      * @return The value.
      */
    public java.lang.String getOpeningDate() {
      return openingDate;
    }


    /**
      * Sets the value of the 'openingDate' field.
      * @param value The value of 'openingDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.office.v1.OfficeDataV1.Builder setOpeningDate(java.lang.String value) {
      validate(fields()[4], value);
      this.openingDate = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'openingDate' field has been set.
      * @return True if the 'openingDate' field has been set, false otherwise.
      */
    public boolean hasOpeningDate() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'openingDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.office.v1.OfficeDataV1.Builder clearOpeningDate() {
      openingDate = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'hierarchy' field.
      * @return The value.
      */
    public java.lang.String getHierarchy() {
      return hierarchy;
    }


    /**
      * Sets the value of the 'hierarchy' field.
      * @param value The value of 'hierarchy'.
      * @return This builder.
      */
    public org.apache.fineract.avro.office.v1.OfficeDataV1.Builder setHierarchy(java.lang.String value) {
      validate(fields()[5], value);
      this.hierarchy = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'hierarchy' field has been set.
      * @return True if the 'hierarchy' field has been set, false otherwise.
      */
    public boolean hasHierarchy() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'hierarchy' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.office.v1.OfficeDataV1.Builder clearHierarchy() {
      hierarchy = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'parentId' field.
      * @return The value.
      */
    public java.lang.Long getParentId() {
      return parentId;
    }


    /**
      * Sets the value of the 'parentId' field.
      * @param value The value of 'parentId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.office.v1.OfficeDataV1.Builder setParentId(java.lang.Long value) {
      validate(fields()[6], value);
      this.parentId = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'parentId' field has been set.
      * @return True if the 'parentId' field has been set, false otherwise.
      */
    public boolean hasParentId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'parentId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.office.v1.OfficeDataV1.Builder clearParentId() {
      parentId = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'parentName' field.
      * @return The value.
      */
    public java.lang.String getParentName() {
      return parentName;
    }


    /**
      * Sets the value of the 'parentName' field.
      * @param value The value of 'parentName'.
      * @return This builder.
      */
    public org.apache.fineract.avro.office.v1.OfficeDataV1.Builder setParentName(java.lang.String value) {
      validate(fields()[7], value);
      this.parentName = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'parentName' field has been set.
      * @return True if the 'parentName' field has been set, false otherwise.
      */
    public boolean hasParentName() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'parentName' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.office.v1.OfficeDataV1.Builder clearParentName() {
      parentName = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'allowedParents' field.
      * @return The value.
      */
    public java.util.List<org.apache.fineract.avro.office.v1.OfficeDataV1> getAllowedParents() {
      return allowedParents;
    }


    /**
      * Sets the value of the 'allowedParents' field.
      * @param value The value of 'allowedParents'.
      * @return This builder.
      */
    public org.apache.fineract.avro.office.v1.OfficeDataV1.Builder setAllowedParents(java.util.List<org.apache.fineract.avro.office.v1.OfficeDataV1> value) {
      validate(fields()[8], value);
      this.allowedParents = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'allowedParents' field has been set.
      * @return True if the 'allowedParents' field has been set, false otherwise.
      */
    public boolean hasAllowedParents() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'allowedParents' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.office.v1.OfficeDataV1.Builder clearAllowedParents() {
      allowedParents = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public OfficeDataV1 build() {
      try {
        OfficeDataV1 record = new OfficeDataV1();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.String) defaultValue(fields()[1]);
        record.nameDecorated = fieldSetFlags()[2] ? this.nameDecorated : (java.lang.String) defaultValue(fields()[2]);
        record.externalId = fieldSetFlags()[3] ? this.externalId : (java.lang.String) defaultValue(fields()[3]);
        record.openingDate = fieldSetFlags()[4] ? this.openingDate : (java.lang.String) defaultValue(fields()[4]);
        record.hierarchy = fieldSetFlags()[5] ? this.hierarchy : (java.lang.String) defaultValue(fields()[5]);
        record.parentId = fieldSetFlags()[6] ? this.parentId : (java.lang.Long) defaultValue(fields()[6]);
        record.parentName = fieldSetFlags()[7] ? this.parentName : (java.lang.String) defaultValue(fields()[7]);
        record.allowedParents = fieldSetFlags()[8] ? this.allowedParents : (java.util.List<org.apache.fineract.avro.office.v1.OfficeDataV1>) defaultValue(fields()[8]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<OfficeDataV1>
    WRITER$ = (org.apache.avro.io.DatumWriter<OfficeDataV1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<OfficeDataV1>
    READER$ = (org.apache.avro.io.DatumReader<OfficeDataV1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.id);
    }

    if (this.name == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.name);
    }

    if (this.nameDecorated == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.nameDecorated);
    }

    if (this.externalId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.externalId);
    }

    if (this.openingDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.openingDate);
    }

    if (this.hierarchy == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.hierarchy);
    }

    if (this.parentId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.parentId);
    }

    if (this.parentName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.parentName);
    }

    if (this.allowedParents == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.allowedParents.size();
      out.writeArrayStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (org.apache.fineract.avro.office.v1.OfficeDataV1 e0: this.allowedParents) {
        actualSize0++;
        out.startItem();
        e0.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize0 != size0)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.id = null;
      } else {
        this.id = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.name = null;
      } else {
        this.name = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.nameDecorated = null;
      } else {
        this.nameDecorated = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.externalId = null;
      } else {
        this.externalId = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.openingDate = null;
      } else {
        this.openingDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.hierarchy = null;
      } else {
        this.hierarchy = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.parentId = null;
      } else {
        this.parentId = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.parentName = null;
      } else {
        this.parentName = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.allowedParents = null;
      } else {
        long size0 = in.readArrayStart();
        java.util.List<org.apache.fineract.avro.office.v1.OfficeDataV1> a0 = this.allowedParents;
        if (a0 == null) {
          a0 = new SpecificData.Array<org.apache.fineract.avro.office.v1.OfficeDataV1>((int)size0, SCHEMA$.getField("allowedParents").schema().getTypes().get(1));
          this.allowedParents = a0;
        } else a0.clear();
        SpecificData.Array<org.apache.fineract.avro.office.v1.OfficeDataV1> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<org.apache.fineract.avro.office.v1.OfficeDataV1>)a0 : null);
        for ( ; 0 < size0; size0 = in.arrayNext()) {
          for ( ; size0 != 0; size0--) {
            org.apache.fineract.avro.office.v1.OfficeDataV1 e0 = (ga0 != null ? ga0.peek() : null);
            if (e0 == null) {
              e0 = new org.apache.fineract.avro.office.v1.OfficeDataV1();
            }
            e0.customDecode(in);
            a0.add(e0);
          }
        }
      }

    } else {
      for (int i = 0; i < 9; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.id = null;
          } else {
            this.id = in.readLong();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.name = null;
          } else {
            this.name = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.nameDecorated = null;
          } else {
            this.nameDecorated = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.externalId = null;
          } else {
            this.externalId = in.readString();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.openingDate = null;
          } else {
            this.openingDate = in.readString();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.hierarchy = null;
          } else {
            this.hierarchy = in.readString();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.parentId = null;
          } else {
            this.parentId = in.readLong();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.parentName = null;
          } else {
            this.parentName = in.readString();
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.allowedParents = null;
          } else {
            long size0 = in.readArrayStart();
            java.util.List<org.apache.fineract.avro.office.v1.OfficeDataV1> a0 = this.allowedParents;
            if (a0 == null) {
              a0 = new SpecificData.Array<org.apache.fineract.avro.office.v1.OfficeDataV1>((int)size0, SCHEMA$.getField("allowedParents").schema().getTypes().get(1));
              this.allowedParents = a0;
            } else a0.clear();
            SpecificData.Array<org.apache.fineract.avro.office.v1.OfficeDataV1> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<org.apache.fineract.avro.office.v1.OfficeDataV1>)a0 : null);
            for ( ; 0 < size0; size0 = in.arrayNext()) {
              for ( ; size0 != 0; size0--) {
                org.apache.fineract.avro.office.v1.OfficeDataV1 e0 = (ga0 != null ? ga0.peek() : null);
                if (e0 == null) {
                  e0 = new org.apache.fineract.avro.office.v1.OfficeDataV1();
                }
                e0.customDecode(in);
                a0.add(e0);
              }
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










