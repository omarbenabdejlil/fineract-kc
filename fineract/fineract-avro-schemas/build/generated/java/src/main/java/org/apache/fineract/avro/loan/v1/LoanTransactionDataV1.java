/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

package org.apache.fineract.avro.loan.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class LoanTransactionDataV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, org.apache.fineract.avro.generator.ByteBufferSerializable {
  private static final long serialVersionUID = 2528306242150022220L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LoanTransactionDataV1\",\"namespace\":\"org.apache.fineract.avro.loan.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"loanId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"externalLoanId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"officeId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"officeName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LoanTransactionEnumDataV1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"disbursement\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"repaymentAtDisbursement\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"repayment\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"merchantIssuedRefund\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"payoutRefund\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"goodwillCredit\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"chargeRefund\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"contra\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"waiveInterest\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"waiveCharges\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"accrual\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"writeOff\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"recoveryRepayment\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"initiateTransfer\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"approveTransfer\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"withdrawTransfer\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"rejectTransfer\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"chargePayment\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"refund\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"refundForActiveLoans\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"creditBalanceRefund\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"chargeback\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"date\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"currency\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CurrencyDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"decimalPlaces\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"inMultiplesOf\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"displaySymbol\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nameCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"displayLabel\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"paymentDetailData\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PaymentDetailDataV1\",\"namespace\":\"org.apache.fineract.avro.payment.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"paymentType\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PaymentTypeDataV1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isCashPayment\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"position\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"codeName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isSystemDefined\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"accountNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"checkNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"routingCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"receiptNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"bankNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"amount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"netDisbursalAmount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"principalPortion\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"interestPortion\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"feeChargesPortion\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"penaltyChargesPortion\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"overpaymentPortion\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"unrecognizedIncomePortion\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalOwnerId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"transfer\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"AccountTransferDataV1\",\"namespace\":\"org.apache.fineract.avro.savings.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"reversed\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"currency\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.CurrencyDataV1\"],\"default\":null},{\"name\":\"transferAmount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"transferDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"transferDescription\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fromOffice\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"OfficeDataV1\",\"namespace\":\"org.apache.fineract.avro.office.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nameDecorated\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"openingDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"hierarchy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"parentId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"parentName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"allowedParents\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"OfficeDataV1\"}],\"default\":null}]}],\"default\":null},{\"name\":\"fromClient\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ClientDataV1\",\"namespace\":\"org.apache.fineract.avro.client.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"accountNo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"EnumOptionDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"subStatus\",\"type\":[\"null\",{\"type\":\"record\",\"name\":","\"CodeValueDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"position\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"active\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"mandatory\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"active\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"activationDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"firstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"middlename\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fullname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"displayName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"mobileNo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"emailAddress\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"dateOfBirth\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"gender\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.CodeValueDataV1\"],\"default\":null},{\"name\":\"clientType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.CodeValueDataV1\"],\"default\":null},{\"name\":\"clientClassification\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.CodeValueDataV1\"],\"default\":null},{\"name\":\"isStaff\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"officeId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"officeName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"transferToOfficeId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"transferToOfficeName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"imageId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"imagePresent\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"staffId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"staffName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"timeline\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ClientTimelineDataV1\",\"fields\":[{\"name\":\"submittedOnDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"submittedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"submittedByFirstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"submittedByLastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activatedOnDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activatedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activatedByFirstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activatedByLastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closedOnDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closedByFirstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closedByLastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"savingsProductId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"savingsProductName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"savingsAccountId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"legalForm\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"clientCollateralManagements\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ClientCollateralManagementDataV1\",\"fields\":[{\"name\":\"quantity\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"pctToBase\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"unitPrice\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"total\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalCollateral\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"groups\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GroupGeneralDataV1\",\"namespace\":\"org.apache.fineract.avro.group.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"accountNo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"active\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"activationDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"officeId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"officeName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"centerId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"centerName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"staffId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"staffName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"hierarchy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"groupLevel\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"groupRoles\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GroupRoleDataV1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"role\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.CodeValueDataV1\"],\"default\":null},{\"name\":\"clientId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"clientName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"calendarsData\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"CalendarDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"calendarInstanceId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"entityId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"entityType\",\"type\":[\"null\",\"EnumOptionDataV1\"],\"default\":null},{\"name\":\"title\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"location\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"startDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"endDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"meetingTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"duration\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"EnumOptionDataV1\"],\"default\":null},{\"name\":\"repeating\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"recurrence\",\"type\":[\"n","ull\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"frequency\",\"type\":[\"null\",\"EnumOptionDataV1\"],\"default\":null},{\"name\":\"interval\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"repeatsOnDay\",\"type\":[\"null\",\"EnumOptionDataV1\"],\"default\":null},{\"name\":\"repeatsOnNthDayOfMonth\",\"type\":[\"null\",\"EnumOptionDataV1\"],\"default\":null},{\"name\":\"remindBy\",\"type\":[\"null\",\"EnumOptionDataV1\"],\"default\":null},{\"name\":\"firstReminder\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"secondReminder\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"recurringDates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"nextTenRecurringDates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"humanReadable\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"recentEligibleMeetingDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"createdDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lastUpdatedDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"createdByUserId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"createdByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lastUpdatedByUserId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"lastUpdatedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"repeatsOnDayOfMonth\",\"type\":[\"null\",\"int\"],\"default\":null}]}}],\"default\":null},{\"name\":\"collectionMeetingCalendar\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.CalendarDataV1\"],\"default\":null}]}}],\"default\":null}]}],\"default\":null},{\"name\":\"fromAccountType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"fromAccount\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PortfolioAccountDataV1\",\"namespace\":\"org.apache.fineract.avro.portfolio.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"accountNo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"groupId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"groupName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"clientId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"clientName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"productId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"productName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fieldOfficerId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"fieldOfficerName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"currency\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.CurrencyDataV1\"],\"default\":null},{\"name\":\"amtForTransfer\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null}]}],\"default\":null},{\"name\":\"toOffice\",\"type\":[\"null\",\"org.apache.fineract.avro.office.v1.OfficeDataV1\"],\"default\":null},{\"name\":\"toClient\",\"type\":[\"null\",\"org.apache.fineract.avro.client.v1.ClientDataV1\"],\"default\":null},{\"name\":\"toAccountType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"toAccount\",\"type\":[\"null\",\"org.apache.fineract.avro.portfolio.v1.PortfolioAccountDataV1\"],\"default\":null}]}],\"default\":null},{\"name\":\"fixedEmiAmount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"outstandingLoanBalance\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"submittedOnDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"manuallyReversed\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"possibleNextRepaymentDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"loanChargePaidByList\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"LoanChargePaidByDataV1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"amount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"installmentNumber\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"chargeId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"transactionId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"transactionRelations\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"LoanTransactionRelationDataV1\",\"fields\":[{\"name\":\"fromLoanTransaction\",\"type\":\"long\"},{\"name\":\"toLoanTransaction\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"toLoanCharge\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"amount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"relationType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"paymentType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"unpaidCharges\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"UnpaidChargeDataV1\",\"fields\":[{\"name\":\"chargeId\",\"type\":\"long\"},{\"name\":\"chargeName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"outstandingAmount\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}}]}}],\"doc\":\"Only used for Charge-off transaction\",\"default\":null},{\"name\":\"reversedOnDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<LoanTransactionDataV1> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<LoanTransactionDataV1> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<LoanTransactionDataV1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<LoanTransactionDataV1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<LoanTransactionDataV1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this LoanTransactionDataV1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  @Override
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a LoanTransactionDataV1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a LoanTransactionDataV1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static LoanTransactionDataV1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.Long id;
  private java.lang.Long loanId;
  private java.lang.String externalLoanId;
  private java.lang.Long officeId;
  private java.lang.String officeName;
  private org.apache.fineract.avro.loan.v1.LoanTransactionEnumDataV1 type;
  private java.lang.String date;
  private org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency;
  private org.apache.fineract.avro.payment.v1.PaymentDetailDataV1 paymentDetailData;
  private java.math.BigDecimal amount;
  private java.math.BigDecimal netDisbursalAmount;
  private java.math.BigDecimal principalPortion;
  private java.math.BigDecimal interestPortion;
  private java.math.BigDecimal feeChargesPortion;
  private java.math.BigDecimal penaltyChargesPortion;
  private java.math.BigDecimal overpaymentPortion;
  private java.math.BigDecimal unrecognizedIncomePortion;
  private java.lang.String externalId;
  private java.lang.String externalOwnerId;
  private org.apache.fineract.avro.savings.v1.AccountTransferDataV1 transfer;
  private java.math.BigDecimal fixedEmiAmount;
  private java.math.BigDecimal outstandingLoanBalance;
  private java.lang.String submittedOnDate;
  private java.lang.Boolean manuallyReversed;
  private java.lang.String possibleNextRepaymentDate;
  private java.util.List<org.apache.fineract.avro.loan.v1.LoanChargePaidByDataV1> loanChargePaidByList;
  private java.util.List<org.apache.fineract.avro.loan.v1.LoanTransactionRelationDataV1> transactionRelations;
  /** Only used for Charge-off transaction */
  private java.util.List<org.apache.fineract.avro.loan.v1.UnpaidChargeDataV1> unpaidCharges;
  private java.lang.String reversedOnDate;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LoanTransactionDataV1() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param loanId The new value for loanId
   * @param externalLoanId The new value for externalLoanId
   * @param officeId The new value for officeId
   * @param officeName The new value for officeName
   * @param type The new value for type
   * @param date The new value for date
   * @param currency The new value for currency
   * @param paymentDetailData The new value for paymentDetailData
   * @param amount The new value for amount
   * @param netDisbursalAmount The new value for netDisbursalAmount
   * @param principalPortion The new value for principalPortion
   * @param interestPortion The new value for interestPortion
   * @param feeChargesPortion The new value for feeChargesPortion
   * @param penaltyChargesPortion The new value for penaltyChargesPortion
   * @param overpaymentPortion The new value for overpaymentPortion
   * @param unrecognizedIncomePortion The new value for unrecognizedIncomePortion
   * @param externalId The new value for externalId
   * @param externalOwnerId The new value for externalOwnerId
   * @param transfer The new value for transfer
   * @param fixedEmiAmount The new value for fixedEmiAmount
   * @param outstandingLoanBalance The new value for outstandingLoanBalance
   * @param submittedOnDate The new value for submittedOnDate
   * @param manuallyReversed The new value for manuallyReversed
   * @param possibleNextRepaymentDate The new value for possibleNextRepaymentDate
   * @param loanChargePaidByList The new value for loanChargePaidByList
   * @param transactionRelations The new value for transactionRelations
   * @param unpaidCharges Only used for Charge-off transaction
   * @param reversedOnDate The new value for reversedOnDate
   */
  public LoanTransactionDataV1(java.lang.Long id, java.lang.Long loanId, java.lang.String externalLoanId, java.lang.Long officeId, java.lang.String officeName, org.apache.fineract.avro.loan.v1.LoanTransactionEnumDataV1 type, java.lang.String date, org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency, org.apache.fineract.avro.payment.v1.PaymentDetailDataV1 paymentDetailData, java.math.BigDecimal amount, java.math.BigDecimal netDisbursalAmount, java.math.BigDecimal principalPortion, java.math.BigDecimal interestPortion, java.math.BigDecimal feeChargesPortion, java.math.BigDecimal penaltyChargesPortion, java.math.BigDecimal overpaymentPortion, java.math.BigDecimal unrecognizedIncomePortion, java.lang.String externalId, java.lang.String externalOwnerId, org.apache.fineract.avro.savings.v1.AccountTransferDataV1 transfer, java.math.BigDecimal fixedEmiAmount, java.math.BigDecimal outstandingLoanBalance, java.lang.String submittedOnDate, java.lang.Boolean manuallyReversed, java.lang.String possibleNextRepaymentDate, java.util.List<org.apache.fineract.avro.loan.v1.LoanChargePaidByDataV1> loanChargePaidByList, java.util.List<org.apache.fineract.avro.loan.v1.LoanTransactionRelationDataV1> transactionRelations, java.util.List<org.apache.fineract.avro.loan.v1.UnpaidChargeDataV1> unpaidCharges, java.lang.String reversedOnDate) {
    this.id = id;
    this.loanId = loanId;
    this.externalLoanId = externalLoanId;
    this.officeId = officeId;
    this.officeName = officeName;
    this.type = type;
    this.date = date;
    this.currency = currency;
    this.paymentDetailData = paymentDetailData;
    this.amount = amount;
    this.netDisbursalAmount = netDisbursalAmount;
    this.principalPortion = principalPortion;
    this.interestPortion = interestPortion;
    this.feeChargesPortion = feeChargesPortion;
    this.penaltyChargesPortion = penaltyChargesPortion;
    this.overpaymentPortion = overpaymentPortion;
    this.unrecognizedIncomePortion = unrecognizedIncomePortion;
    this.externalId = externalId;
    this.externalOwnerId = externalOwnerId;
    this.transfer = transfer;
    this.fixedEmiAmount = fixedEmiAmount;
    this.outstandingLoanBalance = outstandingLoanBalance;
    this.submittedOnDate = submittedOnDate;
    this.manuallyReversed = manuallyReversed;
    this.possibleNextRepaymentDate = possibleNextRepaymentDate;
    this.loanChargePaidByList = loanChargePaidByList;
    this.transactionRelations = transactionRelations;
    this.unpaidCharges = unpaidCharges;
    this.reversedOnDate = reversedOnDate;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return loanId;
    case 2: return externalLoanId;
    case 3: return officeId;
    case 4: return officeName;
    case 5: return type;
    case 6: return date;
    case 7: return currency;
    case 8: return paymentDetailData;
    case 9: return amount;
    case 10: return netDisbursalAmount;
    case 11: return principalPortion;
    case 12: return interestPortion;
    case 13: return feeChargesPortion;
    case 14: return penaltyChargesPortion;
    case 15: return overpaymentPortion;
    case 16: return unrecognizedIncomePortion;
    case 17: return externalId;
    case 18: return externalOwnerId;
    case 19: return transfer;
    case 20: return fixedEmiAmount;
    case 21: return outstandingLoanBalance;
    case 22: return submittedOnDate;
    case 23: return manuallyReversed;
    case 24: return possibleNextRepaymentDate;
    case 25: return loanChargePaidByList;
    case 26: return transactionRelations;
    case 27: return unpaidCharges;
    case 28: return reversedOnDate;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: loanId = (java.lang.Long)value$; break;
    case 2: externalLoanId = value$ != null ? value$.toString() : null; break;
    case 3: officeId = (java.lang.Long)value$; break;
    case 4: officeName = value$ != null ? value$.toString() : null; break;
    case 5: type = (org.apache.fineract.avro.loan.v1.LoanTransactionEnumDataV1)value$; break;
    case 6: date = value$ != null ? value$.toString() : null; break;
    case 7: currency = (org.apache.fineract.avro.generic.v1.CurrencyDataV1)value$; break;
    case 8: paymentDetailData = (org.apache.fineract.avro.payment.v1.PaymentDetailDataV1)value$; break;
    case 9: amount = (java.math.BigDecimal)value$; break;
    case 10: netDisbursalAmount = (java.math.BigDecimal)value$; break;
    case 11: principalPortion = (java.math.BigDecimal)value$; break;
    case 12: interestPortion = (java.math.BigDecimal)value$; break;
    case 13: feeChargesPortion = (java.math.BigDecimal)value$; break;
    case 14: penaltyChargesPortion = (java.math.BigDecimal)value$; break;
    case 15: overpaymentPortion = (java.math.BigDecimal)value$; break;
    case 16: unrecognizedIncomePortion = (java.math.BigDecimal)value$; break;
    case 17: externalId = value$ != null ? value$.toString() : null; break;
    case 18: externalOwnerId = value$ != null ? value$.toString() : null; break;
    case 19: transfer = (org.apache.fineract.avro.savings.v1.AccountTransferDataV1)value$; break;
    case 20: fixedEmiAmount = (java.math.BigDecimal)value$; break;
    case 21: outstandingLoanBalance = (java.math.BigDecimal)value$; break;
    case 22: submittedOnDate = value$ != null ? value$.toString() : null; break;
    case 23: manuallyReversed = (java.lang.Boolean)value$; break;
    case 24: possibleNextRepaymentDate = value$ != null ? value$.toString() : null; break;
    case 25: loanChargePaidByList = (java.util.List<org.apache.fineract.avro.loan.v1.LoanChargePaidByDataV1>)value$; break;
    case 26: transactionRelations = (java.util.List<org.apache.fineract.avro.loan.v1.LoanTransactionRelationDataV1>)value$; break;
    case 27: unpaidCharges = (java.util.List<org.apache.fineract.avro.loan.v1.UnpaidChargeDataV1>)value$; break;
    case 28: reversedOnDate = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'loanId' field.
   * @return The value of the 'loanId' field.
   */
  public java.lang.Long getLoanId() {
    return loanId;
  }


  /**
   * Sets the value of the 'loanId' field.
   * @param value the value to set.
   */
  public void setLoanId(java.lang.Long value) {
    this.loanId = value;
  }

  /**
   * Gets the value of the 'externalLoanId' field.
   * @return The value of the 'externalLoanId' field.
   */
  public java.lang.String getExternalLoanId() {
    return externalLoanId;
  }


  /**
   * Sets the value of the 'externalLoanId' field.
   * @param value the value to set.
   */
  public void setExternalLoanId(java.lang.String value) {
    this.externalLoanId = value;
  }

  /**
   * Gets the value of the 'officeId' field.
   * @return The value of the 'officeId' field.
   */
  public java.lang.Long getOfficeId() {
    return officeId;
  }


  /**
   * Sets the value of the 'officeId' field.
   * @param value the value to set.
   */
  public void setOfficeId(java.lang.Long value) {
    this.officeId = value;
  }

  /**
   * Gets the value of the 'officeName' field.
   * @return The value of the 'officeName' field.
   */
  public java.lang.String getOfficeName() {
    return officeName;
  }


  /**
   * Sets the value of the 'officeName' field.
   * @param value the value to set.
   */
  public void setOfficeName(java.lang.String value) {
    this.officeName = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public org.apache.fineract.avro.loan.v1.LoanTransactionEnumDataV1 getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(org.apache.fineract.avro.loan.v1.LoanTransactionEnumDataV1 value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'date' field.
   * @return The value of the 'date' field.
   */
  public java.lang.String getDate() {
    return date;
  }


  /**
   * Sets the value of the 'date' field.
   * @param value the value to set.
   */
  public void setDate(java.lang.String value) {
    this.date = value;
  }

  /**
   * Gets the value of the 'currency' field.
   * @return The value of the 'currency' field.
   */
  public org.apache.fineract.avro.generic.v1.CurrencyDataV1 getCurrency() {
    return currency;
  }


  /**
   * Sets the value of the 'currency' field.
   * @param value the value to set.
   */
  public void setCurrency(org.apache.fineract.avro.generic.v1.CurrencyDataV1 value) {
    this.currency = value;
  }

  /**
   * Gets the value of the 'paymentDetailData' field.
   * @return The value of the 'paymentDetailData' field.
   */
  public org.apache.fineract.avro.payment.v1.PaymentDetailDataV1 getPaymentDetailData() {
    return paymentDetailData;
  }


  /**
   * Sets the value of the 'paymentDetailData' field.
   * @param value the value to set.
   */
  public void setPaymentDetailData(org.apache.fineract.avro.payment.v1.PaymentDetailDataV1 value) {
    this.paymentDetailData = value;
  }

  /**
   * Gets the value of the 'amount' field.
   * @return The value of the 'amount' field.
   */
  public java.math.BigDecimal getAmount() {
    return amount;
  }


  /**
   * Sets the value of the 'amount' field.
   * @param value the value to set.
   */
  public void setAmount(java.math.BigDecimal value) {
    this.amount = value;
  }

  /**
   * Gets the value of the 'netDisbursalAmount' field.
   * @return The value of the 'netDisbursalAmount' field.
   */
  public java.math.BigDecimal getNetDisbursalAmount() {
    return netDisbursalAmount;
  }


  /**
   * Sets the value of the 'netDisbursalAmount' field.
   * @param value the value to set.
   */
  public void setNetDisbursalAmount(java.math.BigDecimal value) {
    this.netDisbursalAmount = value;
  }

  /**
   * Gets the value of the 'principalPortion' field.
   * @return The value of the 'principalPortion' field.
   */
  public java.math.BigDecimal getPrincipalPortion() {
    return principalPortion;
  }


  /**
   * Sets the value of the 'principalPortion' field.
   * @param value the value to set.
   */
  public void setPrincipalPortion(java.math.BigDecimal value) {
    this.principalPortion = value;
  }

  /**
   * Gets the value of the 'interestPortion' field.
   * @return The value of the 'interestPortion' field.
   */
  public java.math.BigDecimal getInterestPortion() {
    return interestPortion;
  }


  /**
   * Sets the value of the 'interestPortion' field.
   * @param value the value to set.
   */
  public void setInterestPortion(java.math.BigDecimal value) {
    this.interestPortion = value;
  }

  /**
   * Gets the value of the 'feeChargesPortion' field.
   * @return The value of the 'feeChargesPortion' field.
   */
  public java.math.BigDecimal getFeeChargesPortion() {
    return feeChargesPortion;
  }


  /**
   * Sets the value of the 'feeChargesPortion' field.
   * @param value the value to set.
   */
  public void setFeeChargesPortion(java.math.BigDecimal value) {
    this.feeChargesPortion = value;
  }

  /**
   * Gets the value of the 'penaltyChargesPortion' field.
   * @return The value of the 'penaltyChargesPortion' field.
   */
  public java.math.BigDecimal getPenaltyChargesPortion() {
    return penaltyChargesPortion;
  }


  /**
   * Sets the value of the 'penaltyChargesPortion' field.
   * @param value the value to set.
   */
  public void setPenaltyChargesPortion(java.math.BigDecimal value) {
    this.penaltyChargesPortion = value;
  }

  /**
   * Gets the value of the 'overpaymentPortion' field.
   * @return The value of the 'overpaymentPortion' field.
   */
  public java.math.BigDecimal getOverpaymentPortion() {
    return overpaymentPortion;
  }


  /**
   * Sets the value of the 'overpaymentPortion' field.
   * @param value the value to set.
   */
  public void setOverpaymentPortion(java.math.BigDecimal value) {
    this.overpaymentPortion = value;
  }

  /**
   * Gets the value of the 'unrecognizedIncomePortion' field.
   * @return The value of the 'unrecognizedIncomePortion' field.
   */
  public java.math.BigDecimal getUnrecognizedIncomePortion() {
    return unrecognizedIncomePortion;
  }


  /**
   * Sets the value of the 'unrecognizedIncomePortion' field.
   * @param value the value to set.
   */
  public void setUnrecognizedIncomePortion(java.math.BigDecimal value) {
    this.unrecognizedIncomePortion = value;
  }

  /**
   * Gets the value of the 'externalId' field.
   * @return The value of the 'externalId' field.
   */
  public java.lang.String getExternalId() {
    return externalId;
  }


  /**
   * Sets the value of the 'externalId' field.
   * @param value the value to set.
   */
  public void setExternalId(java.lang.String value) {
    this.externalId = value;
  }

  /**
   * Gets the value of the 'externalOwnerId' field.
   * @return The value of the 'externalOwnerId' field.
   */
  public java.lang.String getExternalOwnerId() {
    return externalOwnerId;
  }


  /**
   * Sets the value of the 'externalOwnerId' field.
   * @param value the value to set.
   */
  public void setExternalOwnerId(java.lang.String value) {
    this.externalOwnerId = value;
  }

  /**
   * Gets the value of the 'transfer' field.
   * @return The value of the 'transfer' field.
   */
  public org.apache.fineract.avro.savings.v1.AccountTransferDataV1 getTransfer() {
    return transfer;
  }


  /**
   * Sets the value of the 'transfer' field.
   * @param value the value to set.
   */
  public void setTransfer(org.apache.fineract.avro.savings.v1.AccountTransferDataV1 value) {
    this.transfer = value;
  }

  /**
   * Gets the value of the 'fixedEmiAmount' field.
   * @return The value of the 'fixedEmiAmount' field.
   */
  public java.math.BigDecimal getFixedEmiAmount() {
    return fixedEmiAmount;
  }


  /**
   * Sets the value of the 'fixedEmiAmount' field.
   * @param value the value to set.
   */
  public void setFixedEmiAmount(java.math.BigDecimal value) {
    this.fixedEmiAmount = value;
  }

  /**
   * Gets the value of the 'outstandingLoanBalance' field.
   * @return The value of the 'outstandingLoanBalance' field.
   */
  public java.math.BigDecimal getOutstandingLoanBalance() {
    return outstandingLoanBalance;
  }


  /**
   * Sets the value of the 'outstandingLoanBalance' field.
   * @param value the value to set.
   */
  public void setOutstandingLoanBalance(java.math.BigDecimal value) {
    this.outstandingLoanBalance = value;
  }

  /**
   * Gets the value of the 'submittedOnDate' field.
   * @return The value of the 'submittedOnDate' field.
   */
  public java.lang.String getSubmittedOnDate() {
    return submittedOnDate;
  }


  /**
   * Sets the value of the 'submittedOnDate' field.
   * @param value the value to set.
   */
  public void setSubmittedOnDate(java.lang.String value) {
    this.submittedOnDate = value;
  }

  /**
   * Gets the value of the 'manuallyReversed' field.
   * @return The value of the 'manuallyReversed' field.
   */
  public java.lang.Boolean getManuallyReversed() {
    return manuallyReversed;
  }


  /**
   * Sets the value of the 'manuallyReversed' field.
   * @param value the value to set.
   */
  public void setManuallyReversed(java.lang.Boolean value) {
    this.manuallyReversed = value;
  }

  /**
   * Gets the value of the 'possibleNextRepaymentDate' field.
   * @return The value of the 'possibleNextRepaymentDate' field.
   */
  public java.lang.String getPossibleNextRepaymentDate() {
    return possibleNextRepaymentDate;
  }


  /**
   * Sets the value of the 'possibleNextRepaymentDate' field.
   * @param value the value to set.
   */
  public void setPossibleNextRepaymentDate(java.lang.String value) {
    this.possibleNextRepaymentDate = value;
  }

  /**
   * Gets the value of the 'loanChargePaidByList' field.
   * @return The value of the 'loanChargePaidByList' field.
   */
  public java.util.List<org.apache.fineract.avro.loan.v1.LoanChargePaidByDataV1> getLoanChargePaidByList() {
    return loanChargePaidByList;
  }


  /**
   * Sets the value of the 'loanChargePaidByList' field.
   * @param value the value to set.
   */
  public void setLoanChargePaidByList(java.util.List<org.apache.fineract.avro.loan.v1.LoanChargePaidByDataV1> value) {
    this.loanChargePaidByList = value;
  }

  /**
   * Gets the value of the 'transactionRelations' field.
   * @return The value of the 'transactionRelations' field.
   */
  public java.util.List<org.apache.fineract.avro.loan.v1.LoanTransactionRelationDataV1> getTransactionRelations() {
    return transactionRelations;
  }


  /**
   * Sets the value of the 'transactionRelations' field.
   * @param value the value to set.
   */
  public void setTransactionRelations(java.util.List<org.apache.fineract.avro.loan.v1.LoanTransactionRelationDataV1> value) {
    this.transactionRelations = value;
  }

  /**
   * Gets the value of the 'unpaidCharges' field.
   * @return Only used for Charge-off transaction
   */
  public java.util.List<org.apache.fineract.avro.loan.v1.UnpaidChargeDataV1> getUnpaidCharges() {
    return unpaidCharges;
  }


  /**
   * Sets the value of the 'unpaidCharges' field.
   * Only used for Charge-off transaction
   * @param value the value to set.
   */
  public void setUnpaidCharges(java.util.List<org.apache.fineract.avro.loan.v1.UnpaidChargeDataV1> value) {
    this.unpaidCharges = value;
  }

  /**
   * Gets the value of the 'reversedOnDate' field.
   * @return The value of the 'reversedOnDate' field.
   */
  public java.lang.String getReversedOnDate() {
    return reversedOnDate;
  }


  /**
   * Sets the value of the 'reversedOnDate' field.
   * @param value the value to set.
   */
  public void setReversedOnDate(java.lang.String value) {
    this.reversedOnDate = value;
  }

  /**
   * Creates a new LoanTransactionDataV1 RecordBuilder.
   * @return A new LoanTransactionDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder newBuilder() {
    return new org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder();
  }

  /**
   * Creates a new LoanTransactionDataV1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LoanTransactionDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder newBuilder(org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder other) {
    if (other == null) {
      return new org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder(other);
    }
  }

  /**
   * Creates a new LoanTransactionDataV1 RecordBuilder by copying an existing LoanTransactionDataV1 instance.
   * @param other The existing instance to copy.
   * @return A new LoanTransactionDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder newBuilder(org.apache.fineract.avro.loan.v1.LoanTransactionDataV1 other) {
    if (other == null) {
      return new org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder(other);
    }
  }

  /**
   * RecordBuilder for LoanTransactionDataV1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LoanTransactionDataV1>
    implements org.apache.avro.data.RecordBuilder<LoanTransactionDataV1> {

    private java.lang.Long id;
    private java.lang.Long loanId;
    private java.lang.String externalLoanId;
    private java.lang.Long officeId;
    private java.lang.String officeName;
    private org.apache.fineract.avro.loan.v1.LoanTransactionEnumDataV1 type;
    private org.apache.fineract.avro.loan.v1.LoanTransactionEnumDataV1.Builder typeBuilder;
    private java.lang.String date;
    private org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency;
    private org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder currencyBuilder;
    private org.apache.fineract.avro.payment.v1.PaymentDetailDataV1 paymentDetailData;
    private org.apache.fineract.avro.payment.v1.PaymentDetailDataV1.Builder paymentDetailDataBuilder;
    private java.math.BigDecimal amount;
    private java.math.BigDecimal netDisbursalAmount;
    private java.math.BigDecimal principalPortion;
    private java.math.BigDecimal interestPortion;
    private java.math.BigDecimal feeChargesPortion;
    private java.math.BigDecimal penaltyChargesPortion;
    private java.math.BigDecimal overpaymentPortion;
    private java.math.BigDecimal unrecognizedIncomePortion;
    private java.lang.String externalId;
    private java.lang.String externalOwnerId;
    private org.apache.fineract.avro.savings.v1.AccountTransferDataV1 transfer;
    private org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder transferBuilder;
    private java.math.BigDecimal fixedEmiAmount;
    private java.math.BigDecimal outstandingLoanBalance;
    private java.lang.String submittedOnDate;
    private java.lang.Boolean manuallyReversed;
    private java.lang.String possibleNextRepaymentDate;
    private java.util.List<org.apache.fineract.avro.loan.v1.LoanChargePaidByDataV1> loanChargePaidByList;
    private java.util.List<org.apache.fineract.avro.loan.v1.LoanTransactionRelationDataV1> transactionRelations;
    /** Only used for Charge-off transaction */
    private java.util.List<org.apache.fineract.avro.loan.v1.UnpaidChargeDataV1> unpaidCharges;
    private java.lang.String reversedOnDate;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.loanId)) {
        this.loanId = data().deepCopy(fields()[1].schema(), other.loanId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.externalLoanId)) {
        this.externalLoanId = data().deepCopy(fields()[2].schema(), other.externalLoanId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.officeId)) {
        this.officeId = data().deepCopy(fields()[3].schema(), other.officeId);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.officeName)) {
        this.officeName = data().deepCopy(fields()[4].schema(), other.officeName);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.type)) {
        this.type = data().deepCopy(fields()[5].schema(), other.type);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (other.hasTypeBuilder()) {
        this.typeBuilder = org.apache.fineract.avro.loan.v1.LoanTransactionEnumDataV1.newBuilder(other.getTypeBuilder());
      }
      if (isValidValue(fields()[6], other.date)) {
        this.date = data().deepCopy(fields()[6].schema(), other.date);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.currency)) {
        this.currency = data().deepCopy(fields()[7].schema(), other.currency);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (other.hasCurrencyBuilder()) {
        this.currencyBuilder = org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder(other.getCurrencyBuilder());
      }
      if (isValidValue(fields()[8], other.paymentDetailData)) {
        this.paymentDetailData = data().deepCopy(fields()[8].schema(), other.paymentDetailData);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (other.hasPaymentDetailDataBuilder()) {
        this.paymentDetailDataBuilder = org.apache.fineract.avro.payment.v1.PaymentDetailDataV1.newBuilder(other.getPaymentDetailDataBuilder());
      }
      if (isValidValue(fields()[9], other.amount)) {
        this.amount = data().deepCopy(fields()[9].schema(), other.amount);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.netDisbursalAmount)) {
        this.netDisbursalAmount = data().deepCopy(fields()[10].schema(), other.netDisbursalAmount);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.principalPortion)) {
        this.principalPortion = data().deepCopy(fields()[11].schema(), other.principalPortion);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.interestPortion)) {
        this.interestPortion = data().deepCopy(fields()[12].schema(), other.interestPortion);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.feeChargesPortion)) {
        this.feeChargesPortion = data().deepCopy(fields()[13].schema(), other.feeChargesPortion);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.penaltyChargesPortion)) {
        this.penaltyChargesPortion = data().deepCopy(fields()[14].schema(), other.penaltyChargesPortion);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.overpaymentPortion)) {
        this.overpaymentPortion = data().deepCopy(fields()[15].schema(), other.overpaymentPortion);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.unrecognizedIncomePortion)) {
        this.unrecognizedIncomePortion = data().deepCopy(fields()[16].schema(), other.unrecognizedIncomePortion);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.externalId)) {
        this.externalId = data().deepCopy(fields()[17].schema(), other.externalId);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.externalOwnerId)) {
        this.externalOwnerId = data().deepCopy(fields()[18].schema(), other.externalOwnerId);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.transfer)) {
        this.transfer = data().deepCopy(fields()[19].schema(), other.transfer);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (other.hasTransferBuilder()) {
        this.transferBuilder = org.apache.fineract.avro.savings.v1.AccountTransferDataV1.newBuilder(other.getTransferBuilder());
      }
      if (isValidValue(fields()[20], other.fixedEmiAmount)) {
        this.fixedEmiAmount = data().deepCopy(fields()[20].schema(), other.fixedEmiAmount);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.outstandingLoanBalance)) {
        this.outstandingLoanBalance = data().deepCopy(fields()[21].schema(), other.outstandingLoanBalance);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.submittedOnDate)) {
        this.submittedOnDate = data().deepCopy(fields()[22].schema(), other.submittedOnDate);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.manuallyReversed)) {
        this.manuallyReversed = data().deepCopy(fields()[23].schema(), other.manuallyReversed);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.possibleNextRepaymentDate)) {
        this.possibleNextRepaymentDate = data().deepCopy(fields()[24].schema(), other.possibleNextRepaymentDate);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
      if (isValidValue(fields()[25], other.loanChargePaidByList)) {
        this.loanChargePaidByList = data().deepCopy(fields()[25].schema(), other.loanChargePaidByList);
        fieldSetFlags()[25] = other.fieldSetFlags()[25];
      }
      if (isValidValue(fields()[26], other.transactionRelations)) {
        this.transactionRelations = data().deepCopy(fields()[26].schema(), other.transactionRelations);
        fieldSetFlags()[26] = other.fieldSetFlags()[26];
      }
      if (isValidValue(fields()[27], other.unpaidCharges)) {
        this.unpaidCharges = data().deepCopy(fields()[27].schema(), other.unpaidCharges);
        fieldSetFlags()[27] = other.fieldSetFlags()[27];
      }
      if (isValidValue(fields()[28], other.reversedOnDate)) {
        this.reversedOnDate = data().deepCopy(fields()[28].schema(), other.reversedOnDate);
        fieldSetFlags()[28] = other.fieldSetFlags()[28];
      }
    }

    /**
     * Creates a Builder by copying an existing LoanTransactionDataV1 instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.fineract.avro.loan.v1.LoanTransactionDataV1 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.loanId)) {
        this.loanId = data().deepCopy(fields()[1].schema(), other.loanId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.externalLoanId)) {
        this.externalLoanId = data().deepCopy(fields()[2].schema(), other.externalLoanId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.officeId)) {
        this.officeId = data().deepCopy(fields()[3].schema(), other.officeId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.officeName)) {
        this.officeName = data().deepCopy(fields()[4].schema(), other.officeName);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.type)) {
        this.type = data().deepCopy(fields()[5].schema(), other.type);
        fieldSetFlags()[5] = true;
      }
      this.typeBuilder = null;
      if (isValidValue(fields()[6], other.date)) {
        this.date = data().deepCopy(fields()[6].schema(), other.date);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.currency)) {
        this.currency = data().deepCopy(fields()[7].schema(), other.currency);
        fieldSetFlags()[7] = true;
      }
      this.currencyBuilder = null;
      if (isValidValue(fields()[8], other.paymentDetailData)) {
        this.paymentDetailData = data().deepCopy(fields()[8].schema(), other.paymentDetailData);
        fieldSetFlags()[8] = true;
      }
      this.paymentDetailDataBuilder = null;
      if (isValidValue(fields()[9], other.amount)) {
        this.amount = data().deepCopy(fields()[9].schema(), other.amount);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.netDisbursalAmount)) {
        this.netDisbursalAmount = data().deepCopy(fields()[10].schema(), other.netDisbursalAmount);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.principalPortion)) {
        this.principalPortion = data().deepCopy(fields()[11].schema(), other.principalPortion);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.interestPortion)) {
        this.interestPortion = data().deepCopy(fields()[12].schema(), other.interestPortion);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.feeChargesPortion)) {
        this.feeChargesPortion = data().deepCopy(fields()[13].schema(), other.feeChargesPortion);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.penaltyChargesPortion)) {
        this.penaltyChargesPortion = data().deepCopy(fields()[14].schema(), other.penaltyChargesPortion);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.overpaymentPortion)) {
        this.overpaymentPortion = data().deepCopy(fields()[15].schema(), other.overpaymentPortion);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.unrecognizedIncomePortion)) {
        this.unrecognizedIncomePortion = data().deepCopy(fields()[16].schema(), other.unrecognizedIncomePortion);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.externalId)) {
        this.externalId = data().deepCopy(fields()[17].schema(), other.externalId);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.externalOwnerId)) {
        this.externalOwnerId = data().deepCopy(fields()[18].schema(), other.externalOwnerId);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.transfer)) {
        this.transfer = data().deepCopy(fields()[19].schema(), other.transfer);
        fieldSetFlags()[19] = true;
      }
      this.transferBuilder = null;
      if (isValidValue(fields()[20], other.fixedEmiAmount)) {
        this.fixedEmiAmount = data().deepCopy(fields()[20].schema(), other.fixedEmiAmount);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.outstandingLoanBalance)) {
        this.outstandingLoanBalance = data().deepCopy(fields()[21].schema(), other.outstandingLoanBalance);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.submittedOnDate)) {
        this.submittedOnDate = data().deepCopy(fields()[22].schema(), other.submittedOnDate);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.manuallyReversed)) {
        this.manuallyReversed = data().deepCopy(fields()[23].schema(), other.manuallyReversed);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.possibleNextRepaymentDate)) {
        this.possibleNextRepaymentDate = data().deepCopy(fields()[24].schema(), other.possibleNextRepaymentDate);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.loanChargePaidByList)) {
        this.loanChargePaidByList = data().deepCopy(fields()[25].schema(), other.loanChargePaidByList);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.transactionRelations)) {
        this.transactionRelations = data().deepCopy(fields()[26].schema(), other.transactionRelations);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.unpaidCharges)) {
        this.unpaidCharges = data().deepCopy(fields()[27].schema(), other.unpaidCharges);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.reversedOnDate)) {
        this.reversedOnDate = data().deepCopy(fields()[28].schema(), other.reversedOnDate);
        fieldSetFlags()[28] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setId(java.lang.Long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'loanId' field.
      * @return The value.
      */
    public java.lang.Long getLoanId() {
      return loanId;
    }


    /**
      * Sets the value of the 'loanId' field.
      * @param value The value of 'loanId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setLoanId(java.lang.Long value) {
      validate(fields()[1], value);
      this.loanId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'loanId' field has been set.
      * @return True if the 'loanId' field has been set, false otherwise.
      */
    public boolean hasLoanId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'loanId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearLoanId() {
      loanId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'externalLoanId' field.
      * @return The value.
      */
    public java.lang.String getExternalLoanId() {
      return externalLoanId;
    }


    /**
      * Sets the value of the 'externalLoanId' field.
      * @param value The value of 'externalLoanId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setExternalLoanId(java.lang.String value) {
      validate(fields()[2], value);
      this.externalLoanId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'externalLoanId' field has been set.
      * @return True if the 'externalLoanId' field has been set, false otherwise.
      */
    public boolean hasExternalLoanId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'externalLoanId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearExternalLoanId() {
      externalLoanId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'officeId' field.
      * @return The value.
      */
    public java.lang.Long getOfficeId() {
      return officeId;
    }


    /**
      * Sets the value of the 'officeId' field.
      * @param value The value of 'officeId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setOfficeId(java.lang.Long value) {
      validate(fields()[3], value);
      this.officeId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'officeId' field has been set.
      * @return True if the 'officeId' field has been set, false otherwise.
      */
    public boolean hasOfficeId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'officeId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearOfficeId() {
      officeId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'officeName' field.
      * @return The value.
      */
    public java.lang.String getOfficeName() {
      return officeName;
    }


    /**
      * Sets the value of the 'officeName' field.
      * @param value The value of 'officeName'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setOfficeName(java.lang.String value) {
      validate(fields()[4], value);
      this.officeName = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'officeName' field has been set.
      * @return True if the 'officeName' field has been set, false otherwise.
      */
    public boolean hasOfficeName() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'officeName' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearOfficeName() {
      officeName = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionEnumDataV1 getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setType(org.apache.fineract.avro.loan.v1.LoanTransactionEnumDataV1 value) {
      validate(fields()[5], value);
      this.typeBuilder = null;
      this.type = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'type' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.loan.v1.LoanTransactionEnumDataV1.Builder getTypeBuilder() {
      if (typeBuilder == null) {
        if (hasType()) {
          setTypeBuilder(org.apache.fineract.avro.loan.v1.LoanTransactionEnumDataV1.newBuilder(type));
        } else {
          setTypeBuilder(org.apache.fineract.avro.loan.v1.LoanTransactionEnumDataV1.newBuilder());
        }
      }
      return typeBuilder;
    }

    /**
     * Sets the Builder instance for the 'type' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setTypeBuilder(org.apache.fineract.avro.loan.v1.LoanTransactionEnumDataV1.Builder value) {
      clearType();
      typeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'type' field has an active Builder instance
     * @return True if the 'type' field has an active Builder instance
     */
    public boolean hasTypeBuilder() {
      return typeBuilder != null;
    }

    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearType() {
      type = null;
      typeBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'date' field.
      * @return The value.
      */
    public java.lang.String getDate() {
      return date;
    }


    /**
      * Sets the value of the 'date' field.
      * @param value The value of 'date'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setDate(java.lang.String value) {
      validate(fields()[6], value);
      this.date = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'date' field has been set.
      * @return True if the 'date' field has been set, false otherwise.
      */
    public boolean hasDate() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'date' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearDate() {
      date = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'currency' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.CurrencyDataV1 getCurrency() {
      return currency;
    }


    /**
      * Sets the value of the 'currency' field.
      * @param value The value of 'currency'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setCurrency(org.apache.fineract.avro.generic.v1.CurrencyDataV1 value) {
      validate(fields()[7], value);
      this.currencyBuilder = null;
      this.currency = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'currency' field has been set.
      * @return True if the 'currency' field has been set, false otherwise.
      */
    public boolean hasCurrency() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'currency' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder getCurrencyBuilder() {
      if (currencyBuilder == null) {
        if (hasCurrency()) {
          setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder(currency));
        } else {
          setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder());
        }
      }
      return currencyBuilder;
    }

    /**
     * Sets the Builder instance for the 'currency' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder value) {
      clearCurrency();
      currencyBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'currency' field has an active Builder instance
     * @return True if the 'currency' field has an active Builder instance
     */
    public boolean hasCurrencyBuilder() {
      return currencyBuilder != null;
    }

    /**
      * Clears the value of the 'currency' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearCurrency() {
      currency = null;
      currencyBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'paymentDetailData' field.
      * @return The value.
      */
    public org.apache.fineract.avro.payment.v1.PaymentDetailDataV1 getPaymentDetailData() {
      return paymentDetailData;
    }


    /**
      * Sets the value of the 'paymentDetailData' field.
      * @param value The value of 'paymentDetailData'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setPaymentDetailData(org.apache.fineract.avro.payment.v1.PaymentDetailDataV1 value) {
      validate(fields()[8], value);
      this.paymentDetailDataBuilder = null;
      this.paymentDetailData = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'paymentDetailData' field has been set.
      * @return True if the 'paymentDetailData' field has been set, false otherwise.
      */
    public boolean hasPaymentDetailData() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'paymentDetailData' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.payment.v1.PaymentDetailDataV1.Builder getPaymentDetailDataBuilder() {
      if (paymentDetailDataBuilder == null) {
        if (hasPaymentDetailData()) {
          setPaymentDetailDataBuilder(org.apache.fineract.avro.payment.v1.PaymentDetailDataV1.newBuilder(paymentDetailData));
        } else {
          setPaymentDetailDataBuilder(org.apache.fineract.avro.payment.v1.PaymentDetailDataV1.newBuilder());
        }
      }
      return paymentDetailDataBuilder;
    }

    /**
     * Sets the Builder instance for the 'paymentDetailData' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setPaymentDetailDataBuilder(org.apache.fineract.avro.payment.v1.PaymentDetailDataV1.Builder value) {
      clearPaymentDetailData();
      paymentDetailDataBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'paymentDetailData' field has an active Builder instance
     * @return True if the 'paymentDetailData' field has an active Builder instance
     */
    public boolean hasPaymentDetailDataBuilder() {
      return paymentDetailDataBuilder != null;
    }

    /**
      * Clears the value of the 'paymentDetailData' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearPaymentDetailData() {
      paymentDetailData = null;
      paymentDetailDataBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'amount' field.
      * @return The value.
      */
    public java.math.BigDecimal getAmount() {
      return amount;
    }


    /**
      * Sets the value of the 'amount' field.
      * @param value The value of 'amount'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setAmount(java.math.BigDecimal value) {
      validate(fields()[9], value);
      this.amount = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'amount' field has been set.
      * @return True if the 'amount' field has been set, false otherwise.
      */
    public boolean hasAmount() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'amount' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearAmount() {
      amount = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'netDisbursalAmount' field.
      * @return The value.
      */
    public java.math.BigDecimal getNetDisbursalAmount() {
      return netDisbursalAmount;
    }


    /**
      * Sets the value of the 'netDisbursalAmount' field.
      * @param value The value of 'netDisbursalAmount'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setNetDisbursalAmount(java.math.BigDecimal value) {
      validate(fields()[10], value);
      this.netDisbursalAmount = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'netDisbursalAmount' field has been set.
      * @return True if the 'netDisbursalAmount' field has been set, false otherwise.
      */
    public boolean hasNetDisbursalAmount() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'netDisbursalAmount' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearNetDisbursalAmount() {
      netDisbursalAmount = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'principalPortion' field.
      * @return The value.
      */
    public java.math.BigDecimal getPrincipalPortion() {
      return principalPortion;
    }


    /**
      * Sets the value of the 'principalPortion' field.
      * @param value The value of 'principalPortion'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setPrincipalPortion(java.math.BigDecimal value) {
      validate(fields()[11], value);
      this.principalPortion = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'principalPortion' field has been set.
      * @return True if the 'principalPortion' field has been set, false otherwise.
      */
    public boolean hasPrincipalPortion() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'principalPortion' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearPrincipalPortion() {
      principalPortion = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'interestPortion' field.
      * @return The value.
      */
    public java.math.BigDecimal getInterestPortion() {
      return interestPortion;
    }


    /**
      * Sets the value of the 'interestPortion' field.
      * @param value The value of 'interestPortion'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setInterestPortion(java.math.BigDecimal value) {
      validate(fields()[12], value);
      this.interestPortion = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'interestPortion' field has been set.
      * @return True if the 'interestPortion' field has been set, false otherwise.
      */
    public boolean hasInterestPortion() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'interestPortion' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearInterestPortion() {
      interestPortion = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'feeChargesPortion' field.
      * @return The value.
      */
    public java.math.BigDecimal getFeeChargesPortion() {
      return feeChargesPortion;
    }


    /**
      * Sets the value of the 'feeChargesPortion' field.
      * @param value The value of 'feeChargesPortion'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setFeeChargesPortion(java.math.BigDecimal value) {
      validate(fields()[13], value);
      this.feeChargesPortion = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'feeChargesPortion' field has been set.
      * @return True if the 'feeChargesPortion' field has been set, false otherwise.
      */
    public boolean hasFeeChargesPortion() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'feeChargesPortion' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearFeeChargesPortion() {
      feeChargesPortion = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'penaltyChargesPortion' field.
      * @return The value.
      */
    public java.math.BigDecimal getPenaltyChargesPortion() {
      return penaltyChargesPortion;
    }


    /**
      * Sets the value of the 'penaltyChargesPortion' field.
      * @param value The value of 'penaltyChargesPortion'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setPenaltyChargesPortion(java.math.BigDecimal value) {
      validate(fields()[14], value);
      this.penaltyChargesPortion = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'penaltyChargesPortion' field has been set.
      * @return True if the 'penaltyChargesPortion' field has been set, false otherwise.
      */
    public boolean hasPenaltyChargesPortion() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'penaltyChargesPortion' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearPenaltyChargesPortion() {
      penaltyChargesPortion = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'overpaymentPortion' field.
      * @return The value.
      */
    public java.math.BigDecimal getOverpaymentPortion() {
      return overpaymentPortion;
    }


    /**
      * Sets the value of the 'overpaymentPortion' field.
      * @param value The value of 'overpaymentPortion'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setOverpaymentPortion(java.math.BigDecimal value) {
      validate(fields()[15], value);
      this.overpaymentPortion = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'overpaymentPortion' field has been set.
      * @return True if the 'overpaymentPortion' field has been set, false otherwise.
      */
    public boolean hasOverpaymentPortion() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'overpaymentPortion' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearOverpaymentPortion() {
      overpaymentPortion = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'unrecognizedIncomePortion' field.
      * @return The value.
      */
    public java.math.BigDecimal getUnrecognizedIncomePortion() {
      return unrecognizedIncomePortion;
    }


    /**
      * Sets the value of the 'unrecognizedIncomePortion' field.
      * @param value The value of 'unrecognizedIncomePortion'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setUnrecognizedIncomePortion(java.math.BigDecimal value) {
      validate(fields()[16], value);
      this.unrecognizedIncomePortion = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'unrecognizedIncomePortion' field has been set.
      * @return True if the 'unrecognizedIncomePortion' field has been set, false otherwise.
      */
    public boolean hasUnrecognizedIncomePortion() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'unrecognizedIncomePortion' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearUnrecognizedIncomePortion() {
      unrecognizedIncomePortion = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'externalId' field.
      * @return The value.
      */
    public java.lang.String getExternalId() {
      return externalId;
    }


    /**
      * Sets the value of the 'externalId' field.
      * @param value The value of 'externalId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setExternalId(java.lang.String value) {
      validate(fields()[17], value);
      this.externalId = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'externalId' field has been set.
      * @return True if the 'externalId' field has been set, false otherwise.
      */
    public boolean hasExternalId() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'externalId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearExternalId() {
      externalId = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'externalOwnerId' field.
      * @return The value.
      */
    public java.lang.String getExternalOwnerId() {
      return externalOwnerId;
    }


    /**
      * Sets the value of the 'externalOwnerId' field.
      * @param value The value of 'externalOwnerId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setExternalOwnerId(java.lang.String value) {
      validate(fields()[18], value);
      this.externalOwnerId = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'externalOwnerId' field has been set.
      * @return True if the 'externalOwnerId' field has been set, false otherwise.
      */
    public boolean hasExternalOwnerId() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'externalOwnerId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearExternalOwnerId() {
      externalOwnerId = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'transfer' field.
      * @return The value.
      */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1 getTransfer() {
      return transfer;
    }


    /**
      * Sets the value of the 'transfer' field.
      * @param value The value of 'transfer'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setTransfer(org.apache.fineract.avro.savings.v1.AccountTransferDataV1 value) {
      validate(fields()[19], value);
      this.transferBuilder = null;
      this.transfer = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'transfer' field has been set.
      * @return True if the 'transfer' field has been set, false otherwise.
      */
    public boolean hasTransfer() {
      return fieldSetFlags()[19];
    }

    /**
     * Gets the Builder instance for the 'transfer' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder getTransferBuilder() {
      if (transferBuilder == null) {
        if (hasTransfer()) {
          setTransferBuilder(org.apache.fineract.avro.savings.v1.AccountTransferDataV1.newBuilder(transfer));
        } else {
          setTransferBuilder(org.apache.fineract.avro.savings.v1.AccountTransferDataV1.newBuilder());
        }
      }
      return transferBuilder;
    }

    /**
     * Sets the Builder instance for the 'transfer' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setTransferBuilder(org.apache.fineract.avro.savings.v1.AccountTransferDataV1.Builder value) {
      clearTransfer();
      transferBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'transfer' field has an active Builder instance
     * @return True if the 'transfer' field has an active Builder instance
     */
    public boolean hasTransferBuilder() {
      return transferBuilder != null;
    }

    /**
      * Clears the value of the 'transfer' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearTransfer() {
      transfer = null;
      transferBuilder = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'fixedEmiAmount' field.
      * @return The value.
      */
    public java.math.BigDecimal getFixedEmiAmount() {
      return fixedEmiAmount;
    }


    /**
      * Sets the value of the 'fixedEmiAmount' field.
      * @param value The value of 'fixedEmiAmount'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setFixedEmiAmount(java.math.BigDecimal value) {
      validate(fields()[20], value);
      this.fixedEmiAmount = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'fixedEmiAmount' field has been set.
      * @return True if the 'fixedEmiAmount' field has been set, false otherwise.
      */
    public boolean hasFixedEmiAmount() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'fixedEmiAmount' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearFixedEmiAmount() {
      fixedEmiAmount = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'outstandingLoanBalance' field.
      * @return The value.
      */
    public java.math.BigDecimal getOutstandingLoanBalance() {
      return outstandingLoanBalance;
    }


    /**
      * Sets the value of the 'outstandingLoanBalance' field.
      * @param value The value of 'outstandingLoanBalance'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setOutstandingLoanBalance(java.math.BigDecimal value) {
      validate(fields()[21], value);
      this.outstandingLoanBalance = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'outstandingLoanBalance' field has been set.
      * @return True if the 'outstandingLoanBalance' field has been set, false otherwise.
      */
    public boolean hasOutstandingLoanBalance() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'outstandingLoanBalance' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearOutstandingLoanBalance() {
      outstandingLoanBalance = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'submittedOnDate' field.
      * @return The value.
      */
    public java.lang.String getSubmittedOnDate() {
      return submittedOnDate;
    }


    /**
      * Sets the value of the 'submittedOnDate' field.
      * @param value The value of 'submittedOnDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setSubmittedOnDate(java.lang.String value) {
      validate(fields()[22], value);
      this.submittedOnDate = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'submittedOnDate' field has been set.
      * @return True if the 'submittedOnDate' field has been set, false otherwise.
      */
    public boolean hasSubmittedOnDate() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'submittedOnDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearSubmittedOnDate() {
      submittedOnDate = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'manuallyReversed' field.
      * @return The value.
      */
    public java.lang.Boolean getManuallyReversed() {
      return manuallyReversed;
    }


    /**
      * Sets the value of the 'manuallyReversed' field.
      * @param value The value of 'manuallyReversed'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setManuallyReversed(java.lang.Boolean value) {
      validate(fields()[23], value);
      this.manuallyReversed = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'manuallyReversed' field has been set.
      * @return True if the 'manuallyReversed' field has been set, false otherwise.
      */
    public boolean hasManuallyReversed() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'manuallyReversed' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearManuallyReversed() {
      manuallyReversed = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'possibleNextRepaymentDate' field.
      * @return The value.
      */
    public java.lang.String getPossibleNextRepaymentDate() {
      return possibleNextRepaymentDate;
    }


    /**
      * Sets the value of the 'possibleNextRepaymentDate' field.
      * @param value The value of 'possibleNextRepaymentDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setPossibleNextRepaymentDate(java.lang.String value) {
      validate(fields()[24], value);
      this.possibleNextRepaymentDate = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'possibleNextRepaymentDate' field has been set.
      * @return True if the 'possibleNextRepaymentDate' field has been set, false otherwise.
      */
    public boolean hasPossibleNextRepaymentDate() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'possibleNextRepaymentDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearPossibleNextRepaymentDate() {
      possibleNextRepaymentDate = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'loanChargePaidByList' field.
      * @return The value.
      */
    public java.util.List<org.apache.fineract.avro.loan.v1.LoanChargePaidByDataV1> getLoanChargePaidByList() {
      return loanChargePaidByList;
    }


    /**
      * Sets the value of the 'loanChargePaidByList' field.
      * @param value The value of 'loanChargePaidByList'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setLoanChargePaidByList(java.util.List<org.apache.fineract.avro.loan.v1.LoanChargePaidByDataV1> value) {
      validate(fields()[25], value);
      this.loanChargePaidByList = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'loanChargePaidByList' field has been set.
      * @return True if the 'loanChargePaidByList' field has been set, false otherwise.
      */
    public boolean hasLoanChargePaidByList() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'loanChargePaidByList' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearLoanChargePaidByList() {
      loanChargePaidByList = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'transactionRelations' field.
      * @return The value.
      */
    public java.util.List<org.apache.fineract.avro.loan.v1.LoanTransactionRelationDataV1> getTransactionRelations() {
      return transactionRelations;
    }


    /**
      * Sets the value of the 'transactionRelations' field.
      * @param value The value of 'transactionRelations'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setTransactionRelations(java.util.List<org.apache.fineract.avro.loan.v1.LoanTransactionRelationDataV1> value) {
      validate(fields()[26], value);
      this.transactionRelations = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'transactionRelations' field has been set.
      * @return True if the 'transactionRelations' field has been set, false otherwise.
      */
    public boolean hasTransactionRelations() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'transactionRelations' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearTransactionRelations() {
      transactionRelations = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'unpaidCharges' field.
      * Only used for Charge-off transaction
      * @return The value.
      */
    public java.util.List<org.apache.fineract.avro.loan.v1.UnpaidChargeDataV1> getUnpaidCharges() {
      return unpaidCharges;
    }


    /**
      * Sets the value of the 'unpaidCharges' field.
      * Only used for Charge-off transaction
      * @param value The value of 'unpaidCharges'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setUnpaidCharges(java.util.List<org.apache.fineract.avro.loan.v1.UnpaidChargeDataV1> value) {
      validate(fields()[27], value);
      this.unpaidCharges = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'unpaidCharges' field has been set.
      * Only used for Charge-off transaction
      * @return True if the 'unpaidCharges' field has been set, false otherwise.
      */
    public boolean hasUnpaidCharges() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'unpaidCharges' field.
      * Only used for Charge-off transaction
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearUnpaidCharges() {
      unpaidCharges = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'reversedOnDate' field.
      * @return The value.
      */
    public java.lang.String getReversedOnDate() {
      return reversedOnDate;
    }


    /**
      * Sets the value of the 'reversedOnDate' field.
      * @param value The value of 'reversedOnDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder setReversedOnDate(java.lang.String value) {
      validate(fields()[28], value);
      this.reversedOnDate = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'reversedOnDate' field has been set.
      * @return True if the 'reversedOnDate' field has been set, false otherwise.
      */
    public boolean hasReversedOnDate() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'reversedOnDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanTransactionDataV1.Builder clearReversedOnDate() {
      reversedOnDate = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public LoanTransactionDataV1 build() {
      try {
        LoanTransactionDataV1 record = new LoanTransactionDataV1();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.loanId = fieldSetFlags()[1] ? this.loanId : (java.lang.Long) defaultValue(fields()[1]);
        record.externalLoanId = fieldSetFlags()[2] ? this.externalLoanId : (java.lang.String) defaultValue(fields()[2]);
        record.officeId = fieldSetFlags()[3] ? this.officeId : (java.lang.Long) defaultValue(fields()[3]);
        record.officeName = fieldSetFlags()[4] ? this.officeName : (java.lang.String) defaultValue(fields()[4]);
        if (typeBuilder != null) {
          try {
            record.type = this.typeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("type"));
            throw e;
          }
        } else {
          record.type = fieldSetFlags()[5] ? this.type : (org.apache.fineract.avro.loan.v1.LoanTransactionEnumDataV1) defaultValue(fields()[5]);
        }
        record.date = fieldSetFlags()[6] ? this.date : (java.lang.String) defaultValue(fields()[6]);
        if (currencyBuilder != null) {
          try {
            record.currency = this.currencyBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("currency"));
            throw e;
          }
        } else {
          record.currency = fieldSetFlags()[7] ? this.currency : (org.apache.fineract.avro.generic.v1.CurrencyDataV1) defaultValue(fields()[7]);
        }
        if (paymentDetailDataBuilder != null) {
          try {
            record.paymentDetailData = this.paymentDetailDataBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("paymentDetailData"));
            throw e;
          }
        } else {
          record.paymentDetailData = fieldSetFlags()[8] ? this.paymentDetailData : (org.apache.fineract.avro.payment.v1.PaymentDetailDataV1) defaultValue(fields()[8]);
        }
        record.amount = fieldSetFlags()[9] ? this.amount : (java.math.BigDecimal) defaultValue(fields()[9]);
        record.netDisbursalAmount = fieldSetFlags()[10] ? this.netDisbursalAmount : (java.math.BigDecimal) defaultValue(fields()[10]);
        record.principalPortion = fieldSetFlags()[11] ? this.principalPortion : (java.math.BigDecimal) defaultValue(fields()[11]);
        record.interestPortion = fieldSetFlags()[12] ? this.interestPortion : (java.math.BigDecimal) defaultValue(fields()[12]);
        record.feeChargesPortion = fieldSetFlags()[13] ? this.feeChargesPortion : (java.math.BigDecimal) defaultValue(fields()[13]);
        record.penaltyChargesPortion = fieldSetFlags()[14] ? this.penaltyChargesPortion : (java.math.BigDecimal) defaultValue(fields()[14]);
        record.overpaymentPortion = fieldSetFlags()[15] ? this.overpaymentPortion : (java.math.BigDecimal) defaultValue(fields()[15]);
        record.unrecognizedIncomePortion = fieldSetFlags()[16] ? this.unrecognizedIncomePortion : (java.math.BigDecimal) defaultValue(fields()[16]);
        record.externalId = fieldSetFlags()[17] ? this.externalId : (java.lang.String) defaultValue(fields()[17]);
        record.externalOwnerId = fieldSetFlags()[18] ? this.externalOwnerId : (java.lang.String) defaultValue(fields()[18]);
        if (transferBuilder != null) {
          try {
            record.transfer = this.transferBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("transfer"));
            throw e;
          }
        } else {
          record.transfer = fieldSetFlags()[19] ? this.transfer : (org.apache.fineract.avro.savings.v1.AccountTransferDataV1) defaultValue(fields()[19]);
        }
        record.fixedEmiAmount = fieldSetFlags()[20] ? this.fixedEmiAmount : (java.math.BigDecimal) defaultValue(fields()[20]);
        record.outstandingLoanBalance = fieldSetFlags()[21] ? this.outstandingLoanBalance : (java.math.BigDecimal) defaultValue(fields()[21]);
        record.submittedOnDate = fieldSetFlags()[22] ? this.submittedOnDate : (java.lang.String) defaultValue(fields()[22]);
        record.manuallyReversed = fieldSetFlags()[23] ? this.manuallyReversed : (java.lang.Boolean) defaultValue(fields()[23]);
        record.possibleNextRepaymentDate = fieldSetFlags()[24] ? this.possibleNextRepaymentDate : (java.lang.String) defaultValue(fields()[24]);
        record.loanChargePaidByList = fieldSetFlags()[25] ? this.loanChargePaidByList : (java.util.List<org.apache.fineract.avro.loan.v1.LoanChargePaidByDataV1>) defaultValue(fields()[25]);
        record.transactionRelations = fieldSetFlags()[26] ? this.transactionRelations : (java.util.List<org.apache.fineract.avro.loan.v1.LoanTransactionRelationDataV1>) defaultValue(fields()[26]);
        record.unpaidCharges = fieldSetFlags()[27] ? this.unpaidCharges : (java.util.List<org.apache.fineract.avro.loan.v1.UnpaidChargeDataV1>) defaultValue(fields()[27]);
        record.reversedOnDate = fieldSetFlags()[28] ? this.reversedOnDate : (java.lang.String) defaultValue(fields()[28]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<LoanTransactionDataV1>
    WRITER$ = (org.apache.avro.io.DatumWriter<LoanTransactionDataV1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<LoanTransactionDataV1>
    READER$ = (org.apache.avro.io.DatumReader<LoanTransactionDataV1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










