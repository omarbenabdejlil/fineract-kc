/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

package org.apache.fineract.avro.loan.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class LoanScheduleDataV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, org.apache.fineract.avro.generator.ByteBufferSerializable {
  private static final long serialVersionUID = -3648993801427576328L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LoanScheduleDataV1\",\"namespace\":\"org.apache.fineract.avro.loan.v1\",\"fields\":[{\"name\":\"currency\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CurrencyDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"decimalPlaces\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"inMultiplesOf\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"displaySymbol\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nameCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"displayLabel\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"loanTermInDays\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"totalPrincipalDisbursed\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalPrincipalExpected\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalPrincipalPaid\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalInterestCharged\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalFeeChargesCharged\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalPenaltyChargesCharged\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalWaived\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalWrittenOff\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalRepaymentExpected\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalRepayment\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalPaidInAdvance\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalPaidLate\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalOutstanding\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"periods\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"LoanSchedulePeriodDataV1\",\"fields\":[{\"name\":\"period\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"fromDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"dueDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"obligationsMetOnDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"complete\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"daysInPeriod\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"principalDisbursed\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"principalOriginalDue\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"principalDue\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"principalPaid\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"principalWrittenOff\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"principalOutstanding\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"principalLoanBalanceOutstanding\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"interestOriginalDue\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"interestDue\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"interestPaid\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"interestWaived\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"interestWrittenOff\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"interestOutstanding\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"feeChargesDue\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"feeChargesPaid\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"feeChargesWaived\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"feeChargesWrittenOff\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"feeChargesOutstanding\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"penaltyChargesDue\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"penaltyChargesPaid\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"penaltyChargesWaived\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"penaltyChargesWrittenOff\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"penaltyChargesOutstanding\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalOriginalDueForPeriod\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalDueForPeriod\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalPaidForPeriod\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalPaidInAdvanceForPeriod\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalPaidLateForPeriod\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalWaivedForPeriod\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalWrittenOffForPeriod\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalOutstandingForPeriod\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalOverdue\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalActualCostOfLoanForPeriod\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalInstallmentAmountForPeriod\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"totalCredits\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"downPaymentPeriod\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}}],\"default\":null},{\"name\":\"futurePeriods\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"LoanSchedulePeriodDataV1\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<LoanScheduleDataV1> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<LoanScheduleDataV1> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<LoanScheduleDataV1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<LoanScheduleDataV1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<LoanScheduleDataV1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this LoanScheduleDataV1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  @Override
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a LoanScheduleDataV1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a LoanScheduleDataV1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static LoanScheduleDataV1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency;
  private java.lang.Integer loanTermInDays;
  private java.math.BigDecimal totalPrincipalDisbursed;
  private java.math.BigDecimal totalPrincipalExpected;
  private java.math.BigDecimal totalPrincipalPaid;
  private java.math.BigDecimal totalInterestCharged;
  private java.math.BigDecimal totalFeeChargesCharged;
  private java.math.BigDecimal totalPenaltyChargesCharged;
  private java.math.BigDecimal totalWaived;
  private java.math.BigDecimal totalWrittenOff;
  private java.math.BigDecimal totalRepaymentExpected;
  private java.math.BigDecimal totalRepayment;
  private java.math.BigDecimal totalPaidInAdvance;
  private java.math.BigDecimal totalPaidLate;
  private java.math.BigDecimal totalOutstanding;
  private java.util.List<org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1> periods;
  private java.util.List<org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1> futurePeriods;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LoanScheduleDataV1() {}

  /**
   * All-args constructor.
   * @param currency The new value for currency
   * @param loanTermInDays The new value for loanTermInDays
   * @param totalPrincipalDisbursed The new value for totalPrincipalDisbursed
   * @param totalPrincipalExpected The new value for totalPrincipalExpected
   * @param totalPrincipalPaid The new value for totalPrincipalPaid
   * @param totalInterestCharged The new value for totalInterestCharged
   * @param totalFeeChargesCharged The new value for totalFeeChargesCharged
   * @param totalPenaltyChargesCharged The new value for totalPenaltyChargesCharged
   * @param totalWaived The new value for totalWaived
   * @param totalWrittenOff The new value for totalWrittenOff
   * @param totalRepaymentExpected The new value for totalRepaymentExpected
   * @param totalRepayment The new value for totalRepayment
   * @param totalPaidInAdvance The new value for totalPaidInAdvance
   * @param totalPaidLate The new value for totalPaidLate
   * @param totalOutstanding The new value for totalOutstanding
   * @param periods The new value for periods
   * @param futurePeriods The new value for futurePeriods
   */
  public LoanScheduleDataV1(org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency, java.lang.Integer loanTermInDays, java.math.BigDecimal totalPrincipalDisbursed, java.math.BigDecimal totalPrincipalExpected, java.math.BigDecimal totalPrincipalPaid, java.math.BigDecimal totalInterestCharged, java.math.BigDecimal totalFeeChargesCharged, java.math.BigDecimal totalPenaltyChargesCharged, java.math.BigDecimal totalWaived, java.math.BigDecimal totalWrittenOff, java.math.BigDecimal totalRepaymentExpected, java.math.BigDecimal totalRepayment, java.math.BigDecimal totalPaidInAdvance, java.math.BigDecimal totalPaidLate, java.math.BigDecimal totalOutstanding, java.util.List<org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1> periods, java.util.List<org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1> futurePeriods) {
    this.currency = currency;
    this.loanTermInDays = loanTermInDays;
    this.totalPrincipalDisbursed = totalPrincipalDisbursed;
    this.totalPrincipalExpected = totalPrincipalExpected;
    this.totalPrincipalPaid = totalPrincipalPaid;
    this.totalInterestCharged = totalInterestCharged;
    this.totalFeeChargesCharged = totalFeeChargesCharged;
    this.totalPenaltyChargesCharged = totalPenaltyChargesCharged;
    this.totalWaived = totalWaived;
    this.totalWrittenOff = totalWrittenOff;
    this.totalRepaymentExpected = totalRepaymentExpected;
    this.totalRepayment = totalRepayment;
    this.totalPaidInAdvance = totalPaidInAdvance;
    this.totalPaidLate = totalPaidLate;
    this.totalOutstanding = totalOutstanding;
    this.periods = periods;
    this.futurePeriods = futurePeriods;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return currency;
    case 1: return loanTermInDays;
    case 2: return totalPrincipalDisbursed;
    case 3: return totalPrincipalExpected;
    case 4: return totalPrincipalPaid;
    case 5: return totalInterestCharged;
    case 6: return totalFeeChargesCharged;
    case 7: return totalPenaltyChargesCharged;
    case 8: return totalWaived;
    case 9: return totalWrittenOff;
    case 10: return totalRepaymentExpected;
    case 11: return totalRepayment;
    case 12: return totalPaidInAdvance;
    case 13: return totalPaidLate;
    case 14: return totalOutstanding;
    case 15: return periods;
    case 16: return futurePeriods;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: currency = (org.apache.fineract.avro.generic.v1.CurrencyDataV1)value$; break;
    case 1: loanTermInDays = (java.lang.Integer)value$; break;
    case 2: totalPrincipalDisbursed = (java.math.BigDecimal)value$; break;
    case 3: totalPrincipalExpected = (java.math.BigDecimal)value$; break;
    case 4: totalPrincipalPaid = (java.math.BigDecimal)value$; break;
    case 5: totalInterestCharged = (java.math.BigDecimal)value$; break;
    case 6: totalFeeChargesCharged = (java.math.BigDecimal)value$; break;
    case 7: totalPenaltyChargesCharged = (java.math.BigDecimal)value$; break;
    case 8: totalWaived = (java.math.BigDecimal)value$; break;
    case 9: totalWrittenOff = (java.math.BigDecimal)value$; break;
    case 10: totalRepaymentExpected = (java.math.BigDecimal)value$; break;
    case 11: totalRepayment = (java.math.BigDecimal)value$; break;
    case 12: totalPaidInAdvance = (java.math.BigDecimal)value$; break;
    case 13: totalPaidLate = (java.math.BigDecimal)value$; break;
    case 14: totalOutstanding = (java.math.BigDecimal)value$; break;
    case 15: periods = (java.util.List<org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1>)value$; break;
    case 16: futurePeriods = (java.util.List<org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'currency' field.
   * @return The value of the 'currency' field.
   */
  public org.apache.fineract.avro.generic.v1.CurrencyDataV1 getCurrency() {
    return currency;
  }


  /**
   * Sets the value of the 'currency' field.
   * @param value the value to set.
   */
  public void setCurrency(org.apache.fineract.avro.generic.v1.CurrencyDataV1 value) {
    this.currency = value;
  }

  /**
   * Gets the value of the 'loanTermInDays' field.
   * @return The value of the 'loanTermInDays' field.
   */
  public java.lang.Integer getLoanTermInDays() {
    return loanTermInDays;
  }


  /**
   * Sets the value of the 'loanTermInDays' field.
   * @param value the value to set.
   */
  public void setLoanTermInDays(java.lang.Integer value) {
    this.loanTermInDays = value;
  }

  /**
   * Gets the value of the 'totalPrincipalDisbursed' field.
   * @return The value of the 'totalPrincipalDisbursed' field.
   */
  public java.math.BigDecimal getTotalPrincipalDisbursed() {
    return totalPrincipalDisbursed;
  }


  /**
   * Sets the value of the 'totalPrincipalDisbursed' field.
   * @param value the value to set.
   */
  public void setTotalPrincipalDisbursed(java.math.BigDecimal value) {
    this.totalPrincipalDisbursed = value;
  }

  /**
   * Gets the value of the 'totalPrincipalExpected' field.
   * @return The value of the 'totalPrincipalExpected' field.
   */
  public java.math.BigDecimal getTotalPrincipalExpected() {
    return totalPrincipalExpected;
  }


  /**
   * Sets the value of the 'totalPrincipalExpected' field.
   * @param value the value to set.
   */
  public void setTotalPrincipalExpected(java.math.BigDecimal value) {
    this.totalPrincipalExpected = value;
  }

  /**
   * Gets the value of the 'totalPrincipalPaid' field.
   * @return The value of the 'totalPrincipalPaid' field.
   */
  public java.math.BigDecimal getTotalPrincipalPaid() {
    return totalPrincipalPaid;
  }


  /**
   * Sets the value of the 'totalPrincipalPaid' field.
   * @param value the value to set.
   */
  public void setTotalPrincipalPaid(java.math.BigDecimal value) {
    this.totalPrincipalPaid = value;
  }

  /**
   * Gets the value of the 'totalInterestCharged' field.
   * @return The value of the 'totalInterestCharged' field.
   */
  public java.math.BigDecimal getTotalInterestCharged() {
    return totalInterestCharged;
  }


  /**
   * Sets the value of the 'totalInterestCharged' field.
   * @param value the value to set.
   */
  public void setTotalInterestCharged(java.math.BigDecimal value) {
    this.totalInterestCharged = value;
  }

  /**
   * Gets the value of the 'totalFeeChargesCharged' field.
   * @return The value of the 'totalFeeChargesCharged' field.
   */
  public java.math.BigDecimal getTotalFeeChargesCharged() {
    return totalFeeChargesCharged;
  }


  /**
   * Sets the value of the 'totalFeeChargesCharged' field.
   * @param value the value to set.
   */
  public void setTotalFeeChargesCharged(java.math.BigDecimal value) {
    this.totalFeeChargesCharged = value;
  }

  /**
   * Gets the value of the 'totalPenaltyChargesCharged' field.
   * @return The value of the 'totalPenaltyChargesCharged' field.
   */
  public java.math.BigDecimal getTotalPenaltyChargesCharged() {
    return totalPenaltyChargesCharged;
  }


  /**
   * Sets the value of the 'totalPenaltyChargesCharged' field.
   * @param value the value to set.
   */
  public void setTotalPenaltyChargesCharged(java.math.BigDecimal value) {
    this.totalPenaltyChargesCharged = value;
  }

  /**
   * Gets the value of the 'totalWaived' field.
   * @return The value of the 'totalWaived' field.
   */
  public java.math.BigDecimal getTotalWaived() {
    return totalWaived;
  }


  /**
   * Sets the value of the 'totalWaived' field.
   * @param value the value to set.
   */
  public void setTotalWaived(java.math.BigDecimal value) {
    this.totalWaived = value;
  }

  /**
   * Gets the value of the 'totalWrittenOff' field.
   * @return The value of the 'totalWrittenOff' field.
   */
  public java.math.BigDecimal getTotalWrittenOff() {
    return totalWrittenOff;
  }


  /**
   * Sets the value of the 'totalWrittenOff' field.
   * @param value the value to set.
   */
  public void setTotalWrittenOff(java.math.BigDecimal value) {
    this.totalWrittenOff = value;
  }

  /**
   * Gets the value of the 'totalRepaymentExpected' field.
   * @return The value of the 'totalRepaymentExpected' field.
   */
  public java.math.BigDecimal getTotalRepaymentExpected() {
    return totalRepaymentExpected;
  }


  /**
   * Sets the value of the 'totalRepaymentExpected' field.
   * @param value the value to set.
   */
  public void setTotalRepaymentExpected(java.math.BigDecimal value) {
    this.totalRepaymentExpected = value;
  }

  /**
   * Gets the value of the 'totalRepayment' field.
   * @return The value of the 'totalRepayment' field.
   */
  public java.math.BigDecimal getTotalRepayment() {
    return totalRepayment;
  }


  /**
   * Sets the value of the 'totalRepayment' field.
   * @param value the value to set.
   */
  public void setTotalRepayment(java.math.BigDecimal value) {
    this.totalRepayment = value;
  }

  /**
   * Gets the value of the 'totalPaidInAdvance' field.
   * @return The value of the 'totalPaidInAdvance' field.
   */
  public java.math.BigDecimal getTotalPaidInAdvance() {
    return totalPaidInAdvance;
  }


  /**
   * Sets the value of the 'totalPaidInAdvance' field.
   * @param value the value to set.
   */
  public void setTotalPaidInAdvance(java.math.BigDecimal value) {
    this.totalPaidInAdvance = value;
  }

  /**
   * Gets the value of the 'totalPaidLate' field.
   * @return The value of the 'totalPaidLate' field.
   */
  public java.math.BigDecimal getTotalPaidLate() {
    return totalPaidLate;
  }


  /**
   * Sets the value of the 'totalPaidLate' field.
   * @param value the value to set.
   */
  public void setTotalPaidLate(java.math.BigDecimal value) {
    this.totalPaidLate = value;
  }

  /**
   * Gets the value of the 'totalOutstanding' field.
   * @return The value of the 'totalOutstanding' field.
   */
  public java.math.BigDecimal getTotalOutstanding() {
    return totalOutstanding;
  }


  /**
   * Sets the value of the 'totalOutstanding' field.
   * @param value the value to set.
   */
  public void setTotalOutstanding(java.math.BigDecimal value) {
    this.totalOutstanding = value;
  }

  /**
   * Gets the value of the 'periods' field.
   * @return The value of the 'periods' field.
   */
  public java.util.List<org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1> getPeriods() {
    return periods;
  }


  /**
   * Sets the value of the 'periods' field.
   * @param value the value to set.
   */
  public void setPeriods(java.util.List<org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1> value) {
    this.periods = value;
  }

  /**
   * Gets the value of the 'futurePeriods' field.
   * @return The value of the 'futurePeriods' field.
   */
  public java.util.List<org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1> getFuturePeriods() {
    return futurePeriods;
  }


  /**
   * Sets the value of the 'futurePeriods' field.
   * @param value the value to set.
   */
  public void setFuturePeriods(java.util.List<org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1> value) {
    this.futurePeriods = value;
  }

  /**
   * Creates a new LoanScheduleDataV1 RecordBuilder.
   * @return A new LoanScheduleDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder newBuilder() {
    return new org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder();
  }

  /**
   * Creates a new LoanScheduleDataV1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LoanScheduleDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder newBuilder(org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder other) {
    if (other == null) {
      return new org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder(other);
    }
  }

  /**
   * Creates a new LoanScheduleDataV1 RecordBuilder by copying an existing LoanScheduleDataV1 instance.
   * @param other The existing instance to copy.
   * @return A new LoanScheduleDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder newBuilder(org.apache.fineract.avro.loan.v1.LoanScheduleDataV1 other) {
    if (other == null) {
      return new org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder(other);
    }
  }

  /**
   * RecordBuilder for LoanScheduleDataV1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LoanScheduleDataV1>
    implements org.apache.avro.data.RecordBuilder<LoanScheduleDataV1> {

    private org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency;
    private org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder currencyBuilder;
    private java.lang.Integer loanTermInDays;
    private java.math.BigDecimal totalPrincipalDisbursed;
    private java.math.BigDecimal totalPrincipalExpected;
    private java.math.BigDecimal totalPrincipalPaid;
    private java.math.BigDecimal totalInterestCharged;
    private java.math.BigDecimal totalFeeChargesCharged;
    private java.math.BigDecimal totalPenaltyChargesCharged;
    private java.math.BigDecimal totalWaived;
    private java.math.BigDecimal totalWrittenOff;
    private java.math.BigDecimal totalRepaymentExpected;
    private java.math.BigDecimal totalRepayment;
    private java.math.BigDecimal totalPaidInAdvance;
    private java.math.BigDecimal totalPaidLate;
    private java.math.BigDecimal totalOutstanding;
    private java.util.List<org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1> periods;
    private java.util.List<org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1> futurePeriods;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.currency)) {
        this.currency = data().deepCopy(fields()[0].schema(), other.currency);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasCurrencyBuilder()) {
        this.currencyBuilder = org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder(other.getCurrencyBuilder());
      }
      if (isValidValue(fields()[1], other.loanTermInDays)) {
        this.loanTermInDays = data().deepCopy(fields()[1].schema(), other.loanTermInDays);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.totalPrincipalDisbursed)) {
        this.totalPrincipalDisbursed = data().deepCopy(fields()[2].schema(), other.totalPrincipalDisbursed);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.totalPrincipalExpected)) {
        this.totalPrincipalExpected = data().deepCopy(fields()[3].schema(), other.totalPrincipalExpected);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.totalPrincipalPaid)) {
        this.totalPrincipalPaid = data().deepCopy(fields()[4].schema(), other.totalPrincipalPaid);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.totalInterestCharged)) {
        this.totalInterestCharged = data().deepCopy(fields()[5].schema(), other.totalInterestCharged);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.totalFeeChargesCharged)) {
        this.totalFeeChargesCharged = data().deepCopy(fields()[6].schema(), other.totalFeeChargesCharged);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.totalPenaltyChargesCharged)) {
        this.totalPenaltyChargesCharged = data().deepCopy(fields()[7].schema(), other.totalPenaltyChargesCharged);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.totalWaived)) {
        this.totalWaived = data().deepCopy(fields()[8].schema(), other.totalWaived);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.totalWrittenOff)) {
        this.totalWrittenOff = data().deepCopy(fields()[9].schema(), other.totalWrittenOff);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.totalRepaymentExpected)) {
        this.totalRepaymentExpected = data().deepCopy(fields()[10].schema(), other.totalRepaymentExpected);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.totalRepayment)) {
        this.totalRepayment = data().deepCopy(fields()[11].schema(), other.totalRepayment);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.totalPaidInAdvance)) {
        this.totalPaidInAdvance = data().deepCopy(fields()[12].schema(), other.totalPaidInAdvance);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.totalPaidLate)) {
        this.totalPaidLate = data().deepCopy(fields()[13].schema(), other.totalPaidLate);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.totalOutstanding)) {
        this.totalOutstanding = data().deepCopy(fields()[14].schema(), other.totalOutstanding);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.periods)) {
        this.periods = data().deepCopy(fields()[15].schema(), other.periods);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.futurePeriods)) {
        this.futurePeriods = data().deepCopy(fields()[16].schema(), other.futurePeriods);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
    }

    /**
     * Creates a Builder by copying an existing LoanScheduleDataV1 instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.fineract.avro.loan.v1.LoanScheduleDataV1 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.currency)) {
        this.currency = data().deepCopy(fields()[0].schema(), other.currency);
        fieldSetFlags()[0] = true;
      }
      this.currencyBuilder = null;
      if (isValidValue(fields()[1], other.loanTermInDays)) {
        this.loanTermInDays = data().deepCopy(fields()[1].schema(), other.loanTermInDays);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.totalPrincipalDisbursed)) {
        this.totalPrincipalDisbursed = data().deepCopy(fields()[2].schema(), other.totalPrincipalDisbursed);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.totalPrincipalExpected)) {
        this.totalPrincipalExpected = data().deepCopy(fields()[3].schema(), other.totalPrincipalExpected);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.totalPrincipalPaid)) {
        this.totalPrincipalPaid = data().deepCopy(fields()[4].schema(), other.totalPrincipalPaid);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.totalInterestCharged)) {
        this.totalInterestCharged = data().deepCopy(fields()[5].schema(), other.totalInterestCharged);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.totalFeeChargesCharged)) {
        this.totalFeeChargesCharged = data().deepCopy(fields()[6].schema(), other.totalFeeChargesCharged);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.totalPenaltyChargesCharged)) {
        this.totalPenaltyChargesCharged = data().deepCopy(fields()[7].schema(), other.totalPenaltyChargesCharged);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.totalWaived)) {
        this.totalWaived = data().deepCopy(fields()[8].schema(), other.totalWaived);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.totalWrittenOff)) {
        this.totalWrittenOff = data().deepCopy(fields()[9].schema(), other.totalWrittenOff);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.totalRepaymentExpected)) {
        this.totalRepaymentExpected = data().deepCopy(fields()[10].schema(), other.totalRepaymentExpected);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.totalRepayment)) {
        this.totalRepayment = data().deepCopy(fields()[11].schema(), other.totalRepayment);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.totalPaidInAdvance)) {
        this.totalPaidInAdvance = data().deepCopy(fields()[12].schema(), other.totalPaidInAdvance);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.totalPaidLate)) {
        this.totalPaidLate = data().deepCopy(fields()[13].schema(), other.totalPaidLate);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.totalOutstanding)) {
        this.totalOutstanding = data().deepCopy(fields()[14].schema(), other.totalOutstanding);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.periods)) {
        this.periods = data().deepCopy(fields()[15].schema(), other.periods);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.futurePeriods)) {
        this.futurePeriods = data().deepCopy(fields()[16].schema(), other.futurePeriods);
        fieldSetFlags()[16] = true;
      }
    }

    /**
      * Gets the value of the 'currency' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.CurrencyDataV1 getCurrency() {
      return currency;
    }


    /**
      * Sets the value of the 'currency' field.
      * @param value The value of 'currency'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder setCurrency(org.apache.fineract.avro.generic.v1.CurrencyDataV1 value) {
      validate(fields()[0], value);
      this.currencyBuilder = null;
      this.currency = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'currency' field has been set.
      * @return True if the 'currency' field has been set, false otherwise.
      */
    public boolean hasCurrency() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'currency' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder getCurrencyBuilder() {
      if (currencyBuilder == null) {
        if (hasCurrency()) {
          setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder(currency));
        } else {
          setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder());
        }
      }
      return currencyBuilder;
    }

    /**
     * Sets the Builder instance for the 'currency' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder value) {
      clearCurrency();
      currencyBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'currency' field has an active Builder instance
     * @return True if the 'currency' field has an active Builder instance
     */
    public boolean hasCurrencyBuilder() {
      return currencyBuilder != null;
    }

    /**
      * Clears the value of the 'currency' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder clearCurrency() {
      currency = null;
      currencyBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'loanTermInDays' field.
      * @return The value.
      */
    public java.lang.Integer getLoanTermInDays() {
      return loanTermInDays;
    }


    /**
      * Sets the value of the 'loanTermInDays' field.
      * @param value The value of 'loanTermInDays'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder setLoanTermInDays(java.lang.Integer value) {
      validate(fields()[1], value);
      this.loanTermInDays = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'loanTermInDays' field has been set.
      * @return True if the 'loanTermInDays' field has been set, false otherwise.
      */
    public boolean hasLoanTermInDays() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'loanTermInDays' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder clearLoanTermInDays() {
      loanTermInDays = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalPrincipalDisbursed' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalPrincipalDisbursed() {
      return totalPrincipalDisbursed;
    }


    /**
      * Sets the value of the 'totalPrincipalDisbursed' field.
      * @param value The value of 'totalPrincipalDisbursed'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder setTotalPrincipalDisbursed(java.math.BigDecimal value) {
      validate(fields()[2], value);
      this.totalPrincipalDisbursed = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'totalPrincipalDisbursed' field has been set.
      * @return True if the 'totalPrincipalDisbursed' field has been set, false otherwise.
      */
    public boolean hasTotalPrincipalDisbursed() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'totalPrincipalDisbursed' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder clearTotalPrincipalDisbursed() {
      totalPrincipalDisbursed = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalPrincipalExpected' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalPrincipalExpected() {
      return totalPrincipalExpected;
    }


    /**
      * Sets the value of the 'totalPrincipalExpected' field.
      * @param value The value of 'totalPrincipalExpected'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder setTotalPrincipalExpected(java.math.BigDecimal value) {
      validate(fields()[3], value);
      this.totalPrincipalExpected = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'totalPrincipalExpected' field has been set.
      * @return True if the 'totalPrincipalExpected' field has been set, false otherwise.
      */
    public boolean hasTotalPrincipalExpected() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'totalPrincipalExpected' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder clearTotalPrincipalExpected() {
      totalPrincipalExpected = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalPrincipalPaid' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalPrincipalPaid() {
      return totalPrincipalPaid;
    }


    /**
      * Sets the value of the 'totalPrincipalPaid' field.
      * @param value The value of 'totalPrincipalPaid'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder setTotalPrincipalPaid(java.math.BigDecimal value) {
      validate(fields()[4], value);
      this.totalPrincipalPaid = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'totalPrincipalPaid' field has been set.
      * @return True if the 'totalPrincipalPaid' field has been set, false otherwise.
      */
    public boolean hasTotalPrincipalPaid() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'totalPrincipalPaid' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder clearTotalPrincipalPaid() {
      totalPrincipalPaid = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalInterestCharged' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalInterestCharged() {
      return totalInterestCharged;
    }


    /**
      * Sets the value of the 'totalInterestCharged' field.
      * @param value The value of 'totalInterestCharged'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder setTotalInterestCharged(java.math.BigDecimal value) {
      validate(fields()[5], value);
      this.totalInterestCharged = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'totalInterestCharged' field has been set.
      * @return True if the 'totalInterestCharged' field has been set, false otherwise.
      */
    public boolean hasTotalInterestCharged() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'totalInterestCharged' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder clearTotalInterestCharged() {
      totalInterestCharged = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalFeeChargesCharged' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalFeeChargesCharged() {
      return totalFeeChargesCharged;
    }


    /**
      * Sets the value of the 'totalFeeChargesCharged' field.
      * @param value The value of 'totalFeeChargesCharged'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder setTotalFeeChargesCharged(java.math.BigDecimal value) {
      validate(fields()[6], value);
      this.totalFeeChargesCharged = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'totalFeeChargesCharged' field has been set.
      * @return True if the 'totalFeeChargesCharged' field has been set, false otherwise.
      */
    public boolean hasTotalFeeChargesCharged() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'totalFeeChargesCharged' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder clearTotalFeeChargesCharged() {
      totalFeeChargesCharged = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalPenaltyChargesCharged' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalPenaltyChargesCharged() {
      return totalPenaltyChargesCharged;
    }


    /**
      * Sets the value of the 'totalPenaltyChargesCharged' field.
      * @param value The value of 'totalPenaltyChargesCharged'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder setTotalPenaltyChargesCharged(java.math.BigDecimal value) {
      validate(fields()[7], value);
      this.totalPenaltyChargesCharged = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'totalPenaltyChargesCharged' field has been set.
      * @return True if the 'totalPenaltyChargesCharged' field has been set, false otherwise.
      */
    public boolean hasTotalPenaltyChargesCharged() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'totalPenaltyChargesCharged' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder clearTotalPenaltyChargesCharged() {
      totalPenaltyChargesCharged = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalWaived' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalWaived() {
      return totalWaived;
    }


    /**
      * Sets the value of the 'totalWaived' field.
      * @param value The value of 'totalWaived'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder setTotalWaived(java.math.BigDecimal value) {
      validate(fields()[8], value);
      this.totalWaived = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'totalWaived' field has been set.
      * @return True if the 'totalWaived' field has been set, false otherwise.
      */
    public boolean hasTotalWaived() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'totalWaived' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder clearTotalWaived() {
      totalWaived = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalWrittenOff' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalWrittenOff() {
      return totalWrittenOff;
    }


    /**
      * Sets the value of the 'totalWrittenOff' field.
      * @param value The value of 'totalWrittenOff'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder setTotalWrittenOff(java.math.BigDecimal value) {
      validate(fields()[9], value);
      this.totalWrittenOff = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'totalWrittenOff' field has been set.
      * @return True if the 'totalWrittenOff' field has been set, false otherwise.
      */
    public boolean hasTotalWrittenOff() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'totalWrittenOff' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder clearTotalWrittenOff() {
      totalWrittenOff = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalRepaymentExpected' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalRepaymentExpected() {
      return totalRepaymentExpected;
    }


    /**
      * Sets the value of the 'totalRepaymentExpected' field.
      * @param value The value of 'totalRepaymentExpected'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder setTotalRepaymentExpected(java.math.BigDecimal value) {
      validate(fields()[10], value);
      this.totalRepaymentExpected = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'totalRepaymentExpected' field has been set.
      * @return True if the 'totalRepaymentExpected' field has been set, false otherwise.
      */
    public boolean hasTotalRepaymentExpected() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'totalRepaymentExpected' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder clearTotalRepaymentExpected() {
      totalRepaymentExpected = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalRepayment' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalRepayment() {
      return totalRepayment;
    }


    /**
      * Sets the value of the 'totalRepayment' field.
      * @param value The value of 'totalRepayment'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder setTotalRepayment(java.math.BigDecimal value) {
      validate(fields()[11], value);
      this.totalRepayment = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'totalRepayment' field has been set.
      * @return True if the 'totalRepayment' field has been set, false otherwise.
      */
    public boolean hasTotalRepayment() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'totalRepayment' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder clearTotalRepayment() {
      totalRepayment = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalPaidInAdvance' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalPaidInAdvance() {
      return totalPaidInAdvance;
    }


    /**
      * Sets the value of the 'totalPaidInAdvance' field.
      * @param value The value of 'totalPaidInAdvance'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder setTotalPaidInAdvance(java.math.BigDecimal value) {
      validate(fields()[12], value);
      this.totalPaidInAdvance = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'totalPaidInAdvance' field has been set.
      * @return True if the 'totalPaidInAdvance' field has been set, false otherwise.
      */
    public boolean hasTotalPaidInAdvance() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'totalPaidInAdvance' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder clearTotalPaidInAdvance() {
      totalPaidInAdvance = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalPaidLate' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalPaidLate() {
      return totalPaidLate;
    }


    /**
      * Sets the value of the 'totalPaidLate' field.
      * @param value The value of 'totalPaidLate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder setTotalPaidLate(java.math.BigDecimal value) {
      validate(fields()[13], value);
      this.totalPaidLate = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'totalPaidLate' field has been set.
      * @return True if the 'totalPaidLate' field has been set, false otherwise.
      */
    public boolean hasTotalPaidLate() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'totalPaidLate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder clearTotalPaidLate() {
      totalPaidLate = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalOutstanding' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalOutstanding() {
      return totalOutstanding;
    }


    /**
      * Sets the value of the 'totalOutstanding' field.
      * @param value The value of 'totalOutstanding'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder setTotalOutstanding(java.math.BigDecimal value) {
      validate(fields()[14], value);
      this.totalOutstanding = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'totalOutstanding' field has been set.
      * @return True if the 'totalOutstanding' field has been set, false otherwise.
      */
    public boolean hasTotalOutstanding() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'totalOutstanding' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder clearTotalOutstanding() {
      totalOutstanding = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'periods' field.
      * @return The value.
      */
    public java.util.List<org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1> getPeriods() {
      return periods;
    }


    /**
      * Sets the value of the 'periods' field.
      * @param value The value of 'periods'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder setPeriods(java.util.List<org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1> value) {
      validate(fields()[15], value);
      this.periods = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'periods' field has been set.
      * @return True if the 'periods' field has been set, false otherwise.
      */
    public boolean hasPeriods() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'periods' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder clearPeriods() {
      periods = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'futurePeriods' field.
      * @return The value.
      */
    public java.util.List<org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1> getFuturePeriods() {
      return futurePeriods;
    }


    /**
      * Sets the value of the 'futurePeriods' field.
      * @param value The value of 'futurePeriods'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder setFuturePeriods(java.util.List<org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1> value) {
      validate(fields()[16], value);
      this.futurePeriods = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'futurePeriods' field has been set.
      * @return True if the 'futurePeriods' field has been set, false otherwise.
      */
    public boolean hasFuturePeriods() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'futurePeriods' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanScheduleDataV1.Builder clearFuturePeriods() {
      futurePeriods = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public LoanScheduleDataV1 build() {
      try {
        LoanScheduleDataV1 record = new LoanScheduleDataV1();
        if (currencyBuilder != null) {
          try {
            record.currency = this.currencyBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("currency"));
            throw e;
          }
        } else {
          record.currency = fieldSetFlags()[0] ? this.currency : (org.apache.fineract.avro.generic.v1.CurrencyDataV1) defaultValue(fields()[0]);
        }
        record.loanTermInDays = fieldSetFlags()[1] ? this.loanTermInDays : (java.lang.Integer) defaultValue(fields()[1]);
        record.totalPrincipalDisbursed = fieldSetFlags()[2] ? this.totalPrincipalDisbursed : (java.math.BigDecimal) defaultValue(fields()[2]);
        record.totalPrincipalExpected = fieldSetFlags()[3] ? this.totalPrincipalExpected : (java.math.BigDecimal) defaultValue(fields()[3]);
        record.totalPrincipalPaid = fieldSetFlags()[4] ? this.totalPrincipalPaid : (java.math.BigDecimal) defaultValue(fields()[4]);
        record.totalInterestCharged = fieldSetFlags()[5] ? this.totalInterestCharged : (java.math.BigDecimal) defaultValue(fields()[5]);
        record.totalFeeChargesCharged = fieldSetFlags()[6] ? this.totalFeeChargesCharged : (java.math.BigDecimal) defaultValue(fields()[6]);
        record.totalPenaltyChargesCharged = fieldSetFlags()[7] ? this.totalPenaltyChargesCharged : (java.math.BigDecimal) defaultValue(fields()[7]);
        record.totalWaived = fieldSetFlags()[8] ? this.totalWaived : (java.math.BigDecimal) defaultValue(fields()[8]);
        record.totalWrittenOff = fieldSetFlags()[9] ? this.totalWrittenOff : (java.math.BigDecimal) defaultValue(fields()[9]);
        record.totalRepaymentExpected = fieldSetFlags()[10] ? this.totalRepaymentExpected : (java.math.BigDecimal) defaultValue(fields()[10]);
        record.totalRepayment = fieldSetFlags()[11] ? this.totalRepayment : (java.math.BigDecimal) defaultValue(fields()[11]);
        record.totalPaidInAdvance = fieldSetFlags()[12] ? this.totalPaidInAdvance : (java.math.BigDecimal) defaultValue(fields()[12]);
        record.totalPaidLate = fieldSetFlags()[13] ? this.totalPaidLate : (java.math.BigDecimal) defaultValue(fields()[13]);
        record.totalOutstanding = fieldSetFlags()[14] ? this.totalOutstanding : (java.math.BigDecimal) defaultValue(fields()[14]);
        record.periods = fieldSetFlags()[15] ? this.periods : (java.util.List<org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1>) defaultValue(fields()[15]);
        record.futurePeriods = fieldSetFlags()[16] ? this.futurePeriods : (java.util.List<org.apache.fineract.avro.loan.v1.LoanSchedulePeriodDataV1>) defaultValue(fields()[16]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<LoanScheduleDataV1>
    WRITER$ = (org.apache.avro.io.DatumWriter<LoanScheduleDataV1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<LoanScheduleDataV1>
    READER$ = (org.apache.avro.io.DatumReader<LoanScheduleDataV1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










