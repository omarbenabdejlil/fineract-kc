/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

package org.apache.fineract.avro.portfolio.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ChargeDataV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, org.apache.fineract.avro.generator.ByteBufferSerializable {
  private static final long serialVersionUID = 6638389460182113456L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ChargeDataV1\",\"namespace\":\"org.apache.fineract.avro.portfolio.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"active\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"penalty\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"freeWithdrawal\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"freeWithdrawalChargeFrequency\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"restartFrequency\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"restartFrequencyEnum\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"isPaymentType\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"paymentTypeOptions\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PaymentTypeDataV1\",\"namespace\":\"org.apache.fineract.avro.payment.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isCashPayment\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"position\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"codeName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isSystemDefined\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"currency\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CurrencyDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"decimalPlaces\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"inMultiplesOf\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"displaySymbol\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nameCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"displayLabel\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"amount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"chargeTimeType\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"EnumOptionDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"chargeAppliesTo\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"chargeCalculationType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"chargePaymentMode\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"feeOnMonthDay\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"feeInterval\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"minCap\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"maxCap\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"feeFrequency\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"incomeOrLiabilityAccount\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GLAccountDataV1\",\"namespace\":\"org.apache.fineract.avro.gl.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"parentId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"glCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"disabled\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"manualEntriesAllowed\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"usage\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nameDecorated\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"tagId\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CodeValueDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"position\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"active\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"mandatory\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"organizationRunningBalance\",\"type\":[\"null\",\"long\"],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<ChargeDataV1> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ChargeDataV1> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ChargeDataV1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ChargeDataV1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ChargeDataV1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ChargeDataV1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  @Override
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ChargeDataV1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ChargeDataV1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ChargeDataV1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.Long id;
  private java.lang.String name;
  private java.lang.Boolean active;
  private java.lang.Boolean penalty;
  private java.lang.Boolean freeWithdrawal;
  private java.lang.Integer freeWithdrawalChargeFrequency;
  private java.lang.Integer restartFrequency;
  private java.lang.Integer restartFrequencyEnum;
  private java.lang.Boolean isPaymentType;
  private org.apache.fineract.avro.payment.v1.PaymentTypeDataV1 paymentTypeOptions;
  private org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency;
  private java.math.BigDecimal amount;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargeTimeType;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargeAppliesTo;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargeCalculationType;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargePaymentMode;
  private java.lang.String feeOnMonthDay;
  private java.lang.Integer feeInterval;
  private java.math.BigDecimal minCap;
  private java.math.BigDecimal maxCap;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 feeFrequency;
  private org.apache.fineract.avro.gl.v1.GLAccountDataV1 incomeOrLiabilityAccount;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ChargeDataV1() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param name The new value for name
   * @param active The new value for active
   * @param penalty The new value for penalty
   * @param freeWithdrawal The new value for freeWithdrawal
   * @param freeWithdrawalChargeFrequency The new value for freeWithdrawalChargeFrequency
   * @param restartFrequency The new value for restartFrequency
   * @param restartFrequencyEnum The new value for restartFrequencyEnum
   * @param isPaymentType The new value for isPaymentType
   * @param paymentTypeOptions The new value for paymentTypeOptions
   * @param currency The new value for currency
   * @param amount The new value for amount
   * @param chargeTimeType The new value for chargeTimeType
   * @param chargeAppliesTo The new value for chargeAppliesTo
   * @param chargeCalculationType The new value for chargeCalculationType
   * @param chargePaymentMode The new value for chargePaymentMode
   * @param feeOnMonthDay The new value for feeOnMonthDay
   * @param feeInterval The new value for feeInterval
   * @param minCap The new value for minCap
   * @param maxCap The new value for maxCap
   * @param feeFrequency The new value for feeFrequency
   * @param incomeOrLiabilityAccount The new value for incomeOrLiabilityAccount
   */
  public ChargeDataV1(java.lang.Long id, java.lang.String name, java.lang.Boolean active, java.lang.Boolean penalty, java.lang.Boolean freeWithdrawal, java.lang.Integer freeWithdrawalChargeFrequency, java.lang.Integer restartFrequency, java.lang.Integer restartFrequencyEnum, java.lang.Boolean isPaymentType, org.apache.fineract.avro.payment.v1.PaymentTypeDataV1 paymentTypeOptions, org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency, java.math.BigDecimal amount, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargeTimeType, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargeAppliesTo, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargeCalculationType, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargePaymentMode, java.lang.String feeOnMonthDay, java.lang.Integer feeInterval, java.math.BigDecimal minCap, java.math.BigDecimal maxCap, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 feeFrequency, org.apache.fineract.avro.gl.v1.GLAccountDataV1 incomeOrLiabilityAccount) {
    this.id = id;
    this.name = name;
    this.active = active;
    this.penalty = penalty;
    this.freeWithdrawal = freeWithdrawal;
    this.freeWithdrawalChargeFrequency = freeWithdrawalChargeFrequency;
    this.restartFrequency = restartFrequency;
    this.restartFrequencyEnum = restartFrequencyEnum;
    this.isPaymentType = isPaymentType;
    this.paymentTypeOptions = paymentTypeOptions;
    this.currency = currency;
    this.amount = amount;
    this.chargeTimeType = chargeTimeType;
    this.chargeAppliesTo = chargeAppliesTo;
    this.chargeCalculationType = chargeCalculationType;
    this.chargePaymentMode = chargePaymentMode;
    this.feeOnMonthDay = feeOnMonthDay;
    this.feeInterval = feeInterval;
    this.minCap = minCap;
    this.maxCap = maxCap;
    this.feeFrequency = feeFrequency;
    this.incomeOrLiabilityAccount = incomeOrLiabilityAccount;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return name;
    case 2: return active;
    case 3: return penalty;
    case 4: return freeWithdrawal;
    case 5: return freeWithdrawalChargeFrequency;
    case 6: return restartFrequency;
    case 7: return restartFrequencyEnum;
    case 8: return isPaymentType;
    case 9: return paymentTypeOptions;
    case 10: return currency;
    case 11: return amount;
    case 12: return chargeTimeType;
    case 13: return chargeAppliesTo;
    case 14: return chargeCalculationType;
    case 15: return chargePaymentMode;
    case 16: return feeOnMonthDay;
    case 17: return feeInterval;
    case 18: return minCap;
    case 19: return maxCap;
    case 20: return feeFrequency;
    case 21: return incomeOrLiabilityAccount;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: name = value$ != null ? value$.toString() : null; break;
    case 2: active = (java.lang.Boolean)value$; break;
    case 3: penalty = (java.lang.Boolean)value$; break;
    case 4: freeWithdrawal = (java.lang.Boolean)value$; break;
    case 5: freeWithdrawalChargeFrequency = (java.lang.Integer)value$; break;
    case 6: restartFrequency = (java.lang.Integer)value$; break;
    case 7: restartFrequencyEnum = (java.lang.Integer)value$; break;
    case 8: isPaymentType = (java.lang.Boolean)value$; break;
    case 9: paymentTypeOptions = (org.apache.fineract.avro.payment.v1.PaymentTypeDataV1)value$; break;
    case 10: currency = (org.apache.fineract.avro.generic.v1.CurrencyDataV1)value$; break;
    case 11: amount = (java.math.BigDecimal)value$; break;
    case 12: chargeTimeType = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 13: chargeAppliesTo = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 14: chargeCalculationType = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 15: chargePaymentMode = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 16: feeOnMonthDay = value$ != null ? value$.toString() : null; break;
    case 17: feeInterval = (java.lang.Integer)value$; break;
    case 18: minCap = (java.math.BigDecimal)value$; break;
    case 19: maxCap = (java.math.BigDecimal)value$; break;
    case 20: feeFrequency = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 21: incomeOrLiabilityAccount = (org.apache.fineract.avro.gl.v1.GLAccountDataV1)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'active' field.
   * @return The value of the 'active' field.
   */
  public java.lang.Boolean getActive() {
    return active;
  }


  /**
   * Sets the value of the 'active' field.
   * @param value the value to set.
   */
  public void setActive(java.lang.Boolean value) {
    this.active = value;
  }

  /**
   * Gets the value of the 'penalty' field.
   * @return The value of the 'penalty' field.
   */
  public java.lang.Boolean getPenalty() {
    return penalty;
  }


  /**
   * Sets the value of the 'penalty' field.
   * @param value the value to set.
   */
  public void setPenalty(java.lang.Boolean value) {
    this.penalty = value;
  }

  /**
   * Gets the value of the 'freeWithdrawal' field.
   * @return The value of the 'freeWithdrawal' field.
   */
  public java.lang.Boolean getFreeWithdrawal() {
    return freeWithdrawal;
  }


  /**
   * Sets the value of the 'freeWithdrawal' field.
   * @param value the value to set.
   */
  public void setFreeWithdrawal(java.lang.Boolean value) {
    this.freeWithdrawal = value;
  }

  /**
   * Gets the value of the 'freeWithdrawalChargeFrequency' field.
   * @return The value of the 'freeWithdrawalChargeFrequency' field.
   */
  public java.lang.Integer getFreeWithdrawalChargeFrequency() {
    return freeWithdrawalChargeFrequency;
  }


  /**
   * Sets the value of the 'freeWithdrawalChargeFrequency' field.
   * @param value the value to set.
   */
  public void setFreeWithdrawalChargeFrequency(java.lang.Integer value) {
    this.freeWithdrawalChargeFrequency = value;
  }

  /**
   * Gets the value of the 'restartFrequency' field.
   * @return The value of the 'restartFrequency' field.
   */
  public java.lang.Integer getRestartFrequency() {
    return restartFrequency;
  }


  /**
   * Sets the value of the 'restartFrequency' field.
   * @param value the value to set.
   */
  public void setRestartFrequency(java.lang.Integer value) {
    this.restartFrequency = value;
  }

  /**
   * Gets the value of the 'restartFrequencyEnum' field.
   * @return The value of the 'restartFrequencyEnum' field.
   */
  public java.lang.Integer getRestartFrequencyEnum() {
    return restartFrequencyEnum;
  }


  /**
   * Sets the value of the 'restartFrequencyEnum' field.
   * @param value the value to set.
   */
  public void setRestartFrequencyEnum(java.lang.Integer value) {
    this.restartFrequencyEnum = value;
  }

  /**
   * Gets the value of the 'isPaymentType' field.
   * @return The value of the 'isPaymentType' field.
   */
  public java.lang.Boolean getIsPaymentType() {
    return isPaymentType;
  }


  /**
   * Sets the value of the 'isPaymentType' field.
   * @param value the value to set.
   */
  public void setIsPaymentType(java.lang.Boolean value) {
    this.isPaymentType = value;
  }

  /**
   * Gets the value of the 'paymentTypeOptions' field.
   * @return The value of the 'paymentTypeOptions' field.
   */
  public org.apache.fineract.avro.payment.v1.PaymentTypeDataV1 getPaymentTypeOptions() {
    return paymentTypeOptions;
  }


  /**
   * Sets the value of the 'paymentTypeOptions' field.
   * @param value the value to set.
   */
  public void setPaymentTypeOptions(org.apache.fineract.avro.payment.v1.PaymentTypeDataV1 value) {
    this.paymentTypeOptions = value;
  }

  /**
   * Gets the value of the 'currency' field.
   * @return The value of the 'currency' field.
   */
  public org.apache.fineract.avro.generic.v1.CurrencyDataV1 getCurrency() {
    return currency;
  }


  /**
   * Sets the value of the 'currency' field.
   * @param value the value to set.
   */
  public void setCurrency(org.apache.fineract.avro.generic.v1.CurrencyDataV1 value) {
    this.currency = value;
  }

  /**
   * Gets the value of the 'amount' field.
   * @return The value of the 'amount' field.
   */
  public java.math.BigDecimal getAmount() {
    return amount;
  }


  /**
   * Sets the value of the 'amount' field.
   * @param value the value to set.
   */
  public void setAmount(java.math.BigDecimal value) {
    this.amount = value;
  }

  /**
   * Gets the value of the 'chargeTimeType' field.
   * @return The value of the 'chargeTimeType' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getChargeTimeType() {
    return chargeTimeType;
  }


  /**
   * Sets the value of the 'chargeTimeType' field.
   * @param value the value to set.
   */
  public void setChargeTimeType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.chargeTimeType = value;
  }

  /**
   * Gets the value of the 'chargeAppliesTo' field.
   * @return The value of the 'chargeAppliesTo' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getChargeAppliesTo() {
    return chargeAppliesTo;
  }


  /**
   * Sets the value of the 'chargeAppliesTo' field.
   * @param value the value to set.
   */
  public void setChargeAppliesTo(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.chargeAppliesTo = value;
  }

  /**
   * Gets the value of the 'chargeCalculationType' field.
   * @return The value of the 'chargeCalculationType' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getChargeCalculationType() {
    return chargeCalculationType;
  }


  /**
   * Sets the value of the 'chargeCalculationType' field.
   * @param value the value to set.
   */
  public void setChargeCalculationType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.chargeCalculationType = value;
  }

  /**
   * Gets the value of the 'chargePaymentMode' field.
   * @return The value of the 'chargePaymentMode' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getChargePaymentMode() {
    return chargePaymentMode;
  }


  /**
   * Sets the value of the 'chargePaymentMode' field.
   * @param value the value to set.
   */
  public void setChargePaymentMode(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.chargePaymentMode = value;
  }

  /**
   * Gets the value of the 'feeOnMonthDay' field.
   * @return The value of the 'feeOnMonthDay' field.
   */
  public java.lang.String getFeeOnMonthDay() {
    return feeOnMonthDay;
  }


  /**
   * Sets the value of the 'feeOnMonthDay' field.
   * @param value the value to set.
   */
  public void setFeeOnMonthDay(java.lang.String value) {
    this.feeOnMonthDay = value;
  }

  /**
   * Gets the value of the 'feeInterval' field.
   * @return The value of the 'feeInterval' field.
   */
  public java.lang.Integer getFeeInterval() {
    return feeInterval;
  }


  /**
   * Sets the value of the 'feeInterval' field.
   * @param value the value to set.
   */
  public void setFeeInterval(java.lang.Integer value) {
    this.feeInterval = value;
  }

  /**
   * Gets the value of the 'minCap' field.
   * @return The value of the 'minCap' field.
   */
  public java.math.BigDecimal getMinCap() {
    return minCap;
  }


  /**
   * Sets the value of the 'minCap' field.
   * @param value the value to set.
   */
  public void setMinCap(java.math.BigDecimal value) {
    this.minCap = value;
  }

  /**
   * Gets the value of the 'maxCap' field.
   * @return The value of the 'maxCap' field.
   */
  public java.math.BigDecimal getMaxCap() {
    return maxCap;
  }


  /**
   * Sets the value of the 'maxCap' field.
   * @param value the value to set.
   */
  public void setMaxCap(java.math.BigDecimal value) {
    this.maxCap = value;
  }

  /**
   * Gets the value of the 'feeFrequency' field.
   * @return The value of the 'feeFrequency' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getFeeFrequency() {
    return feeFrequency;
  }


  /**
   * Sets the value of the 'feeFrequency' field.
   * @param value the value to set.
   */
  public void setFeeFrequency(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.feeFrequency = value;
  }

  /**
   * Gets the value of the 'incomeOrLiabilityAccount' field.
   * @return The value of the 'incomeOrLiabilityAccount' field.
   */
  public org.apache.fineract.avro.gl.v1.GLAccountDataV1 getIncomeOrLiabilityAccount() {
    return incomeOrLiabilityAccount;
  }


  /**
   * Sets the value of the 'incomeOrLiabilityAccount' field.
   * @param value the value to set.
   */
  public void setIncomeOrLiabilityAccount(org.apache.fineract.avro.gl.v1.GLAccountDataV1 value) {
    this.incomeOrLiabilityAccount = value;
  }

  /**
   * Creates a new ChargeDataV1 RecordBuilder.
   * @return A new ChargeDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder newBuilder() {
    return new org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder();
  }

  /**
   * Creates a new ChargeDataV1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ChargeDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder newBuilder(org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder other) {
    if (other == null) {
      return new org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder(other);
    }
  }

  /**
   * Creates a new ChargeDataV1 RecordBuilder by copying an existing ChargeDataV1 instance.
   * @param other The existing instance to copy.
   * @return A new ChargeDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder newBuilder(org.apache.fineract.avro.portfolio.v1.ChargeDataV1 other) {
    if (other == null) {
      return new org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder(other);
    }
  }

  /**
   * RecordBuilder for ChargeDataV1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ChargeDataV1>
    implements org.apache.avro.data.RecordBuilder<ChargeDataV1> {

    private java.lang.Long id;
    private java.lang.String name;
    private java.lang.Boolean active;
    private java.lang.Boolean penalty;
    private java.lang.Boolean freeWithdrawal;
    private java.lang.Integer freeWithdrawalChargeFrequency;
    private java.lang.Integer restartFrequency;
    private java.lang.Integer restartFrequencyEnum;
    private java.lang.Boolean isPaymentType;
    private org.apache.fineract.avro.payment.v1.PaymentTypeDataV1 paymentTypeOptions;
    private org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder paymentTypeOptionsBuilder;
    private org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency;
    private org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder currencyBuilder;
    private java.math.BigDecimal amount;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargeTimeType;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder chargeTimeTypeBuilder;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargeAppliesTo;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder chargeAppliesToBuilder;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargeCalculationType;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder chargeCalculationTypeBuilder;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargePaymentMode;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder chargePaymentModeBuilder;
    private java.lang.String feeOnMonthDay;
    private java.lang.Integer feeInterval;
    private java.math.BigDecimal minCap;
    private java.math.BigDecimal maxCap;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 feeFrequency;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder feeFrequencyBuilder;
    private org.apache.fineract.avro.gl.v1.GLAccountDataV1 incomeOrLiabilityAccount;
    private org.apache.fineract.avro.gl.v1.GLAccountDataV1.Builder incomeOrLiabilityAccountBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.active)) {
        this.active = data().deepCopy(fields()[2].schema(), other.active);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.penalty)) {
        this.penalty = data().deepCopy(fields()[3].schema(), other.penalty);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.freeWithdrawal)) {
        this.freeWithdrawal = data().deepCopy(fields()[4].schema(), other.freeWithdrawal);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.freeWithdrawalChargeFrequency)) {
        this.freeWithdrawalChargeFrequency = data().deepCopy(fields()[5].schema(), other.freeWithdrawalChargeFrequency);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.restartFrequency)) {
        this.restartFrequency = data().deepCopy(fields()[6].schema(), other.restartFrequency);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.restartFrequencyEnum)) {
        this.restartFrequencyEnum = data().deepCopy(fields()[7].schema(), other.restartFrequencyEnum);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.isPaymentType)) {
        this.isPaymentType = data().deepCopy(fields()[8].schema(), other.isPaymentType);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.paymentTypeOptions)) {
        this.paymentTypeOptions = data().deepCopy(fields()[9].schema(), other.paymentTypeOptions);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (other.hasPaymentTypeOptionsBuilder()) {
        this.paymentTypeOptionsBuilder = org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.newBuilder(other.getPaymentTypeOptionsBuilder());
      }
      if (isValidValue(fields()[10], other.currency)) {
        this.currency = data().deepCopy(fields()[10].schema(), other.currency);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (other.hasCurrencyBuilder()) {
        this.currencyBuilder = org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder(other.getCurrencyBuilder());
      }
      if (isValidValue(fields()[11], other.amount)) {
        this.amount = data().deepCopy(fields()[11].schema(), other.amount);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.chargeTimeType)) {
        this.chargeTimeType = data().deepCopy(fields()[12].schema(), other.chargeTimeType);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (other.hasChargeTimeTypeBuilder()) {
        this.chargeTimeTypeBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getChargeTimeTypeBuilder());
      }
      if (isValidValue(fields()[13], other.chargeAppliesTo)) {
        this.chargeAppliesTo = data().deepCopy(fields()[13].schema(), other.chargeAppliesTo);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (other.hasChargeAppliesToBuilder()) {
        this.chargeAppliesToBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getChargeAppliesToBuilder());
      }
      if (isValidValue(fields()[14], other.chargeCalculationType)) {
        this.chargeCalculationType = data().deepCopy(fields()[14].schema(), other.chargeCalculationType);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (other.hasChargeCalculationTypeBuilder()) {
        this.chargeCalculationTypeBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getChargeCalculationTypeBuilder());
      }
      if (isValidValue(fields()[15], other.chargePaymentMode)) {
        this.chargePaymentMode = data().deepCopy(fields()[15].schema(), other.chargePaymentMode);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (other.hasChargePaymentModeBuilder()) {
        this.chargePaymentModeBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getChargePaymentModeBuilder());
      }
      if (isValidValue(fields()[16], other.feeOnMonthDay)) {
        this.feeOnMonthDay = data().deepCopy(fields()[16].schema(), other.feeOnMonthDay);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.feeInterval)) {
        this.feeInterval = data().deepCopy(fields()[17].schema(), other.feeInterval);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.minCap)) {
        this.minCap = data().deepCopy(fields()[18].schema(), other.minCap);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.maxCap)) {
        this.maxCap = data().deepCopy(fields()[19].schema(), other.maxCap);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.feeFrequency)) {
        this.feeFrequency = data().deepCopy(fields()[20].schema(), other.feeFrequency);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (other.hasFeeFrequencyBuilder()) {
        this.feeFrequencyBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getFeeFrequencyBuilder());
      }
      if (isValidValue(fields()[21], other.incomeOrLiabilityAccount)) {
        this.incomeOrLiabilityAccount = data().deepCopy(fields()[21].schema(), other.incomeOrLiabilityAccount);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (other.hasIncomeOrLiabilityAccountBuilder()) {
        this.incomeOrLiabilityAccountBuilder = org.apache.fineract.avro.gl.v1.GLAccountDataV1.newBuilder(other.getIncomeOrLiabilityAccountBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing ChargeDataV1 instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.fineract.avro.portfolio.v1.ChargeDataV1 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.active)) {
        this.active = data().deepCopy(fields()[2].schema(), other.active);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.penalty)) {
        this.penalty = data().deepCopy(fields()[3].schema(), other.penalty);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.freeWithdrawal)) {
        this.freeWithdrawal = data().deepCopy(fields()[4].schema(), other.freeWithdrawal);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.freeWithdrawalChargeFrequency)) {
        this.freeWithdrawalChargeFrequency = data().deepCopy(fields()[5].schema(), other.freeWithdrawalChargeFrequency);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.restartFrequency)) {
        this.restartFrequency = data().deepCopy(fields()[6].schema(), other.restartFrequency);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.restartFrequencyEnum)) {
        this.restartFrequencyEnum = data().deepCopy(fields()[7].schema(), other.restartFrequencyEnum);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.isPaymentType)) {
        this.isPaymentType = data().deepCopy(fields()[8].schema(), other.isPaymentType);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.paymentTypeOptions)) {
        this.paymentTypeOptions = data().deepCopy(fields()[9].schema(), other.paymentTypeOptions);
        fieldSetFlags()[9] = true;
      }
      this.paymentTypeOptionsBuilder = null;
      if (isValidValue(fields()[10], other.currency)) {
        this.currency = data().deepCopy(fields()[10].schema(), other.currency);
        fieldSetFlags()[10] = true;
      }
      this.currencyBuilder = null;
      if (isValidValue(fields()[11], other.amount)) {
        this.amount = data().deepCopy(fields()[11].schema(), other.amount);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.chargeTimeType)) {
        this.chargeTimeType = data().deepCopy(fields()[12].schema(), other.chargeTimeType);
        fieldSetFlags()[12] = true;
      }
      this.chargeTimeTypeBuilder = null;
      if (isValidValue(fields()[13], other.chargeAppliesTo)) {
        this.chargeAppliesTo = data().deepCopy(fields()[13].schema(), other.chargeAppliesTo);
        fieldSetFlags()[13] = true;
      }
      this.chargeAppliesToBuilder = null;
      if (isValidValue(fields()[14], other.chargeCalculationType)) {
        this.chargeCalculationType = data().deepCopy(fields()[14].schema(), other.chargeCalculationType);
        fieldSetFlags()[14] = true;
      }
      this.chargeCalculationTypeBuilder = null;
      if (isValidValue(fields()[15], other.chargePaymentMode)) {
        this.chargePaymentMode = data().deepCopy(fields()[15].schema(), other.chargePaymentMode);
        fieldSetFlags()[15] = true;
      }
      this.chargePaymentModeBuilder = null;
      if (isValidValue(fields()[16], other.feeOnMonthDay)) {
        this.feeOnMonthDay = data().deepCopy(fields()[16].schema(), other.feeOnMonthDay);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.feeInterval)) {
        this.feeInterval = data().deepCopy(fields()[17].schema(), other.feeInterval);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.minCap)) {
        this.minCap = data().deepCopy(fields()[18].schema(), other.minCap);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.maxCap)) {
        this.maxCap = data().deepCopy(fields()[19].schema(), other.maxCap);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.feeFrequency)) {
        this.feeFrequency = data().deepCopy(fields()[20].schema(), other.feeFrequency);
        fieldSetFlags()[20] = true;
      }
      this.feeFrequencyBuilder = null;
      if (isValidValue(fields()[21], other.incomeOrLiabilityAccount)) {
        this.incomeOrLiabilityAccount = data().deepCopy(fields()[21].schema(), other.incomeOrLiabilityAccount);
        fieldSetFlags()[21] = true;
      }
      this.incomeOrLiabilityAccountBuilder = null;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setId(java.lang.Long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setName(java.lang.String value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'active' field.
      * @return The value.
      */
    public java.lang.Boolean getActive() {
      return active;
    }


    /**
      * Sets the value of the 'active' field.
      * @param value The value of 'active'.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setActive(java.lang.Boolean value) {
      validate(fields()[2], value);
      this.active = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'active' field has been set.
      * @return True if the 'active' field has been set, false otherwise.
      */
    public boolean hasActive() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'active' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder clearActive() {
      active = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'penalty' field.
      * @return The value.
      */
    public java.lang.Boolean getPenalty() {
      return penalty;
    }


    /**
      * Sets the value of the 'penalty' field.
      * @param value The value of 'penalty'.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setPenalty(java.lang.Boolean value) {
      validate(fields()[3], value);
      this.penalty = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'penalty' field has been set.
      * @return True if the 'penalty' field has been set, false otherwise.
      */
    public boolean hasPenalty() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'penalty' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder clearPenalty() {
      penalty = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'freeWithdrawal' field.
      * @return The value.
      */
    public java.lang.Boolean getFreeWithdrawal() {
      return freeWithdrawal;
    }


    /**
      * Sets the value of the 'freeWithdrawal' field.
      * @param value The value of 'freeWithdrawal'.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setFreeWithdrawal(java.lang.Boolean value) {
      validate(fields()[4], value);
      this.freeWithdrawal = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'freeWithdrawal' field has been set.
      * @return True if the 'freeWithdrawal' field has been set, false otherwise.
      */
    public boolean hasFreeWithdrawal() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'freeWithdrawal' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder clearFreeWithdrawal() {
      freeWithdrawal = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'freeWithdrawalChargeFrequency' field.
      * @return The value.
      */
    public java.lang.Integer getFreeWithdrawalChargeFrequency() {
      return freeWithdrawalChargeFrequency;
    }


    /**
      * Sets the value of the 'freeWithdrawalChargeFrequency' field.
      * @param value The value of 'freeWithdrawalChargeFrequency'.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setFreeWithdrawalChargeFrequency(java.lang.Integer value) {
      validate(fields()[5], value);
      this.freeWithdrawalChargeFrequency = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'freeWithdrawalChargeFrequency' field has been set.
      * @return True if the 'freeWithdrawalChargeFrequency' field has been set, false otherwise.
      */
    public boolean hasFreeWithdrawalChargeFrequency() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'freeWithdrawalChargeFrequency' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder clearFreeWithdrawalChargeFrequency() {
      freeWithdrawalChargeFrequency = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'restartFrequency' field.
      * @return The value.
      */
    public java.lang.Integer getRestartFrequency() {
      return restartFrequency;
    }


    /**
      * Sets the value of the 'restartFrequency' field.
      * @param value The value of 'restartFrequency'.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setRestartFrequency(java.lang.Integer value) {
      validate(fields()[6], value);
      this.restartFrequency = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'restartFrequency' field has been set.
      * @return True if the 'restartFrequency' field has been set, false otherwise.
      */
    public boolean hasRestartFrequency() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'restartFrequency' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder clearRestartFrequency() {
      restartFrequency = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'restartFrequencyEnum' field.
      * @return The value.
      */
    public java.lang.Integer getRestartFrequencyEnum() {
      return restartFrequencyEnum;
    }


    /**
      * Sets the value of the 'restartFrequencyEnum' field.
      * @param value The value of 'restartFrequencyEnum'.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setRestartFrequencyEnum(java.lang.Integer value) {
      validate(fields()[7], value);
      this.restartFrequencyEnum = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'restartFrequencyEnum' field has been set.
      * @return True if the 'restartFrequencyEnum' field has been set, false otherwise.
      */
    public boolean hasRestartFrequencyEnum() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'restartFrequencyEnum' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder clearRestartFrequencyEnum() {
      restartFrequencyEnum = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'isPaymentType' field.
      * @return The value.
      */
    public java.lang.Boolean getIsPaymentType() {
      return isPaymentType;
    }


    /**
      * Sets the value of the 'isPaymentType' field.
      * @param value The value of 'isPaymentType'.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setIsPaymentType(java.lang.Boolean value) {
      validate(fields()[8], value);
      this.isPaymentType = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'isPaymentType' field has been set.
      * @return True if the 'isPaymentType' field has been set, false otherwise.
      */
    public boolean hasIsPaymentType() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'isPaymentType' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder clearIsPaymentType() {
      isPaymentType = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'paymentTypeOptions' field.
      * @return The value.
      */
    public org.apache.fineract.avro.payment.v1.PaymentTypeDataV1 getPaymentTypeOptions() {
      return paymentTypeOptions;
    }


    /**
      * Sets the value of the 'paymentTypeOptions' field.
      * @param value The value of 'paymentTypeOptions'.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setPaymentTypeOptions(org.apache.fineract.avro.payment.v1.PaymentTypeDataV1 value) {
      validate(fields()[9], value);
      this.paymentTypeOptionsBuilder = null;
      this.paymentTypeOptions = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'paymentTypeOptions' field has been set.
      * @return True if the 'paymentTypeOptions' field has been set, false otherwise.
      */
    public boolean hasPaymentTypeOptions() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'paymentTypeOptions' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder getPaymentTypeOptionsBuilder() {
      if (paymentTypeOptionsBuilder == null) {
        if (hasPaymentTypeOptions()) {
          setPaymentTypeOptionsBuilder(org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.newBuilder(paymentTypeOptions));
        } else {
          setPaymentTypeOptionsBuilder(org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.newBuilder());
        }
      }
      return paymentTypeOptionsBuilder;
    }

    /**
     * Sets the Builder instance for the 'paymentTypeOptions' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setPaymentTypeOptionsBuilder(org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder value) {
      clearPaymentTypeOptions();
      paymentTypeOptionsBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'paymentTypeOptions' field has an active Builder instance
     * @return True if the 'paymentTypeOptions' field has an active Builder instance
     */
    public boolean hasPaymentTypeOptionsBuilder() {
      return paymentTypeOptionsBuilder != null;
    }

    /**
      * Clears the value of the 'paymentTypeOptions' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder clearPaymentTypeOptions() {
      paymentTypeOptions = null;
      paymentTypeOptionsBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'currency' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.CurrencyDataV1 getCurrency() {
      return currency;
    }


    /**
      * Sets the value of the 'currency' field.
      * @param value The value of 'currency'.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setCurrency(org.apache.fineract.avro.generic.v1.CurrencyDataV1 value) {
      validate(fields()[10], value);
      this.currencyBuilder = null;
      this.currency = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'currency' field has been set.
      * @return True if the 'currency' field has been set, false otherwise.
      */
    public boolean hasCurrency() {
      return fieldSetFlags()[10];
    }

    /**
     * Gets the Builder instance for the 'currency' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder getCurrencyBuilder() {
      if (currencyBuilder == null) {
        if (hasCurrency()) {
          setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder(currency));
        } else {
          setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder());
        }
      }
      return currencyBuilder;
    }

    /**
     * Sets the Builder instance for the 'currency' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder value) {
      clearCurrency();
      currencyBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'currency' field has an active Builder instance
     * @return True if the 'currency' field has an active Builder instance
     */
    public boolean hasCurrencyBuilder() {
      return currencyBuilder != null;
    }

    /**
      * Clears the value of the 'currency' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder clearCurrency() {
      currency = null;
      currencyBuilder = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'amount' field.
      * @return The value.
      */
    public java.math.BigDecimal getAmount() {
      return amount;
    }


    /**
      * Sets the value of the 'amount' field.
      * @param value The value of 'amount'.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setAmount(java.math.BigDecimal value) {
      validate(fields()[11], value);
      this.amount = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'amount' field has been set.
      * @return True if the 'amount' field has been set, false otherwise.
      */
    public boolean hasAmount() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'amount' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder clearAmount() {
      amount = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'chargeTimeType' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getChargeTimeType() {
      return chargeTimeType;
    }


    /**
      * Sets the value of the 'chargeTimeType' field.
      * @param value The value of 'chargeTimeType'.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setChargeTimeType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[12], value);
      this.chargeTimeTypeBuilder = null;
      this.chargeTimeType = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'chargeTimeType' field has been set.
      * @return True if the 'chargeTimeType' field has been set, false otherwise.
      */
    public boolean hasChargeTimeType() {
      return fieldSetFlags()[12];
    }

    /**
     * Gets the Builder instance for the 'chargeTimeType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getChargeTimeTypeBuilder() {
      if (chargeTimeTypeBuilder == null) {
        if (hasChargeTimeType()) {
          setChargeTimeTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(chargeTimeType));
        } else {
          setChargeTimeTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return chargeTimeTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'chargeTimeType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setChargeTimeTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearChargeTimeType();
      chargeTimeTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'chargeTimeType' field has an active Builder instance
     * @return True if the 'chargeTimeType' field has an active Builder instance
     */
    public boolean hasChargeTimeTypeBuilder() {
      return chargeTimeTypeBuilder != null;
    }

    /**
      * Clears the value of the 'chargeTimeType' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder clearChargeTimeType() {
      chargeTimeType = null;
      chargeTimeTypeBuilder = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'chargeAppliesTo' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getChargeAppliesTo() {
      return chargeAppliesTo;
    }


    /**
      * Sets the value of the 'chargeAppliesTo' field.
      * @param value The value of 'chargeAppliesTo'.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setChargeAppliesTo(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[13], value);
      this.chargeAppliesToBuilder = null;
      this.chargeAppliesTo = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'chargeAppliesTo' field has been set.
      * @return True if the 'chargeAppliesTo' field has been set, false otherwise.
      */
    public boolean hasChargeAppliesTo() {
      return fieldSetFlags()[13];
    }

    /**
     * Gets the Builder instance for the 'chargeAppliesTo' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getChargeAppliesToBuilder() {
      if (chargeAppliesToBuilder == null) {
        if (hasChargeAppliesTo()) {
          setChargeAppliesToBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(chargeAppliesTo));
        } else {
          setChargeAppliesToBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return chargeAppliesToBuilder;
    }

    /**
     * Sets the Builder instance for the 'chargeAppliesTo' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setChargeAppliesToBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearChargeAppliesTo();
      chargeAppliesToBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'chargeAppliesTo' field has an active Builder instance
     * @return True if the 'chargeAppliesTo' field has an active Builder instance
     */
    public boolean hasChargeAppliesToBuilder() {
      return chargeAppliesToBuilder != null;
    }

    /**
      * Clears the value of the 'chargeAppliesTo' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder clearChargeAppliesTo() {
      chargeAppliesTo = null;
      chargeAppliesToBuilder = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'chargeCalculationType' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getChargeCalculationType() {
      return chargeCalculationType;
    }


    /**
      * Sets the value of the 'chargeCalculationType' field.
      * @param value The value of 'chargeCalculationType'.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setChargeCalculationType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[14], value);
      this.chargeCalculationTypeBuilder = null;
      this.chargeCalculationType = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'chargeCalculationType' field has been set.
      * @return True if the 'chargeCalculationType' field has been set, false otherwise.
      */
    public boolean hasChargeCalculationType() {
      return fieldSetFlags()[14];
    }

    /**
     * Gets the Builder instance for the 'chargeCalculationType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getChargeCalculationTypeBuilder() {
      if (chargeCalculationTypeBuilder == null) {
        if (hasChargeCalculationType()) {
          setChargeCalculationTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(chargeCalculationType));
        } else {
          setChargeCalculationTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return chargeCalculationTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'chargeCalculationType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setChargeCalculationTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearChargeCalculationType();
      chargeCalculationTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'chargeCalculationType' field has an active Builder instance
     * @return True if the 'chargeCalculationType' field has an active Builder instance
     */
    public boolean hasChargeCalculationTypeBuilder() {
      return chargeCalculationTypeBuilder != null;
    }

    /**
      * Clears the value of the 'chargeCalculationType' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder clearChargeCalculationType() {
      chargeCalculationType = null;
      chargeCalculationTypeBuilder = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'chargePaymentMode' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getChargePaymentMode() {
      return chargePaymentMode;
    }


    /**
      * Sets the value of the 'chargePaymentMode' field.
      * @param value The value of 'chargePaymentMode'.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setChargePaymentMode(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[15], value);
      this.chargePaymentModeBuilder = null;
      this.chargePaymentMode = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'chargePaymentMode' field has been set.
      * @return True if the 'chargePaymentMode' field has been set, false otherwise.
      */
    public boolean hasChargePaymentMode() {
      return fieldSetFlags()[15];
    }

    /**
     * Gets the Builder instance for the 'chargePaymentMode' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getChargePaymentModeBuilder() {
      if (chargePaymentModeBuilder == null) {
        if (hasChargePaymentMode()) {
          setChargePaymentModeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(chargePaymentMode));
        } else {
          setChargePaymentModeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return chargePaymentModeBuilder;
    }

    /**
     * Sets the Builder instance for the 'chargePaymentMode' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setChargePaymentModeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearChargePaymentMode();
      chargePaymentModeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'chargePaymentMode' field has an active Builder instance
     * @return True if the 'chargePaymentMode' field has an active Builder instance
     */
    public boolean hasChargePaymentModeBuilder() {
      return chargePaymentModeBuilder != null;
    }

    /**
      * Clears the value of the 'chargePaymentMode' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder clearChargePaymentMode() {
      chargePaymentMode = null;
      chargePaymentModeBuilder = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'feeOnMonthDay' field.
      * @return The value.
      */
    public java.lang.String getFeeOnMonthDay() {
      return feeOnMonthDay;
    }


    /**
      * Sets the value of the 'feeOnMonthDay' field.
      * @param value The value of 'feeOnMonthDay'.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setFeeOnMonthDay(java.lang.String value) {
      validate(fields()[16], value);
      this.feeOnMonthDay = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'feeOnMonthDay' field has been set.
      * @return True if the 'feeOnMonthDay' field has been set, false otherwise.
      */
    public boolean hasFeeOnMonthDay() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'feeOnMonthDay' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder clearFeeOnMonthDay() {
      feeOnMonthDay = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'feeInterval' field.
      * @return The value.
      */
    public java.lang.Integer getFeeInterval() {
      return feeInterval;
    }


    /**
      * Sets the value of the 'feeInterval' field.
      * @param value The value of 'feeInterval'.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setFeeInterval(java.lang.Integer value) {
      validate(fields()[17], value);
      this.feeInterval = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'feeInterval' field has been set.
      * @return True if the 'feeInterval' field has been set, false otherwise.
      */
    public boolean hasFeeInterval() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'feeInterval' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder clearFeeInterval() {
      feeInterval = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'minCap' field.
      * @return The value.
      */
    public java.math.BigDecimal getMinCap() {
      return minCap;
    }


    /**
      * Sets the value of the 'minCap' field.
      * @param value The value of 'minCap'.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setMinCap(java.math.BigDecimal value) {
      validate(fields()[18], value);
      this.minCap = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'minCap' field has been set.
      * @return True if the 'minCap' field has been set, false otherwise.
      */
    public boolean hasMinCap() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'minCap' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder clearMinCap() {
      minCap = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'maxCap' field.
      * @return The value.
      */
    public java.math.BigDecimal getMaxCap() {
      return maxCap;
    }


    /**
      * Sets the value of the 'maxCap' field.
      * @param value The value of 'maxCap'.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setMaxCap(java.math.BigDecimal value) {
      validate(fields()[19], value);
      this.maxCap = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'maxCap' field has been set.
      * @return True if the 'maxCap' field has been set, false otherwise.
      */
    public boolean hasMaxCap() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'maxCap' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder clearMaxCap() {
      maxCap = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'feeFrequency' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getFeeFrequency() {
      return feeFrequency;
    }


    /**
      * Sets the value of the 'feeFrequency' field.
      * @param value The value of 'feeFrequency'.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setFeeFrequency(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[20], value);
      this.feeFrequencyBuilder = null;
      this.feeFrequency = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'feeFrequency' field has been set.
      * @return True if the 'feeFrequency' field has been set, false otherwise.
      */
    public boolean hasFeeFrequency() {
      return fieldSetFlags()[20];
    }

    /**
     * Gets the Builder instance for the 'feeFrequency' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getFeeFrequencyBuilder() {
      if (feeFrequencyBuilder == null) {
        if (hasFeeFrequency()) {
          setFeeFrequencyBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(feeFrequency));
        } else {
          setFeeFrequencyBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return feeFrequencyBuilder;
    }

    /**
     * Sets the Builder instance for the 'feeFrequency' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setFeeFrequencyBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearFeeFrequency();
      feeFrequencyBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'feeFrequency' field has an active Builder instance
     * @return True if the 'feeFrequency' field has an active Builder instance
     */
    public boolean hasFeeFrequencyBuilder() {
      return feeFrequencyBuilder != null;
    }

    /**
      * Clears the value of the 'feeFrequency' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder clearFeeFrequency() {
      feeFrequency = null;
      feeFrequencyBuilder = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'incomeOrLiabilityAccount' field.
      * @return The value.
      */
    public org.apache.fineract.avro.gl.v1.GLAccountDataV1 getIncomeOrLiabilityAccount() {
      return incomeOrLiabilityAccount;
    }


    /**
      * Sets the value of the 'incomeOrLiabilityAccount' field.
      * @param value The value of 'incomeOrLiabilityAccount'.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setIncomeOrLiabilityAccount(org.apache.fineract.avro.gl.v1.GLAccountDataV1 value) {
      validate(fields()[21], value);
      this.incomeOrLiabilityAccountBuilder = null;
      this.incomeOrLiabilityAccount = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'incomeOrLiabilityAccount' field has been set.
      * @return True if the 'incomeOrLiabilityAccount' field has been set, false otherwise.
      */
    public boolean hasIncomeOrLiabilityAccount() {
      return fieldSetFlags()[21];
    }

    /**
     * Gets the Builder instance for the 'incomeOrLiabilityAccount' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.gl.v1.GLAccountDataV1.Builder getIncomeOrLiabilityAccountBuilder() {
      if (incomeOrLiabilityAccountBuilder == null) {
        if (hasIncomeOrLiabilityAccount()) {
          setIncomeOrLiabilityAccountBuilder(org.apache.fineract.avro.gl.v1.GLAccountDataV1.newBuilder(incomeOrLiabilityAccount));
        } else {
          setIncomeOrLiabilityAccountBuilder(org.apache.fineract.avro.gl.v1.GLAccountDataV1.newBuilder());
        }
      }
      return incomeOrLiabilityAccountBuilder;
    }

    /**
     * Sets the Builder instance for the 'incomeOrLiabilityAccount' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder setIncomeOrLiabilityAccountBuilder(org.apache.fineract.avro.gl.v1.GLAccountDataV1.Builder value) {
      clearIncomeOrLiabilityAccount();
      incomeOrLiabilityAccountBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'incomeOrLiabilityAccount' field has an active Builder instance
     * @return True if the 'incomeOrLiabilityAccount' field has an active Builder instance
     */
    public boolean hasIncomeOrLiabilityAccountBuilder() {
      return incomeOrLiabilityAccountBuilder != null;
    }

    /**
      * Clears the value of the 'incomeOrLiabilityAccount' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder clearIncomeOrLiabilityAccount() {
      incomeOrLiabilityAccount = null;
      incomeOrLiabilityAccountBuilder = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ChargeDataV1 build() {
      try {
        ChargeDataV1 record = new ChargeDataV1();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.String) defaultValue(fields()[1]);
        record.active = fieldSetFlags()[2] ? this.active : (java.lang.Boolean) defaultValue(fields()[2]);
        record.penalty = fieldSetFlags()[3] ? this.penalty : (java.lang.Boolean) defaultValue(fields()[3]);
        record.freeWithdrawal = fieldSetFlags()[4] ? this.freeWithdrawal : (java.lang.Boolean) defaultValue(fields()[4]);
        record.freeWithdrawalChargeFrequency = fieldSetFlags()[5] ? this.freeWithdrawalChargeFrequency : (java.lang.Integer) defaultValue(fields()[5]);
        record.restartFrequency = fieldSetFlags()[6] ? this.restartFrequency : (java.lang.Integer) defaultValue(fields()[6]);
        record.restartFrequencyEnum = fieldSetFlags()[7] ? this.restartFrequencyEnum : (java.lang.Integer) defaultValue(fields()[7]);
        record.isPaymentType = fieldSetFlags()[8] ? this.isPaymentType : (java.lang.Boolean) defaultValue(fields()[8]);
        if (paymentTypeOptionsBuilder != null) {
          try {
            record.paymentTypeOptions = this.paymentTypeOptionsBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("paymentTypeOptions"));
            throw e;
          }
        } else {
          record.paymentTypeOptions = fieldSetFlags()[9] ? this.paymentTypeOptions : (org.apache.fineract.avro.payment.v1.PaymentTypeDataV1) defaultValue(fields()[9]);
        }
        if (currencyBuilder != null) {
          try {
            record.currency = this.currencyBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("currency"));
            throw e;
          }
        } else {
          record.currency = fieldSetFlags()[10] ? this.currency : (org.apache.fineract.avro.generic.v1.CurrencyDataV1) defaultValue(fields()[10]);
        }
        record.amount = fieldSetFlags()[11] ? this.amount : (java.math.BigDecimal) defaultValue(fields()[11]);
        if (chargeTimeTypeBuilder != null) {
          try {
            record.chargeTimeType = this.chargeTimeTypeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("chargeTimeType"));
            throw e;
          }
        } else {
          record.chargeTimeType = fieldSetFlags()[12] ? this.chargeTimeType : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[12]);
        }
        if (chargeAppliesToBuilder != null) {
          try {
            record.chargeAppliesTo = this.chargeAppliesToBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("chargeAppliesTo"));
            throw e;
          }
        } else {
          record.chargeAppliesTo = fieldSetFlags()[13] ? this.chargeAppliesTo : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[13]);
        }
        if (chargeCalculationTypeBuilder != null) {
          try {
            record.chargeCalculationType = this.chargeCalculationTypeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("chargeCalculationType"));
            throw e;
          }
        } else {
          record.chargeCalculationType = fieldSetFlags()[14] ? this.chargeCalculationType : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[14]);
        }
        if (chargePaymentModeBuilder != null) {
          try {
            record.chargePaymentMode = this.chargePaymentModeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("chargePaymentMode"));
            throw e;
          }
        } else {
          record.chargePaymentMode = fieldSetFlags()[15] ? this.chargePaymentMode : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[15]);
        }
        record.feeOnMonthDay = fieldSetFlags()[16] ? this.feeOnMonthDay : (java.lang.String) defaultValue(fields()[16]);
        record.feeInterval = fieldSetFlags()[17] ? this.feeInterval : (java.lang.Integer) defaultValue(fields()[17]);
        record.minCap = fieldSetFlags()[18] ? this.minCap : (java.math.BigDecimal) defaultValue(fields()[18]);
        record.maxCap = fieldSetFlags()[19] ? this.maxCap : (java.math.BigDecimal) defaultValue(fields()[19]);
        if (feeFrequencyBuilder != null) {
          try {
            record.feeFrequency = this.feeFrequencyBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("feeFrequency"));
            throw e;
          }
        } else {
          record.feeFrequency = fieldSetFlags()[20] ? this.feeFrequency : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[20]);
        }
        if (incomeOrLiabilityAccountBuilder != null) {
          try {
            record.incomeOrLiabilityAccount = this.incomeOrLiabilityAccountBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("incomeOrLiabilityAccount"));
            throw e;
          }
        } else {
          record.incomeOrLiabilityAccount = fieldSetFlags()[21] ? this.incomeOrLiabilityAccount : (org.apache.fineract.avro.gl.v1.GLAccountDataV1) defaultValue(fields()[21]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ChargeDataV1>
    WRITER$ = (org.apache.avro.io.DatumWriter<ChargeDataV1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ChargeDataV1>
    READER$ = (org.apache.avro.io.DatumReader<ChargeDataV1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










