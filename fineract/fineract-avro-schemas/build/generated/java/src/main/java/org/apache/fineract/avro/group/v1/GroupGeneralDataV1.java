/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

package org.apache.fineract.avro.group.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class GroupGeneralDataV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, org.apache.fineract.avro.generator.ByteBufferSerializable {
  private static final long serialVersionUID = -960278279837811754L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"GroupGeneralDataV1\",\"namespace\":\"org.apache.fineract.avro.group.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"accountNo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"EnumOptionDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"active\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"activationDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"officeId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"officeName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"centerId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"centerName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"staffId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"staffName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"hierarchy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"groupLevel\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"groupRoles\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GroupRoleDataV1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"role\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CodeValueDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"position\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"active\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"mandatory\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"clientId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"clientName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"calendarsData\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"CalendarDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"calendarInstanceId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"entityId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"entityType\",\"type\":[\"null\",\"EnumOptionDataV1\"],\"default\":null},{\"name\":\"title\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"location\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"startDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"endDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"meetingTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"duration\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"EnumOptionDataV1\"],\"default\":null},{\"name\":\"repeating\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"recurrence\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"frequency\",\"type\":[\"null\",\"EnumOptionDataV1\"],\"default\":null},{\"name\":\"interval\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"repeatsOnDay\",\"type\":[\"null\",\"EnumOptionDataV1\"],\"default\":null},{\"name\":\"repeatsOnNthDayOfMonth\",\"type\":[\"null\",\"EnumOptionDataV1\"],\"default\":null},{\"name\":\"remindBy\",\"type\":[\"null\",\"EnumOptionDataV1\"],\"default\":null},{\"name\":\"firstReminder\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"secondReminder\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"recurringDates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"nextTenRecurringDates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"humanReadable\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"recentEligibleMeetingDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"createdDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lastUpdatedDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"createdByUserId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"createdByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lastUpdatedByUserId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"lastUpdatedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"repeatsOnDayOfMonth\",\"type\":[\"null\",\"int\"],\"default\":null}]}}],\"default\":null},{\"name\":\"collectionMeetingCalendar\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.CalendarDataV1\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<GroupGeneralDataV1> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<GroupGeneralDataV1> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<GroupGeneralDataV1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<GroupGeneralDataV1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<GroupGeneralDataV1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this GroupGeneralDataV1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  @Override
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a GroupGeneralDataV1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a GroupGeneralDataV1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static GroupGeneralDataV1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.Long id;
  private java.lang.String accountNo;
  private java.lang.String name;
  private java.lang.String externalId;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 status;
  private java.lang.Boolean active;
  private java.lang.String activationDate;
  private java.lang.Long officeId;
  private java.lang.String officeName;
  private java.lang.Long centerId;
  private java.lang.String centerName;
  private java.lang.Long staffId;
  private java.lang.String staffName;
  private java.lang.String hierarchy;
  private java.lang.String groupLevel;
  private java.util.List<org.apache.fineract.avro.group.v1.GroupRoleDataV1> groupRoles;
  private java.util.List<org.apache.fineract.avro.generic.v1.CalendarDataV1> calendarsData;
  private org.apache.fineract.avro.generic.v1.CalendarDataV1 collectionMeetingCalendar;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public GroupGeneralDataV1() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param accountNo The new value for accountNo
   * @param name The new value for name
   * @param externalId The new value for externalId
   * @param status The new value for status
   * @param active The new value for active
   * @param activationDate The new value for activationDate
   * @param officeId The new value for officeId
   * @param officeName The new value for officeName
   * @param centerId The new value for centerId
   * @param centerName The new value for centerName
   * @param staffId The new value for staffId
   * @param staffName The new value for staffName
   * @param hierarchy The new value for hierarchy
   * @param groupLevel The new value for groupLevel
   * @param groupRoles The new value for groupRoles
   * @param calendarsData The new value for calendarsData
   * @param collectionMeetingCalendar The new value for collectionMeetingCalendar
   */
  public GroupGeneralDataV1(java.lang.Long id, java.lang.String accountNo, java.lang.String name, java.lang.String externalId, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 status, java.lang.Boolean active, java.lang.String activationDate, java.lang.Long officeId, java.lang.String officeName, java.lang.Long centerId, java.lang.String centerName, java.lang.Long staffId, java.lang.String staffName, java.lang.String hierarchy, java.lang.String groupLevel, java.util.List<org.apache.fineract.avro.group.v1.GroupRoleDataV1> groupRoles, java.util.List<org.apache.fineract.avro.generic.v1.CalendarDataV1> calendarsData, org.apache.fineract.avro.generic.v1.CalendarDataV1 collectionMeetingCalendar) {
    this.id = id;
    this.accountNo = accountNo;
    this.name = name;
    this.externalId = externalId;
    this.status = status;
    this.active = active;
    this.activationDate = activationDate;
    this.officeId = officeId;
    this.officeName = officeName;
    this.centerId = centerId;
    this.centerName = centerName;
    this.staffId = staffId;
    this.staffName = staffName;
    this.hierarchy = hierarchy;
    this.groupLevel = groupLevel;
    this.groupRoles = groupRoles;
    this.calendarsData = calendarsData;
    this.collectionMeetingCalendar = collectionMeetingCalendar;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return accountNo;
    case 2: return name;
    case 3: return externalId;
    case 4: return status;
    case 5: return active;
    case 6: return activationDate;
    case 7: return officeId;
    case 8: return officeName;
    case 9: return centerId;
    case 10: return centerName;
    case 11: return staffId;
    case 12: return staffName;
    case 13: return hierarchy;
    case 14: return groupLevel;
    case 15: return groupRoles;
    case 16: return calendarsData;
    case 17: return collectionMeetingCalendar;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: accountNo = value$ != null ? value$.toString() : null; break;
    case 2: name = value$ != null ? value$.toString() : null; break;
    case 3: externalId = value$ != null ? value$.toString() : null; break;
    case 4: status = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 5: active = (java.lang.Boolean)value$; break;
    case 6: activationDate = value$ != null ? value$.toString() : null; break;
    case 7: officeId = (java.lang.Long)value$; break;
    case 8: officeName = value$ != null ? value$.toString() : null; break;
    case 9: centerId = (java.lang.Long)value$; break;
    case 10: centerName = value$ != null ? value$.toString() : null; break;
    case 11: staffId = (java.lang.Long)value$; break;
    case 12: staffName = value$ != null ? value$.toString() : null; break;
    case 13: hierarchy = value$ != null ? value$.toString() : null; break;
    case 14: groupLevel = value$ != null ? value$.toString() : null; break;
    case 15: groupRoles = (java.util.List<org.apache.fineract.avro.group.v1.GroupRoleDataV1>)value$; break;
    case 16: calendarsData = (java.util.List<org.apache.fineract.avro.generic.v1.CalendarDataV1>)value$; break;
    case 17: collectionMeetingCalendar = (org.apache.fineract.avro.generic.v1.CalendarDataV1)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'accountNo' field.
   * @return The value of the 'accountNo' field.
   */
  public java.lang.String getAccountNo() {
    return accountNo;
  }


  /**
   * Sets the value of the 'accountNo' field.
   * @param value the value to set.
   */
  public void setAccountNo(java.lang.String value) {
    this.accountNo = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'externalId' field.
   * @return The value of the 'externalId' field.
   */
  public java.lang.String getExternalId() {
    return externalId;
  }


  /**
   * Sets the value of the 'externalId' field.
   * @param value the value to set.
   */
  public void setExternalId(java.lang.String value) {
    this.externalId = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'active' field.
   * @return The value of the 'active' field.
   */
  public java.lang.Boolean getActive() {
    return active;
  }


  /**
   * Sets the value of the 'active' field.
   * @param value the value to set.
   */
  public void setActive(java.lang.Boolean value) {
    this.active = value;
  }

  /**
   * Gets the value of the 'activationDate' field.
   * @return The value of the 'activationDate' field.
   */
  public java.lang.String getActivationDate() {
    return activationDate;
  }


  /**
   * Sets the value of the 'activationDate' field.
   * @param value the value to set.
   */
  public void setActivationDate(java.lang.String value) {
    this.activationDate = value;
  }

  /**
   * Gets the value of the 'officeId' field.
   * @return The value of the 'officeId' field.
   */
  public java.lang.Long getOfficeId() {
    return officeId;
  }


  /**
   * Sets the value of the 'officeId' field.
   * @param value the value to set.
   */
  public void setOfficeId(java.lang.Long value) {
    this.officeId = value;
  }

  /**
   * Gets the value of the 'officeName' field.
   * @return The value of the 'officeName' field.
   */
  public java.lang.String getOfficeName() {
    return officeName;
  }


  /**
   * Sets the value of the 'officeName' field.
   * @param value the value to set.
   */
  public void setOfficeName(java.lang.String value) {
    this.officeName = value;
  }

  /**
   * Gets the value of the 'centerId' field.
   * @return The value of the 'centerId' field.
   */
  public java.lang.Long getCenterId() {
    return centerId;
  }


  /**
   * Sets the value of the 'centerId' field.
   * @param value the value to set.
   */
  public void setCenterId(java.lang.Long value) {
    this.centerId = value;
  }

  /**
   * Gets the value of the 'centerName' field.
   * @return The value of the 'centerName' field.
   */
  public java.lang.String getCenterName() {
    return centerName;
  }


  /**
   * Sets the value of the 'centerName' field.
   * @param value the value to set.
   */
  public void setCenterName(java.lang.String value) {
    this.centerName = value;
  }

  /**
   * Gets the value of the 'staffId' field.
   * @return The value of the 'staffId' field.
   */
  public java.lang.Long getStaffId() {
    return staffId;
  }


  /**
   * Sets the value of the 'staffId' field.
   * @param value the value to set.
   */
  public void setStaffId(java.lang.Long value) {
    this.staffId = value;
  }

  /**
   * Gets the value of the 'staffName' field.
   * @return The value of the 'staffName' field.
   */
  public java.lang.String getStaffName() {
    return staffName;
  }


  /**
   * Sets the value of the 'staffName' field.
   * @param value the value to set.
   */
  public void setStaffName(java.lang.String value) {
    this.staffName = value;
  }

  /**
   * Gets the value of the 'hierarchy' field.
   * @return The value of the 'hierarchy' field.
   */
  public java.lang.String getHierarchy() {
    return hierarchy;
  }


  /**
   * Sets the value of the 'hierarchy' field.
   * @param value the value to set.
   */
  public void setHierarchy(java.lang.String value) {
    this.hierarchy = value;
  }

  /**
   * Gets the value of the 'groupLevel' field.
   * @return The value of the 'groupLevel' field.
   */
  public java.lang.String getGroupLevel() {
    return groupLevel;
  }


  /**
   * Sets the value of the 'groupLevel' field.
   * @param value the value to set.
   */
  public void setGroupLevel(java.lang.String value) {
    this.groupLevel = value;
  }

  /**
   * Gets the value of the 'groupRoles' field.
   * @return The value of the 'groupRoles' field.
   */
  public java.util.List<org.apache.fineract.avro.group.v1.GroupRoleDataV1> getGroupRoles() {
    return groupRoles;
  }


  /**
   * Sets the value of the 'groupRoles' field.
   * @param value the value to set.
   */
  public void setGroupRoles(java.util.List<org.apache.fineract.avro.group.v1.GroupRoleDataV1> value) {
    this.groupRoles = value;
  }

  /**
   * Gets the value of the 'calendarsData' field.
   * @return The value of the 'calendarsData' field.
   */
  public java.util.List<org.apache.fineract.avro.generic.v1.CalendarDataV1> getCalendarsData() {
    return calendarsData;
  }


  /**
   * Sets the value of the 'calendarsData' field.
   * @param value the value to set.
   */
  public void setCalendarsData(java.util.List<org.apache.fineract.avro.generic.v1.CalendarDataV1> value) {
    this.calendarsData = value;
  }

  /**
   * Gets the value of the 'collectionMeetingCalendar' field.
   * @return The value of the 'collectionMeetingCalendar' field.
   */
  public org.apache.fineract.avro.generic.v1.CalendarDataV1 getCollectionMeetingCalendar() {
    return collectionMeetingCalendar;
  }


  /**
   * Sets the value of the 'collectionMeetingCalendar' field.
   * @param value the value to set.
   */
  public void setCollectionMeetingCalendar(org.apache.fineract.avro.generic.v1.CalendarDataV1 value) {
    this.collectionMeetingCalendar = value;
  }

  /**
   * Creates a new GroupGeneralDataV1 RecordBuilder.
   * @return A new GroupGeneralDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder newBuilder() {
    return new org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder();
  }

  /**
   * Creates a new GroupGeneralDataV1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new GroupGeneralDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder newBuilder(org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder other) {
    if (other == null) {
      return new org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder(other);
    }
  }

  /**
   * Creates a new GroupGeneralDataV1 RecordBuilder by copying an existing GroupGeneralDataV1 instance.
   * @param other The existing instance to copy.
   * @return A new GroupGeneralDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder newBuilder(org.apache.fineract.avro.group.v1.GroupGeneralDataV1 other) {
    if (other == null) {
      return new org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder(other);
    }
  }

  /**
   * RecordBuilder for GroupGeneralDataV1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<GroupGeneralDataV1>
    implements org.apache.avro.data.RecordBuilder<GroupGeneralDataV1> {

    private java.lang.Long id;
    private java.lang.String accountNo;
    private java.lang.String name;
    private java.lang.String externalId;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 status;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder statusBuilder;
    private java.lang.Boolean active;
    private java.lang.String activationDate;
    private java.lang.Long officeId;
    private java.lang.String officeName;
    private java.lang.Long centerId;
    private java.lang.String centerName;
    private java.lang.Long staffId;
    private java.lang.String staffName;
    private java.lang.String hierarchy;
    private java.lang.String groupLevel;
    private java.util.List<org.apache.fineract.avro.group.v1.GroupRoleDataV1> groupRoles;
    private java.util.List<org.apache.fineract.avro.generic.v1.CalendarDataV1> calendarsData;
    private org.apache.fineract.avro.generic.v1.CalendarDataV1 collectionMeetingCalendar;
    private org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder collectionMeetingCalendarBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.accountNo)) {
        this.accountNo = data().deepCopy(fields()[1].schema(), other.accountNo);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.externalId)) {
        this.externalId = data().deepCopy(fields()[3].schema(), other.externalId);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.status)) {
        this.status = data().deepCopy(fields()[4].schema(), other.status);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasStatusBuilder()) {
        this.statusBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getStatusBuilder());
      }
      if (isValidValue(fields()[5], other.active)) {
        this.active = data().deepCopy(fields()[5].schema(), other.active);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.activationDate)) {
        this.activationDate = data().deepCopy(fields()[6].schema(), other.activationDate);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.officeId)) {
        this.officeId = data().deepCopy(fields()[7].schema(), other.officeId);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.officeName)) {
        this.officeName = data().deepCopy(fields()[8].schema(), other.officeName);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.centerId)) {
        this.centerId = data().deepCopy(fields()[9].schema(), other.centerId);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.centerName)) {
        this.centerName = data().deepCopy(fields()[10].schema(), other.centerName);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.staffId)) {
        this.staffId = data().deepCopy(fields()[11].schema(), other.staffId);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.staffName)) {
        this.staffName = data().deepCopy(fields()[12].schema(), other.staffName);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.hierarchy)) {
        this.hierarchy = data().deepCopy(fields()[13].schema(), other.hierarchy);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.groupLevel)) {
        this.groupLevel = data().deepCopy(fields()[14].schema(), other.groupLevel);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.groupRoles)) {
        this.groupRoles = data().deepCopy(fields()[15].schema(), other.groupRoles);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.calendarsData)) {
        this.calendarsData = data().deepCopy(fields()[16].schema(), other.calendarsData);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.collectionMeetingCalendar)) {
        this.collectionMeetingCalendar = data().deepCopy(fields()[17].schema(), other.collectionMeetingCalendar);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (other.hasCollectionMeetingCalendarBuilder()) {
        this.collectionMeetingCalendarBuilder = org.apache.fineract.avro.generic.v1.CalendarDataV1.newBuilder(other.getCollectionMeetingCalendarBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing GroupGeneralDataV1 instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.fineract.avro.group.v1.GroupGeneralDataV1 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.accountNo)) {
        this.accountNo = data().deepCopy(fields()[1].schema(), other.accountNo);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.externalId)) {
        this.externalId = data().deepCopy(fields()[3].schema(), other.externalId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.status)) {
        this.status = data().deepCopy(fields()[4].schema(), other.status);
        fieldSetFlags()[4] = true;
      }
      this.statusBuilder = null;
      if (isValidValue(fields()[5], other.active)) {
        this.active = data().deepCopy(fields()[5].schema(), other.active);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.activationDate)) {
        this.activationDate = data().deepCopy(fields()[6].schema(), other.activationDate);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.officeId)) {
        this.officeId = data().deepCopy(fields()[7].schema(), other.officeId);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.officeName)) {
        this.officeName = data().deepCopy(fields()[8].schema(), other.officeName);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.centerId)) {
        this.centerId = data().deepCopy(fields()[9].schema(), other.centerId);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.centerName)) {
        this.centerName = data().deepCopy(fields()[10].schema(), other.centerName);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.staffId)) {
        this.staffId = data().deepCopy(fields()[11].schema(), other.staffId);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.staffName)) {
        this.staffName = data().deepCopy(fields()[12].schema(), other.staffName);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.hierarchy)) {
        this.hierarchy = data().deepCopy(fields()[13].schema(), other.hierarchy);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.groupLevel)) {
        this.groupLevel = data().deepCopy(fields()[14].schema(), other.groupLevel);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.groupRoles)) {
        this.groupRoles = data().deepCopy(fields()[15].schema(), other.groupRoles);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.calendarsData)) {
        this.calendarsData = data().deepCopy(fields()[16].schema(), other.calendarsData);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.collectionMeetingCalendar)) {
        this.collectionMeetingCalendar = data().deepCopy(fields()[17].schema(), other.collectionMeetingCalendar);
        fieldSetFlags()[17] = true;
      }
      this.collectionMeetingCalendarBuilder = null;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder setId(java.lang.Long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'accountNo' field.
      * @return The value.
      */
    public java.lang.String getAccountNo() {
      return accountNo;
    }


    /**
      * Sets the value of the 'accountNo' field.
      * @param value The value of 'accountNo'.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder setAccountNo(java.lang.String value) {
      validate(fields()[1], value);
      this.accountNo = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'accountNo' field has been set.
      * @return True if the 'accountNo' field has been set, false otherwise.
      */
    public boolean hasAccountNo() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'accountNo' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder clearAccountNo() {
      accountNo = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder setName(java.lang.String value) {
      validate(fields()[2], value);
      this.name = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder clearName() {
      name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'externalId' field.
      * @return The value.
      */
    public java.lang.String getExternalId() {
      return externalId;
    }


    /**
      * Sets the value of the 'externalId' field.
      * @param value The value of 'externalId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder setExternalId(java.lang.String value) {
      validate(fields()[3], value);
      this.externalId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'externalId' field has been set.
      * @return True if the 'externalId' field has been set, false otherwise.
      */
    public boolean hasExternalId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'externalId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder clearExternalId() {
      externalId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder setStatus(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[4], value);
      this.statusBuilder = null;
      this.status = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'status' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getStatusBuilder() {
      if (statusBuilder == null) {
        if (hasStatus()) {
          setStatusBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(status));
        } else {
          setStatusBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return statusBuilder;
    }

    /**
     * Sets the Builder instance for the 'status' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder setStatusBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearStatus();
      statusBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'status' field has an active Builder instance
     * @return True if the 'status' field has an active Builder instance
     */
    public boolean hasStatusBuilder() {
      return statusBuilder != null;
    }

    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder clearStatus() {
      status = null;
      statusBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'active' field.
      * @return The value.
      */
    public java.lang.Boolean getActive() {
      return active;
    }


    /**
      * Sets the value of the 'active' field.
      * @param value The value of 'active'.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder setActive(java.lang.Boolean value) {
      validate(fields()[5], value);
      this.active = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'active' field has been set.
      * @return True if the 'active' field has been set, false otherwise.
      */
    public boolean hasActive() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'active' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder clearActive() {
      active = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'activationDate' field.
      * @return The value.
      */
    public java.lang.String getActivationDate() {
      return activationDate;
    }


    /**
      * Sets the value of the 'activationDate' field.
      * @param value The value of 'activationDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder setActivationDate(java.lang.String value) {
      validate(fields()[6], value);
      this.activationDate = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'activationDate' field has been set.
      * @return True if the 'activationDate' field has been set, false otherwise.
      */
    public boolean hasActivationDate() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'activationDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder clearActivationDate() {
      activationDate = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'officeId' field.
      * @return The value.
      */
    public java.lang.Long getOfficeId() {
      return officeId;
    }


    /**
      * Sets the value of the 'officeId' field.
      * @param value The value of 'officeId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder setOfficeId(java.lang.Long value) {
      validate(fields()[7], value);
      this.officeId = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'officeId' field has been set.
      * @return True if the 'officeId' field has been set, false otherwise.
      */
    public boolean hasOfficeId() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'officeId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder clearOfficeId() {
      officeId = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'officeName' field.
      * @return The value.
      */
    public java.lang.String getOfficeName() {
      return officeName;
    }


    /**
      * Sets the value of the 'officeName' field.
      * @param value The value of 'officeName'.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder setOfficeName(java.lang.String value) {
      validate(fields()[8], value);
      this.officeName = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'officeName' field has been set.
      * @return True if the 'officeName' field has been set, false otherwise.
      */
    public boolean hasOfficeName() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'officeName' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder clearOfficeName() {
      officeName = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'centerId' field.
      * @return The value.
      */
    public java.lang.Long getCenterId() {
      return centerId;
    }


    /**
      * Sets the value of the 'centerId' field.
      * @param value The value of 'centerId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder setCenterId(java.lang.Long value) {
      validate(fields()[9], value);
      this.centerId = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'centerId' field has been set.
      * @return True if the 'centerId' field has been set, false otherwise.
      */
    public boolean hasCenterId() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'centerId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder clearCenterId() {
      centerId = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'centerName' field.
      * @return The value.
      */
    public java.lang.String getCenterName() {
      return centerName;
    }


    /**
      * Sets the value of the 'centerName' field.
      * @param value The value of 'centerName'.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder setCenterName(java.lang.String value) {
      validate(fields()[10], value);
      this.centerName = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'centerName' field has been set.
      * @return True if the 'centerName' field has been set, false otherwise.
      */
    public boolean hasCenterName() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'centerName' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder clearCenterName() {
      centerName = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'staffId' field.
      * @return The value.
      */
    public java.lang.Long getStaffId() {
      return staffId;
    }


    /**
      * Sets the value of the 'staffId' field.
      * @param value The value of 'staffId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder setStaffId(java.lang.Long value) {
      validate(fields()[11], value);
      this.staffId = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'staffId' field has been set.
      * @return True if the 'staffId' field has been set, false otherwise.
      */
    public boolean hasStaffId() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'staffId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder clearStaffId() {
      staffId = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'staffName' field.
      * @return The value.
      */
    public java.lang.String getStaffName() {
      return staffName;
    }


    /**
      * Sets the value of the 'staffName' field.
      * @param value The value of 'staffName'.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder setStaffName(java.lang.String value) {
      validate(fields()[12], value);
      this.staffName = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'staffName' field has been set.
      * @return True if the 'staffName' field has been set, false otherwise.
      */
    public boolean hasStaffName() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'staffName' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder clearStaffName() {
      staffName = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'hierarchy' field.
      * @return The value.
      */
    public java.lang.String getHierarchy() {
      return hierarchy;
    }


    /**
      * Sets the value of the 'hierarchy' field.
      * @param value The value of 'hierarchy'.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder setHierarchy(java.lang.String value) {
      validate(fields()[13], value);
      this.hierarchy = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'hierarchy' field has been set.
      * @return True if the 'hierarchy' field has been set, false otherwise.
      */
    public boolean hasHierarchy() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'hierarchy' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder clearHierarchy() {
      hierarchy = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'groupLevel' field.
      * @return The value.
      */
    public java.lang.String getGroupLevel() {
      return groupLevel;
    }


    /**
      * Sets the value of the 'groupLevel' field.
      * @param value The value of 'groupLevel'.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder setGroupLevel(java.lang.String value) {
      validate(fields()[14], value);
      this.groupLevel = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'groupLevel' field has been set.
      * @return True if the 'groupLevel' field has been set, false otherwise.
      */
    public boolean hasGroupLevel() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'groupLevel' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder clearGroupLevel() {
      groupLevel = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'groupRoles' field.
      * @return The value.
      */
    public java.util.List<org.apache.fineract.avro.group.v1.GroupRoleDataV1> getGroupRoles() {
      return groupRoles;
    }


    /**
      * Sets the value of the 'groupRoles' field.
      * @param value The value of 'groupRoles'.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder setGroupRoles(java.util.List<org.apache.fineract.avro.group.v1.GroupRoleDataV1> value) {
      validate(fields()[15], value);
      this.groupRoles = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'groupRoles' field has been set.
      * @return True if the 'groupRoles' field has been set, false otherwise.
      */
    public boolean hasGroupRoles() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'groupRoles' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder clearGroupRoles() {
      groupRoles = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'calendarsData' field.
      * @return The value.
      */
    public java.util.List<org.apache.fineract.avro.generic.v1.CalendarDataV1> getCalendarsData() {
      return calendarsData;
    }


    /**
      * Sets the value of the 'calendarsData' field.
      * @param value The value of 'calendarsData'.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder setCalendarsData(java.util.List<org.apache.fineract.avro.generic.v1.CalendarDataV1> value) {
      validate(fields()[16], value);
      this.calendarsData = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'calendarsData' field has been set.
      * @return True if the 'calendarsData' field has been set, false otherwise.
      */
    public boolean hasCalendarsData() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'calendarsData' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder clearCalendarsData() {
      calendarsData = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'collectionMeetingCalendar' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1 getCollectionMeetingCalendar() {
      return collectionMeetingCalendar;
    }


    /**
      * Sets the value of the 'collectionMeetingCalendar' field.
      * @param value The value of 'collectionMeetingCalendar'.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder setCollectionMeetingCalendar(org.apache.fineract.avro.generic.v1.CalendarDataV1 value) {
      validate(fields()[17], value);
      this.collectionMeetingCalendarBuilder = null;
      this.collectionMeetingCalendar = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'collectionMeetingCalendar' field has been set.
      * @return True if the 'collectionMeetingCalendar' field has been set, false otherwise.
      */
    public boolean hasCollectionMeetingCalendar() {
      return fieldSetFlags()[17];
    }

    /**
     * Gets the Builder instance for the 'collectionMeetingCalendar' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder getCollectionMeetingCalendarBuilder() {
      if (collectionMeetingCalendarBuilder == null) {
        if (hasCollectionMeetingCalendar()) {
          setCollectionMeetingCalendarBuilder(org.apache.fineract.avro.generic.v1.CalendarDataV1.newBuilder(collectionMeetingCalendar));
        } else {
          setCollectionMeetingCalendarBuilder(org.apache.fineract.avro.generic.v1.CalendarDataV1.newBuilder());
        }
      }
      return collectionMeetingCalendarBuilder;
    }

    /**
     * Sets the Builder instance for the 'collectionMeetingCalendar' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder setCollectionMeetingCalendarBuilder(org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder value) {
      clearCollectionMeetingCalendar();
      collectionMeetingCalendarBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'collectionMeetingCalendar' field has an active Builder instance
     * @return True if the 'collectionMeetingCalendar' field has an active Builder instance
     */
    public boolean hasCollectionMeetingCalendarBuilder() {
      return collectionMeetingCalendarBuilder != null;
    }

    /**
      * Clears the value of the 'collectionMeetingCalendar' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.group.v1.GroupGeneralDataV1.Builder clearCollectionMeetingCalendar() {
      collectionMeetingCalendar = null;
      collectionMeetingCalendarBuilder = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public GroupGeneralDataV1 build() {
      try {
        GroupGeneralDataV1 record = new GroupGeneralDataV1();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.accountNo = fieldSetFlags()[1] ? this.accountNo : (java.lang.String) defaultValue(fields()[1]);
        record.name = fieldSetFlags()[2] ? this.name : (java.lang.String) defaultValue(fields()[2]);
        record.externalId = fieldSetFlags()[3] ? this.externalId : (java.lang.String) defaultValue(fields()[3]);
        if (statusBuilder != null) {
          try {
            record.status = this.statusBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("status"));
            throw e;
          }
        } else {
          record.status = fieldSetFlags()[4] ? this.status : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[4]);
        }
        record.active = fieldSetFlags()[5] ? this.active : (java.lang.Boolean) defaultValue(fields()[5]);
        record.activationDate = fieldSetFlags()[6] ? this.activationDate : (java.lang.String) defaultValue(fields()[6]);
        record.officeId = fieldSetFlags()[7] ? this.officeId : (java.lang.Long) defaultValue(fields()[7]);
        record.officeName = fieldSetFlags()[8] ? this.officeName : (java.lang.String) defaultValue(fields()[8]);
        record.centerId = fieldSetFlags()[9] ? this.centerId : (java.lang.Long) defaultValue(fields()[9]);
        record.centerName = fieldSetFlags()[10] ? this.centerName : (java.lang.String) defaultValue(fields()[10]);
        record.staffId = fieldSetFlags()[11] ? this.staffId : (java.lang.Long) defaultValue(fields()[11]);
        record.staffName = fieldSetFlags()[12] ? this.staffName : (java.lang.String) defaultValue(fields()[12]);
        record.hierarchy = fieldSetFlags()[13] ? this.hierarchy : (java.lang.String) defaultValue(fields()[13]);
        record.groupLevel = fieldSetFlags()[14] ? this.groupLevel : (java.lang.String) defaultValue(fields()[14]);
        record.groupRoles = fieldSetFlags()[15] ? this.groupRoles : (java.util.List<org.apache.fineract.avro.group.v1.GroupRoleDataV1>) defaultValue(fields()[15]);
        record.calendarsData = fieldSetFlags()[16] ? this.calendarsData : (java.util.List<org.apache.fineract.avro.generic.v1.CalendarDataV1>) defaultValue(fields()[16]);
        if (collectionMeetingCalendarBuilder != null) {
          try {
            record.collectionMeetingCalendar = this.collectionMeetingCalendarBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("collectionMeetingCalendar"));
            throw e;
          }
        } else {
          record.collectionMeetingCalendar = fieldSetFlags()[17] ? this.collectionMeetingCalendar : (org.apache.fineract.avro.generic.v1.CalendarDataV1) defaultValue(fields()[17]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<GroupGeneralDataV1>
    WRITER$ = (org.apache.avro.io.DatumWriter<GroupGeneralDataV1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<GroupGeneralDataV1>
    READER$ = (org.apache.avro.io.DatumReader<GroupGeneralDataV1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.id);
    }

    if (this.accountNo == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.accountNo);
    }

    if (this.name == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.name);
    }

    if (this.externalId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.externalId);
    }

    if (this.status == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.status.customEncode(out);
    }

    if (this.active == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.active);
    }

    if (this.activationDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.activationDate);
    }

    if (this.officeId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.officeId);
    }

    if (this.officeName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.officeName);
    }

    if (this.centerId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.centerId);
    }

    if (this.centerName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.centerName);
    }

    if (this.staffId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.staffId);
    }

    if (this.staffName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.staffName);
    }

    if (this.hierarchy == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.hierarchy);
    }

    if (this.groupLevel == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.groupLevel);
    }

    if (this.groupRoles == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.groupRoles.size();
      out.writeArrayStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (org.apache.fineract.avro.group.v1.GroupRoleDataV1 e0: this.groupRoles) {
        actualSize0++;
        out.startItem();
        e0.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize0 != size0)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

    if (this.calendarsData == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size1 = this.calendarsData.size();
      out.writeArrayStart();
      out.setItemCount(size1);
      long actualSize1 = 0;
      for (org.apache.fineract.avro.generic.v1.CalendarDataV1 e1: this.calendarsData) {
        actualSize1++;
        out.startItem();
        e1.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize1 != size1)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");
    }

    if (this.collectionMeetingCalendar == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.collectionMeetingCalendar.customEncode(out);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.id = null;
      } else {
        this.id = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.accountNo = null;
      } else {
        this.accountNo = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.name = null;
      } else {
        this.name = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.externalId = null;
      } else {
        this.externalId = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.status = null;
      } else {
        if (this.status == null) {
          this.status = new org.apache.fineract.avro.generic.v1.EnumOptionDataV1();
        }
        this.status.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.active = null;
      } else {
        this.active = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.activationDate = null;
      } else {
        this.activationDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.officeId = null;
      } else {
        this.officeId = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.officeName = null;
      } else {
        this.officeName = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.centerId = null;
      } else {
        this.centerId = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.centerName = null;
      } else {
        this.centerName = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.staffId = null;
      } else {
        this.staffId = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.staffName = null;
      } else {
        this.staffName = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.hierarchy = null;
      } else {
        this.hierarchy = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.groupLevel = null;
      } else {
        this.groupLevel = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.groupRoles = null;
      } else {
        long size0 = in.readArrayStart();
        java.util.List<org.apache.fineract.avro.group.v1.GroupRoleDataV1> a0 = this.groupRoles;
        if (a0 == null) {
          a0 = new SpecificData.Array<org.apache.fineract.avro.group.v1.GroupRoleDataV1>((int)size0, SCHEMA$.getField("groupRoles").schema().getTypes().get(1));
          this.groupRoles = a0;
        } else a0.clear();
        SpecificData.Array<org.apache.fineract.avro.group.v1.GroupRoleDataV1> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<org.apache.fineract.avro.group.v1.GroupRoleDataV1>)a0 : null);
        for ( ; 0 < size0; size0 = in.arrayNext()) {
          for ( ; size0 != 0; size0--) {
            org.apache.fineract.avro.group.v1.GroupRoleDataV1 e0 = (ga0 != null ? ga0.peek() : null);
            if (e0 == null) {
              e0 = new org.apache.fineract.avro.group.v1.GroupRoleDataV1();
            }
            e0.customDecode(in);
            a0.add(e0);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.calendarsData = null;
      } else {
        long size1 = in.readArrayStart();
        java.util.List<org.apache.fineract.avro.generic.v1.CalendarDataV1> a1 = this.calendarsData;
        if (a1 == null) {
          a1 = new SpecificData.Array<org.apache.fineract.avro.generic.v1.CalendarDataV1>((int)size1, SCHEMA$.getField("calendarsData").schema().getTypes().get(1));
          this.calendarsData = a1;
        } else a1.clear();
        SpecificData.Array<org.apache.fineract.avro.generic.v1.CalendarDataV1> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<org.apache.fineract.avro.generic.v1.CalendarDataV1>)a1 : null);
        for ( ; 0 < size1; size1 = in.arrayNext()) {
          for ( ; size1 != 0; size1--) {
            org.apache.fineract.avro.generic.v1.CalendarDataV1 e1 = (ga1 != null ? ga1.peek() : null);
            if (e1 == null) {
              e1 = new org.apache.fineract.avro.generic.v1.CalendarDataV1();
            }
            e1.customDecode(in);
            a1.add(e1);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.collectionMeetingCalendar = null;
      } else {
        if (this.collectionMeetingCalendar == null) {
          this.collectionMeetingCalendar = new org.apache.fineract.avro.generic.v1.CalendarDataV1();
        }
        this.collectionMeetingCalendar.customDecode(in);
      }

    } else {
      for (int i = 0; i < 18; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.id = null;
          } else {
            this.id = in.readLong();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.accountNo = null;
          } else {
            this.accountNo = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.name = null;
          } else {
            this.name = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.externalId = null;
          } else {
            this.externalId = in.readString();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.status = null;
          } else {
            if (this.status == null) {
              this.status = new org.apache.fineract.avro.generic.v1.EnumOptionDataV1();
            }
            this.status.customDecode(in);
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.active = null;
          } else {
            this.active = in.readBoolean();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.activationDate = null;
          } else {
            this.activationDate = in.readString();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.officeId = null;
          } else {
            this.officeId = in.readLong();
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.officeName = null;
          } else {
            this.officeName = in.readString();
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.centerId = null;
          } else {
            this.centerId = in.readLong();
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.centerName = null;
          } else {
            this.centerName = in.readString();
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.staffId = null;
          } else {
            this.staffId = in.readLong();
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.staffName = null;
          } else {
            this.staffName = in.readString();
          }
          break;

        case 13:
          if (in.readIndex() != 1) {
            in.readNull();
            this.hierarchy = null;
          } else {
            this.hierarchy = in.readString();
          }
          break;

        case 14:
          if (in.readIndex() != 1) {
            in.readNull();
            this.groupLevel = null;
          } else {
            this.groupLevel = in.readString();
          }
          break;

        case 15:
          if (in.readIndex() != 1) {
            in.readNull();
            this.groupRoles = null;
          } else {
            long size0 = in.readArrayStart();
            java.util.List<org.apache.fineract.avro.group.v1.GroupRoleDataV1> a0 = this.groupRoles;
            if (a0 == null) {
              a0 = new SpecificData.Array<org.apache.fineract.avro.group.v1.GroupRoleDataV1>((int)size0, SCHEMA$.getField("groupRoles").schema().getTypes().get(1));
              this.groupRoles = a0;
            } else a0.clear();
            SpecificData.Array<org.apache.fineract.avro.group.v1.GroupRoleDataV1> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<org.apache.fineract.avro.group.v1.GroupRoleDataV1>)a0 : null);
            for ( ; 0 < size0; size0 = in.arrayNext()) {
              for ( ; size0 != 0; size0--) {
                org.apache.fineract.avro.group.v1.GroupRoleDataV1 e0 = (ga0 != null ? ga0.peek() : null);
                if (e0 == null) {
                  e0 = new org.apache.fineract.avro.group.v1.GroupRoleDataV1();
                }
                e0.customDecode(in);
                a0.add(e0);
              }
            }
          }
          break;

        case 16:
          if (in.readIndex() != 1) {
            in.readNull();
            this.calendarsData = null;
          } else {
            long size1 = in.readArrayStart();
            java.util.List<org.apache.fineract.avro.generic.v1.CalendarDataV1> a1 = this.calendarsData;
            if (a1 == null) {
              a1 = new SpecificData.Array<org.apache.fineract.avro.generic.v1.CalendarDataV1>((int)size1, SCHEMA$.getField("calendarsData").schema().getTypes().get(1));
              this.calendarsData = a1;
            } else a1.clear();
            SpecificData.Array<org.apache.fineract.avro.generic.v1.CalendarDataV1> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<org.apache.fineract.avro.generic.v1.CalendarDataV1>)a1 : null);
            for ( ; 0 < size1; size1 = in.arrayNext()) {
              for ( ; size1 != 0; size1--) {
                org.apache.fineract.avro.generic.v1.CalendarDataV1 e1 = (ga1 != null ? ga1.peek() : null);
                if (e1 == null) {
                  e1 = new org.apache.fineract.avro.generic.v1.CalendarDataV1();
                }
                e1.customDecode(in);
                a1.add(e1);
              }
            }
          }
          break;

        case 17:
          if (in.readIndex() != 1) {
            in.readNull();
            this.collectionMeetingCalendar = null;
          } else {
            if (this.collectionMeetingCalendar == null) {
              this.collectionMeetingCalendar = new org.apache.fineract.avro.generic.v1.CalendarDataV1();
            }
            this.collectionMeetingCalendar.customDecode(in);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










