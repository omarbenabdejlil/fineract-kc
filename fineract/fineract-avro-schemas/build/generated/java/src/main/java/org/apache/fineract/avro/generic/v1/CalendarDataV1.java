/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

package org.apache.fineract.avro.generic.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class CalendarDataV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, org.apache.fineract.avro.generator.ByteBufferSerializable {
  private static final long serialVersionUID = 9081554111878283045L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CalendarDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"calendarInstanceId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"entityId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"entityType\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"EnumOptionDataV1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"title\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"location\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"startDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"endDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"meetingTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"duration\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"EnumOptionDataV1\"],\"default\":null},{\"name\":\"repeating\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"recurrence\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"frequency\",\"type\":[\"null\",\"EnumOptionDataV1\"],\"default\":null},{\"name\":\"interval\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"repeatsOnDay\",\"type\":[\"null\",\"EnumOptionDataV1\"],\"default\":null},{\"name\":\"repeatsOnNthDayOfMonth\",\"type\":[\"null\",\"EnumOptionDataV1\"],\"default\":null},{\"name\":\"remindBy\",\"type\":[\"null\",\"EnumOptionDataV1\"],\"default\":null},{\"name\":\"firstReminder\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"secondReminder\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"recurringDates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"nextTenRecurringDates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"humanReadable\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"recentEligibleMeetingDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"createdDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lastUpdatedDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"createdByUserId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"createdByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lastUpdatedByUserId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"lastUpdatedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"repeatsOnDayOfMonth\",\"type\":[\"null\",\"int\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CalendarDataV1> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CalendarDataV1> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CalendarDataV1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CalendarDataV1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CalendarDataV1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CalendarDataV1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  @Override
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CalendarDataV1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CalendarDataV1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CalendarDataV1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.Long id;
  private java.lang.Long calendarInstanceId;
  private java.lang.Long entityId;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 entityType;
  private java.lang.String title;
  private java.lang.String description;
  private java.lang.String location;
  private java.lang.String startDate;
  private java.lang.String endDate;
  private java.lang.String meetingTime;
  private java.lang.Integer duration;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 type;
  private java.lang.Boolean repeating;
  private java.lang.String recurrence;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 frequency;
  private java.lang.Integer interval;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 repeatsOnDay;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 repeatsOnNthDayOfMonth;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 remindBy;
  private java.lang.Integer firstReminder;
  private java.lang.Integer secondReminder;
  private java.util.List<java.lang.String> recurringDates;
  private java.util.List<java.lang.String> nextTenRecurringDates;
  private java.lang.String humanReadable;
  private java.lang.String recentEligibleMeetingDate;
  private java.lang.String createdDate;
  private java.lang.String lastUpdatedDate;
  private java.lang.Long createdByUserId;
  private java.lang.String createdByUsername;
  private java.lang.Long lastUpdatedByUserId;
  private java.lang.String lastUpdatedByUsername;
  private java.lang.Integer repeatsOnDayOfMonth;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CalendarDataV1() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param calendarInstanceId The new value for calendarInstanceId
   * @param entityId The new value for entityId
   * @param entityType The new value for entityType
   * @param title The new value for title
   * @param description The new value for description
   * @param location The new value for location
   * @param startDate The new value for startDate
   * @param endDate The new value for endDate
   * @param meetingTime The new value for meetingTime
   * @param duration The new value for duration
   * @param type The new value for type
   * @param repeating The new value for repeating
   * @param recurrence The new value for recurrence
   * @param frequency The new value for frequency
   * @param interval The new value for interval
   * @param repeatsOnDay The new value for repeatsOnDay
   * @param repeatsOnNthDayOfMonth The new value for repeatsOnNthDayOfMonth
   * @param remindBy The new value for remindBy
   * @param firstReminder The new value for firstReminder
   * @param secondReminder The new value for secondReminder
   * @param recurringDates The new value for recurringDates
   * @param nextTenRecurringDates The new value for nextTenRecurringDates
   * @param humanReadable The new value for humanReadable
   * @param recentEligibleMeetingDate The new value for recentEligibleMeetingDate
   * @param createdDate The new value for createdDate
   * @param lastUpdatedDate The new value for lastUpdatedDate
   * @param createdByUserId The new value for createdByUserId
   * @param createdByUsername The new value for createdByUsername
   * @param lastUpdatedByUserId The new value for lastUpdatedByUserId
   * @param lastUpdatedByUsername The new value for lastUpdatedByUsername
   * @param repeatsOnDayOfMonth The new value for repeatsOnDayOfMonth
   */
  public CalendarDataV1(java.lang.Long id, java.lang.Long calendarInstanceId, java.lang.Long entityId, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 entityType, java.lang.String title, java.lang.String description, java.lang.String location, java.lang.String startDate, java.lang.String endDate, java.lang.String meetingTime, java.lang.Integer duration, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 type, java.lang.Boolean repeating, java.lang.String recurrence, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 frequency, java.lang.Integer interval, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 repeatsOnDay, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 repeatsOnNthDayOfMonth, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 remindBy, java.lang.Integer firstReminder, java.lang.Integer secondReminder, java.util.List<java.lang.String> recurringDates, java.util.List<java.lang.String> nextTenRecurringDates, java.lang.String humanReadable, java.lang.String recentEligibleMeetingDate, java.lang.String createdDate, java.lang.String lastUpdatedDate, java.lang.Long createdByUserId, java.lang.String createdByUsername, java.lang.Long lastUpdatedByUserId, java.lang.String lastUpdatedByUsername, java.lang.Integer repeatsOnDayOfMonth) {
    this.id = id;
    this.calendarInstanceId = calendarInstanceId;
    this.entityId = entityId;
    this.entityType = entityType;
    this.title = title;
    this.description = description;
    this.location = location;
    this.startDate = startDate;
    this.endDate = endDate;
    this.meetingTime = meetingTime;
    this.duration = duration;
    this.type = type;
    this.repeating = repeating;
    this.recurrence = recurrence;
    this.frequency = frequency;
    this.interval = interval;
    this.repeatsOnDay = repeatsOnDay;
    this.repeatsOnNthDayOfMonth = repeatsOnNthDayOfMonth;
    this.remindBy = remindBy;
    this.firstReminder = firstReminder;
    this.secondReminder = secondReminder;
    this.recurringDates = recurringDates;
    this.nextTenRecurringDates = nextTenRecurringDates;
    this.humanReadable = humanReadable;
    this.recentEligibleMeetingDate = recentEligibleMeetingDate;
    this.createdDate = createdDate;
    this.lastUpdatedDate = lastUpdatedDate;
    this.createdByUserId = createdByUserId;
    this.createdByUsername = createdByUsername;
    this.lastUpdatedByUserId = lastUpdatedByUserId;
    this.lastUpdatedByUsername = lastUpdatedByUsername;
    this.repeatsOnDayOfMonth = repeatsOnDayOfMonth;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return calendarInstanceId;
    case 2: return entityId;
    case 3: return entityType;
    case 4: return title;
    case 5: return description;
    case 6: return location;
    case 7: return startDate;
    case 8: return endDate;
    case 9: return meetingTime;
    case 10: return duration;
    case 11: return type;
    case 12: return repeating;
    case 13: return recurrence;
    case 14: return frequency;
    case 15: return interval;
    case 16: return repeatsOnDay;
    case 17: return repeatsOnNthDayOfMonth;
    case 18: return remindBy;
    case 19: return firstReminder;
    case 20: return secondReminder;
    case 21: return recurringDates;
    case 22: return nextTenRecurringDates;
    case 23: return humanReadable;
    case 24: return recentEligibleMeetingDate;
    case 25: return createdDate;
    case 26: return lastUpdatedDate;
    case 27: return createdByUserId;
    case 28: return createdByUsername;
    case 29: return lastUpdatedByUserId;
    case 30: return lastUpdatedByUsername;
    case 31: return repeatsOnDayOfMonth;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: calendarInstanceId = (java.lang.Long)value$; break;
    case 2: entityId = (java.lang.Long)value$; break;
    case 3: entityType = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 4: title = value$ != null ? value$.toString() : null; break;
    case 5: description = value$ != null ? value$.toString() : null; break;
    case 6: location = value$ != null ? value$.toString() : null; break;
    case 7: startDate = value$ != null ? value$.toString() : null; break;
    case 8: endDate = value$ != null ? value$.toString() : null; break;
    case 9: meetingTime = value$ != null ? value$.toString() : null; break;
    case 10: duration = (java.lang.Integer)value$; break;
    case 11: type = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 12: repeating = (java.lang.Boolean)value$; break;
    case 13: recurrence = value$ != null ? value$.toString() : null; break;
    case 14: frequency = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 15: interval = (java.lang.Integer)value$; break;
    case 16: repeatsOnDay = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 17: repeatsOnNthDayOfMonth = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 18: remindBy = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 19: firstReminder = (java.lang.Integer)value$; break;
    case 20: secondReminder = (java.lang.Integer)value$; break;
    case 21: recurringDates = (java.util.List<java.lang.String>)value$; break;
    case 22: nextTenRecurringDates = (java.util.List<java.lang.String>)value$; break;
    case 23: humanReadable = value$ != null ? value$.toString() : null; break;
    case 24: recentEligibleMeetingDate = value$ != null ? value$.toString() : null; break;
    case 25: createdDate = value$ != null ? value$.toString() : null; break;
    case 26: lastUpdatedDate = value$ != null ? value$.toString() : null; break;
    case 27: createdByUserId = (java.lang.Long)value$; break;
    case 28: createdByUsername = value$ != null ? value$.toString() : null; break;
    case 29: lastUpdatedByUserId = (java.lang.Long)value$; break;
    case 30: lastUpdatedByUsername = value$ != null ? value$.toString() : null; break;
    case 31: repeatsOnDayOfMonth = (java.lang.Integer)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'calendarInstanceId' field.
   * @return The value of the 'calendarInstanceId' field.
   */
  public java.lang.Long getCalendarInstanceId() {
    return calendarInstanceId;
  }


  /**
   * Sets the value of the 'calendarInstanceId' field.
   * @param value the value to set.
   */
  public void setCalendarInstanceId(java.lang.Long value) {
    this.calendarInstanceId = value;
  }

  /**
   * Gets the value of the 'entityId' field.
   * @return The value of the 'entityId' field.
   */
  public java.lang.Long getEntityId() {
    return entityId;
  }


  /**
   * Sets the value of the 'entityId' field.
   * @param value the value to set.
   */
  public void setEntityId(java.lang.Long value) {
    this.entityId = value;
  }

  /**
   * Gets the value of the 'entityType' field.
   * @return The value of the 'entityType' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getEntityType() {
    return entityType;
  }


  /**
   * Sets the value of the 'entityType' field.
   * @param value the value to set.
   */
  public void setEntityType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.entityType = value;
  }

  /**
   * Gets the value of the 'title' field.
   * @return The value of the 'title' field.
   */
  public java.lang.String getTitle() {
    return title;
  }


  /**
   * Sets the value of the 'title' field.
   * @param value the value to set.
   */
  public void setTitle(java.lang.String value) {
    this.title = value;
  }

  /**
   * Gets the value of the 'description' field.
   * @return The value of the 'description' field.
   */
  public java.lang.String getDescription() {
    return description;
  }


  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'location' field.
   * @return The value of the 'location' field.
   */
  public java.lang.String getLocation() {
    return location;
  }


  /**
   * Sets the value of the 'location' field.
   * @param value the value to set.
   */
  public void setLocation(java.lang.String value) {
    this.location = value;
  }

  /**
   * Gets the value of the 'startDate' field.
   * @return The value of the 'startDate' field.
   */
  public java.lang.String getStartDate() {
    return startDate;
  }


  /**
   * Sets the value of the 'startDate' field.
   * @param value the value to set.
   */
  public void setStartDate(java.lang.String value) {
    this.startDate = value;
  }

  /**
   * Gets the value of the 'endDate' field.
   * @return The value of the 'endDate' field.
   */
  public java.lang.String getEndDate() {
    return endDate;
  }


  /**
   * Sets the value of the 'endDate' field.
   * @param value the value to set.
   */
  public void setEndDate(java.lang.String value) {
    this.endDate = value;
  }

  /**
   * Gets the value of the 'meetingTime' field.
   * @return The value of the 'meetingTime' field.
   */
  public java.lang.String getMeetingTime() {
    return meetingTime;
  }


  /**
   * Sets the value of the 'meetingTime' field.
   * @param value the value to set.
   */
  public void setMeetingTime(java.lang.String value) {
    this.meetingTime = value;
  }

  /**
   * Gets the value of the 'duration' field.
   * @return The value of the 'duration' field.
   */
  public java.lang.Integer getDuration() {
    return duration;
  }


  /**
   * Sets the value of the 'duration' field.
   * @param value the value to set.
   */
  public void setDuration(java.lang.Integer value) {
    this.duration = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'repeating' field.
   * @return The value of the 'repeating' field.
   */
  public java.lang.Boolean getRepeating() {
    return repeating;
  }


  /**
   * Sets the value of the 'repeating' field.
   * @param value the value to set.
   */
  public void setRepeating(java.lang.Boolean value) {
    this.repeating = value;
  }

  /**
   * Gets the value of the 'recurrence' field.
   * @return The value of the 'recurrence' field.
   */
  public java.lang.String getRecurrence() {
    return recurrence;
  }


  /**
   * Sets the value of the 'recurrence' field.
   * @param value the value to set.
   */
  public void setRecurrence(java.lang.String value) {
    this.recurrence = value;
  }

  /**
   * Gets the value of the 'frequency' field.
   * @return The value of the 'frequency' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getFrequency() {
    return frequency;
  }


  /**
   * Sets the value of the 'frequency' field.
   * @param value the value to set.
   */
  public void setFrequency(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.frequency = value;
  }

  /**
   * Gets the value of the 'interval' field.
   * @return The value of the 'interval' field.
   */
  public java.lang.Integer getInterval() {
    return interval;
  }


  /**
   * Sets the value of the 'interval' field.
   * @param value the value to set.
   */
  public void setInterval(java.lang.Integer value) {
    this.interval = value;
  }

  /**
   * Gets the value of the 'repeatsOnDay' field.
   * @return The value of the 'repeatsOnDay' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getRepeatsOnDay() {
    return repeatsOnDay;
  }


  /**
   * Sets the value of the 'repeatsOnDay' field.
   * @param value the value to set.
   */
  public void setRepeatsOnDay(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.repeatsOnDay = value;
  }

  /**
   * Gets the value of the 'repeatsOnNthDayOfMonth' field.
   * @return The value of the 'repeatsOnNthDayOfMonth' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getRepeatsOnNthDayOfMonth() {
    return repeatsOnNthDayOfMonth;
  }


  /**
   * Sets the value of the 'repeatsOnNthDayOfMonth' field.
   * @param value the value to set.
   */
  public void setRepeatsOnNthDayOfMonth(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.repeatsOnNthDayOfMonth = value;
  }

  /**
   * Gets the value of the 'remindBy' field.
   * @return The value of the 'remindBy' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getRemindBy() {
    return remindBy;
  }


  /**
   * Sets the value of the 'remindBy' field.
   * @param value the value to set.
   */
  public void setRemindBy(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.remindBy = value;
  }

  /**
   * Gets the value of the 'firstReminder' field.
   * @return The value of the 'firstReminder' field.
   */
  public java.lang.Integer getFirstReminder() {
    return firstReminder;
  }


  /**
   * Sets the value of the 'firstReminder' field.
   * @param value the value to set.
   */
  public void setFirstReminder(java.lang.Integer value) {
    this.firstReminder = value;
  }

  /**
   * Gets the value of the 'secondReminder' field.
   * @return The value of the 'secondReminder' field.
   */
  public java.lang.Integer getSecondReminder() {
    return secondReminder;
  }


  /**
   * Sets the value of the 'secondReminder' field.
   * @param value the value to set.
   */
  public void setSecondReminder(java.lang.Integer value) {
    this.secondReminder = value;
  }

  /**
   * Gets the value of the 'recurringDates' field.
   * @return The value of the 'recurringDates' field.
   */
  public java.util.List<java.lang.String> getRecurringDates() {
    return recurringDates;
  }


  /**
   * Sets the value of the 'recurringDates' field.
   * @param value the value to set.
   */
  public void setRecurringDates(java.util.List<java.lang.String> value) {
    this.recurringDates = value;
  }

  /**
   * Gets the value of the 'nextTenRecurringDates' field.
   * @return The value of the 'nextTenRecurringDates' field.
   */
  public java.util.List<java.lang.String> getNextTenRecurringDates() {
    return nextTenRecurringDates;
  }


  /**
   * Sets the value of the 'nextTenRecurringDates' field.
   * @param value the value to set.
   */
  public void setNextTenRecurringDates(java.util.List<java.lang.String> value) {
    this.nextTenRecurringDates = value;
  }

  /**
   * Gets the value of the 'humanReadable' field.
   * @return The value of the 'humanReadable' field.
   */
  public java.lang.String getHumanReadable() {
    return humanReadable;
  }


  /**
   * Sets the value of the 'humanReadable' field.
   * @param value the value to set.
   */
  public void setHumanReadable(java.lang.String value) {
    this.humanReadable = value;
  }

  /**
   * Gets the value of the 'recentEligibleMeetingDate' field.
   * @return The value of the 'recentEligibleMeetingDate' field.
   */
  public java.lang.String getRecentEligibleMeetingDate() {
    return recentEligibleMeetingDate;
  }


  /**
   * Sets the value of the 'recentEligibleMeetingDate' field.
   * @param value the value to set.
   */
  public void setRecentEligibleMeetingDate(java.lang.String value) {
    this.recentEligibleMeetingDate = value;
  }

  /**
   * Gets the value of the 'createdDate' field.
   * @return The value of the 'createdDate' field.
   */
  public java.lang.String getCreatedDate() {
    return createdDate;
  }


  /**
   * Sets the value of the 'createdDate' field.
   * @param value the value to set.
   */
  public void setCreatedDate(java.lang.String value) {
    this.createdDate = value;
  }

  /**
   * Gets the value of the 'lastUpdatedDate' field.
   * @return The value of the 'lastUpdatedDate' field.
   */
  public java.lang.String getLastUpdatedDate() {
    return lastUpdatedDate;
  }


  /**
   * Sets the value of the 'lastUpdatedDate' field.
   * @param value the value to set.
   */
  public void setLastUpdatedDate(java.lang.String value) {
    this.lastUpdatedDate = value;
  }

  /**
   * Gets the value of the 'createdByUserId' field.
   * @return The value of the 'createdByUserId' field.
   */
  public java.lang.Long getCreatedByUserId() {
    return createdByUserId;
  }


  /**
   * Sets the value of the 'createdByUserId' field.
   * @param value the value to set.
   */
  public void setCreatedByUserId(java.lang.Long value) {
    this.createdByUserId = value;
  }

  /**
   * Gets the value of the 'createdByUsername' field.
   * @return The value of the 'createdByUsername' field.
   */
  public java.lang.String getCreatedByUsername() {
    return createdByUsername;
  }


  /**
   * Sets the value of the 'createdByUsername' field.
   * @param value the value to set.
   */
  public void setCreatedByUsername(java.lang.String value) {
    this.createdByUsername = value;
  }

  /**
   * Gets the value of the 'lastUpdatedByUserId' field.
   * @return The value of the 'lastUpdatedByUserId' field.
   */
  public java.lang.Long getLastUpdatedByUserId() {
    return lastUpdatedByUserId;
  }


  /**
   * Sets the value of the 'lastUpdatedByUserId' field.
   * @param value the value to set.
   */
  public void setLastUpdatedByUserId(java.lang.Long value) {
    this.lastUpdatedByUserId = value;
  }

  /**
   * Gets the value of the 'lastUpdatedByUsername' field.
   * @return The value of the 'lastUpdatedByUsername' field.
   */
  public java.lang.String getLastUpdatedByUsername() {
    return lastUpdatedByUsername;
  }


  /**
   * Sets the value of the 'lastUpdatedByUsername' field.
   * @param value the value to set.
   */
  public void setLastUpdatedByUsername(java.lang.String value) {
    this.lastUpdatedByUsername = value;
  }

  /**
   * Gets the value of the 'repeatsOnDayOfMonth' field.
   * @return The value of the 'repeatsOnDayOfMonth' field.
   */
  public java.lang.Integer getRepeatsOnDayOfMonth() {
    return repeatsOnDayOfMonth;
  }


  /**
   * Sets the value of the 'repeatsOnDayOfMonth' field.
   * @param value the value to set.
   */
  public void setRepeatsOnDayOfMonth(java.lang.Integer value) {
    this.repeatsOnDayOfMonth = value;
  }

  /**
   * Creates a new CalendarDataV1 RecordBuilder.
   * @return A new CalendarDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder newBuilder() {
    return new org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder();
  }

  /**
   * Creates a new CalendarDataV1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CalendarDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder newBuilder(org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder other) {
    if (other == null) {
      return new org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder(other);
    }
  }

  /**
   * Creates a new CalendarDataV1 RecordBuilder by copying an existing CalendarDataV1 instance.
   * @param other The existing instance to copy.
   * @return A new CalendarDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder newBuilder(org.apache.fineract.avro.generic.v1.CalendarDataV1 other) {
    if (other == null) {
      return new org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder(other);
    }
  }

  /**
   * RecordBuilder for CalendarDataV1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CalendarDataV1>
    implements org.apache.avro.data.RecordBuilder<CalendarDataV1> {

    private java.lang.Long id;
    private java.lang.Long calendarInstanceId;
    private java.lang.Long entityId;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 entityType;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder entityTypeBuilder;
    private java.lang.String title;
    private java.lang.String description;
    private java.lang.String location;
    private java.lang.String startDate;
    private java.lang.String endDate;
    private java.lang.String meetingTime;
    private java.lang.Integer duration;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 type;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder typeBuilder;
    private java.lang.Boolean repeating;
    private java.lang.String recurrence;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 frequency;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder frequencyBuilder;
    private java.lang.Integer interval;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 repeatsOnDay;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder repeatsOnDayBuilder;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 repeatsOnNthDayOfMonth;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder repeatsOnNthDayOfMonthBuilder;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 remindBy;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder remindByBuilder;
    private java.lang.Integer firstReminder;
    private java.lang.Integer secondReminder;
    private java.util.List<java.lang.String> recurringDates;
    private java.util.List<java.lang.String> nextTenRecurringDates;
    private java.lang.String humanReadable;
    private java.lang.String recentEligibleMeetingDate;
    private java.lang.String createdDate;
    private java.lang.String lastUpdatedDate;
    private java.lang.Long createdByUserId;
    private java.lang.String createdByUsername;
    private java.lang.Long lastUpdatedByUserId;
    private java.lang.String lastUpdatedByUsername;
    private java.lang.Integer repeatsOnDayOfMonth;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.calendarInstanceId)) {
        this.calendarInstanceId = data().deepCopy(fields()[1].schema(), other.calendarInstanceId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.entityId)) {
        this.entityId = data().deepCopy(fields()[2].schema(), other.entityId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.entityType)) {
        this.entityType = data().deepCopy(fields()[3].schema(), other.entityType);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (other.hasEntityTypeBuilder()) {
        this.entityTypeBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getEntityTypeBuilder());
      }
      if (isValidValue(fields()[4], other.title)) {
        this.title = data().deepCopy(fields()[4].schema(), other.title);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.description)) {
        this.description = data().deepCopy(fields()[5].schema(), other.description);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.location)) {
        this.location = data().deepCopy(fields()[6].schema(), other.location);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.startDate)) {
        this.startDate = data().deepCopy(fields()[7].schema(), other.startDate);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.endDate)) {
        this.endDate = data().deepCopy(fields()[8].schema(), other.endDate);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.meetingTime)) {
        this.meetingTime = data().deepCopy(fields()[9].schema(), other.meetingTime);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.duration)) {
        this.duration = data().deepCopy(fields()[10].schema(), other.duration);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.type)) {
        this.type = data().deepCopy(fields()[11].schema(), other.type);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (other.hasTypeBuilder()) {
        this.typeBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getTypeBuilder());
      }
      if (isValidValue(fields()[12], other.repeating)) {
        this.repeating = data().deepCopy(fields()[12].schema(), other.repeating);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.recurrence)) {
        this.recurrence = data().deepCopy(fields()[13].schema(), other.recurrence);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.frequency)) {
        this.frequency = data().deepCopy(fields()[14].schema(), other.frequency);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (other.hasFrequencyBuilder()) {
        this.frequencyBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getFrequencyBuilder());
      }
      if (isValidValue(fields()[15], other.interval)) {
        this.interval = data().deepCopy(fields()[15].schema(), other.interval);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.repeatsOnDay)) {
        this.repeatsOnDay = data().deepCopy(fields()[16].schema(), other.repeatsOnDay);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (other.hasRepeatsOnDayBuilder()) {
        this.repeatsOnDayBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getRepeatsOnDayBuilder());
      }
      if (isValidValue(fields()[17], other.repeatsOnNthDayOfMonth)) {
        this.repeatsOnNthDayOfMonth = data().deepCopy(fields()[17].schema(), other.repeatsOnNthDayOfMonth);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (other.hasRepeatsOnNthDayOfMonthBuilder()) {
        this.repeatsOnNthDayOfMonthBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getRepeatsOnNthDayOfMonthBuilder());
      }
      if (isValidValue(fields()[18], other.remindBy)) {
        this.remindBy = data().deepCopy(fields()[18].schema(), other.remindBy);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (other.hasRemindByBuilder()) {
        this.remindByBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getRemindByBuilder());
      }
      if (isValidValue(fields()[19], other.firstReminder)) {
        this.firstReminder = data().deepCopy(fields()[19].schema(), other.firstReminder);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.secondReminder)) {
        this.secondReminder = data().deepCopy(fields()[20].schema(), other.secondReminder);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.recurringDates)) {
        this.recurringDates = data().deepCopy(fields()[21].schema(), other.recurringDates);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.nextTenRecurringDates)) {
        this.nextTenRecurringDates = data().deepCopy(fields()[22].schema(), other.nextTenRecurringDates);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.humanReadable)) {
        this.humanReadable = data().deepCopy(fields()[23].schema(), other.humanReadable);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.recentEligibleMeetingDate)) {
        this.recentEligibleMeetingDate = data().deepCopy(fields()[24].schema(), other.recentEligibleMeetingDate);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
      if (isValidValue(fields()[25], other.createdDate)) {
        this.createdDate = data().deepCopy(fields()[25].schema(), other.createdDate);
        fieldSetFlags()[25] = other.fieldSetFlags()[25];
      }
      if (isValidValue(fields()[26], other.lastUpdatedDate)) {
        this.lastUpdatedDate = data().deepCopy(fields()[26].schema(), other.lastUpdatedDate);
        fieldSetFlags()[26] = other.fieldSetFlags()[26];
      }
      if (isValidValue(fields()[27], other.createdByUserId)) {
        this.createdByUserId = data().deepCopy(fields()[27].schema(), other.createdByUserId);
        fieldSetFlags()[27] = other.fieldSetFlags()[27];
      }
      if (isValidValue(fields()[28], other.createdByUsername)) {
        this.createdByUsername = data().deepCopy(fields()[28].schema(), other.createdByUsername);
        fieldSetFlags()[28] = other.fieldSetFlags()[28];
      }
      if (isValidValue(fields()[29], other.lastUpdatedByUserId)) {
        this.lastUpdatedByUserId = data().deepCopy(fields()[29].schema(), other.lastUpdatedByUserId);
        fieldSetFlags()[29] = other.fieldSetFlags()[29];
      }
      if (isValidValue(fields()[30], other.lastUpdatedByUsername)) {
        this.lastUpdatedByUsername = data().deepCopy(fields()[30].schema(), other.lastUpdatedByUsername);
        fieldSetFlags()[30] = other.fieldSetFlags()[30];
      }
      if (isValidValue(fields()[31], other.repeatsOnDayOfMonth)) {
        this.repeatsOnDayOfMonth = data().deepCopy(fields()[31].schema(), other.repeatsOnDayOfMonth);
        fieldSetFlags()[31] = other.fieldSetFlags()[31];
      }
    }

    /**
     * Creates a Builder by copying an existing CalendarDataV1 instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.fineract.avro.generic.v1.CalendarDataV1 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.calendarInstanceId)) {
        this.calendarInstanceId = data().deepCopy(fields()[1].schema(), other.calendarInstanceId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.entityId)) {
        this.entityId = data().deepCopy(fields()[2].schema(), other.entityId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.entityType)) {
        this.entityType = data().deepCopy(fields()[3].schema(), other.entityType);
        fieldSetFlags()[3] = true;
      }
      this.entityTypeBuilder = null;
      if (isValidValue(fields()[4], other.title)) {
        this.title = data().deepCopy(fields()[4].schema(), other.title);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.description)) {
        this.description = data().deepCopy(fields()[5].schema(), other.description);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.location)) {
        this.location = data().deepCopy(fields()[6].schema(), other.location);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.startDate)) {
        this.startDate = data().deepCopy(fields()[7].schema(), other.startDate);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.endDate)) {
        this.endDate = data().deepCopy(fields()[8].schema(), other.endDate);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.meetingTime)) {
        this.meetingTime = data().deepCopy(fields()[9].schema(), other.meetingTime);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.duration)) {
        this.duration = data().deepCopy(fields()[10].schema(), other.duration);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.type)) {
        this.type = data().deepCopy(fields()[11].schema(), other.type);
        fieldSetFlags()[11] = true;
      }
      this.typeBuilder = null;
      if (isValidValue(fields()[12], other.repeating)) {
        this.repeating = data().deepCopy(fields()[12].schema(), other.repeating);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.recurrence)) {
        this.recurrence = data().deepCopy(fields()[13].schema(), other.recurrence);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.frequency)) {
        this.frequency = data().deepCopy(fields()[14].schema(), other.frequency);
        fieldSetFlags()[14] = true;
      }
      this.frequencyBuilder = null;
      if (isValidValue(fields()[15], other.interval)) {
        this.interval = data().deepCopy(fields()[15].schema(), other.interval);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.repeatsOnDay)) {
        this.repeatsOnDay = data().deepCopy(fields()[16].schema(), other.repeatsOnDay);
        fieldSetFlags()[16] = true;
      }
      this.repeatsOnDayBuilder = null;
      if (isValidValue(fields()[17], other.repeatsOnNthDayOfMonth)) {
        this.repeatsOnNthDayOfMonth = data().deepCopy(fields()[17].schema(), other.repeatsOnNthDayOfMonth);
        fieldSetFlags()[17] = true;
      }
      this.repeatsOnNthDayOfMonthBuilder = null;
      if (isValidValue(fields()[18], other.remindBy)) {
        this.remindBy = data().deepCopy(fields()[18].schema(), other.remindBy);
        fieldSetFlags()[18] = true;
      }
      this.remindByBuilder = null;
      if (isValidValue(fields()[19], other.firstReminder)) {
        this.firstReminder = data().deepCopy(fields()[19].schema(), other.firstReminder);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.secondReminder)) {
        this.secondReminder = data().deepCopy(fields()[20].schema(), other.secondReminder);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.recurringDates)) {
        this.recurringDates = data().deepCopy(fields()[21].schema(), other.recurringDates);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.nextTenRecurringDates)) {
        this.nextTenRecurringDates = data().deepCopy(fields()[22].schema(), other.nextTenRecurringDates);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.humanReadable)) {
        this.humanReadable = data().deepCopy(fields()[23].schema(), other.humanReadable);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.recentEligibleMeetingDate)) {
        this.recentEligibleMeetingDate = data().deepCopy(fields()[24].schema(), other.recentEligibleMeetingDate);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.createdDate)) {
        this.createdDate = data().deepCopy(fields()[25].schema(), other.createdDate);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.lastUpdatedDate)) {
        this.lastUpdatedDate = data().deepCopy(fields()[26].schema(), other.lastUpdatedDate);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.createdByUserId)) {
        this.createdByUserId = data().deepCopy(fields()[27].schema(), other.createdByUserId);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.createdByUsername)) {
        this.createdByUsername = data().deepCopy(fields()[28].schema(), other.createdByUsername);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.lastUpdatedByUserId)) {
        this.lastUpdatedByUserId = data().deepCopy(fields()[29].schema(), other.lastUpdatedByUserId);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.lastUpdatedByUsername)) {
        this.lastUpdatedByUsername = data().deepCopy(fields()[30].schema(), other.lastUpdatedByUsername);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.repeatsOnDayOfMonth)) {
        this.repeatsOnDayOfMonth = data().deepCopy(fields()[31].schema(), other.repeatsOnDayOfMonth);
        fieldSetFlags()[31] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setId(java.lang.Long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'calendarInstanceId' field.
      * @return The value.
      */
    public java.lang.Long getCalendarInstanceId() {
      return calendarInstanceId;
    }


    /**
      * Sets the value of the 'calendarInstanceId' field.
      * @param value The value of 'calendarInstanceId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setCalendarInstanceId(java.lang.Long value) {
      validate(fields()[1], value);
      this.calendarInstanceId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'calendarInstanceId' field has been set.
      * @return True if the 'calendarInstanceId' field has been set, false otherwise.
      */
    public boolean hasCalendarInstanceId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'calendarInstanceId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearCalendarInstanceId() {
      calendarInstanceId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'entityId' field.
      * @return The value.
      */
    public java.lang.Long getEntityId() {
      return entityId;
    }


    /**
      * Sets the value of the 'entityId' field.
      * @param value The value of 'entityId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setEntityId(java.lang.Long value) {
      validate(fields()[2], value);
      this.entityId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'entityId' field has been set.
      * @return True if the 'entityId' field has been set, false otherwise.
      */
    public boolean hasEntityId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'entityId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearEntityId() {
      entityId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'entityType' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getEntityType() {
      return entityType;
    }


    /**
      * Sets the value of the 'entityType' field.
      * @param value The value of 'entityType'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setEntityType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[3], value);
      this.entityTypeBuilder = null;
      this.entityType = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'entityType' field has been set.
      * @return True if the 'entityType' field has been set, false otherwise.
      */
    public boolean hasEntityType() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'entityType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getEntityTypeBuilder() {
      if (entityTypeBuilder == null) {
        if (hasEntityType()) {
          setEntityTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(entityType));
        } else {
          setEntityTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return entityTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'entityType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setEntityTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearEntityType();
      entityTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'entityType' field has an active Builder instance
     * @return True if the 'entityType' field has an active Builder instance
     */
    public boolean hasEntityTypeBuilder() {
      return entityTypeBuilder != null;
    }

    /**
      * Clears the value of the 'entityType' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearEntityType() {
      entityType = null;
      entityTypeBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'title' field.
      * @return The value.
      */
    public java.lang.String getTitle() {
      return title;
    }


    /**
      * Sets the value of the 'title' field.
      * @param value The value of 'title'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setTitle(java.lang.String value) {
      validate(fields()[4], value);
      this.title = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'title' field has been set.
      * @return True if the 'title' field has been set, false otherwise.
      */
    public boolean hasTitle() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'title' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearTitle() {
      title = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public java.lang.String getDescription() {
      return description;
    }


    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setDescription(java.lang.String value) {
      validate(fields()[5], value);
      this.description = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearDescription() {
      description = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'location' field.
      * @return The value.
      */
    public java.lang.String getLocation() {
      return location;
    }


    /**
      * Sets the value of the 'location' field.
      * @param value The value of 'location'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setLocation(java.lang.String value) {
      validate(fields()[6], value);
      this.location = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'location' field has been set.
      * @return True if the 'location' field has been set, false otherwise.
      */
    public boolean hasLocation() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'location' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearLocation() {
      location = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'startDate' field.
      * @return The value.
      */
    public java.lang.String getStartDate() {
      return startDate;
    }


    /**
      * Sets the value of the 'startDate' field.
      * @param value The value of 'startDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setStartDate(java.lang.String value) {
      validate(fields()[7], value);
      this.startDate = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'startDate' field has been set.
      * @return True if the 'startDate' field has been set, false otherwise.
      */
    public boolean hasStartDate() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'startDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearStartDate() {
      startDate = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'endDate' field.
      * @return The value.
      */
    public java.lang.String getEndDate() {
      return endDate;
    }


    /**
      * Sets the value of the 'endDate' field.
      * @param value The value of 'endDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setEndDate(java.lang.String value) {
      validate(fields()[8], value);
      this.endDate = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'endDate' field has been set.
      * @return True if the 'endDate' field has been set, false otherwise.
      */
    public boolean hasEndDate() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'endDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearEndDate() {
      endDate = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'meetingTime' field.
      * @return The value.
      */
    public java.lang.String getMeetingTime() {
      return meetingTime;
    }


    /**
      * Sets the value of the 'meetingTime' field.
      * @param value The value of 'meetingTime'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setMeetingTime(java.lang.String value) {
      validate(fields()[9], value);
      this.meetingTime = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'meetingTime' field has been set.
      * @return True if the 'meetingTime' field has been set, false otherwise.
      */
    public boolean hasMeetingTime() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'meetingTime' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearMeetingTime() {
      meetingTime = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'duration' field.
      * @return The value.
      */
    public java.lang.Integer getDuration() {
      return duration;
    }


    /**
      * Sets the value of the 'duration' field.
      * @param value The value of 'duration'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setDuration(java.lang.Integer value) {
      validate(fields()[10], value);
      this.duration = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'duration' field has been set.
      * @return True if the 'duration' field has been set, false otherwise.
      */
    public boolean hasDuration() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'duration' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearDuration() {
      duration = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[11], value);
      this.typeBuilder = null;
      this.type = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[11];
    }

    /**
     * Gets the Builder instance for the 'type' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getTypeBuilder() {
      if (typeBuilder == null) {
        if (hasType()) {
          setTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(type));
        } else {
          setTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return typeBuilder;
    }

    /**
     * Sets the Builder instance for the 'type' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearType();
      typeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'type' field has an active Builder instance
     * @return True if the 'type' field has an active Builder instance
     */
    public boolean hasTypeBuilder() {
      return typeBuilder != null;
    }

    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearType() {
      type = null;
      typeBuilder = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'repeating' field.
      * @return The value.
      */
    public java.lang.Boolean getRepeating() {
      return repeating;
    }


    /**
      * Sets the value of the 'repeating' field.
      * @param value The value of 'repeating'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setRepeating(java.lang.Boolean value) {
      validate(fields()[12], value);
      this.repeating = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'repeating' field has been set.
      * @return True if the 'repeating' field has been set, false otherwise.
      */
    public boolean hasRepeating() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'repeating' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearRepeating() {
      repeating = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'recurrence' field.
      * @return The value.
      */
    public java.lang.String getRecurrence() {
      return recurrence;
    }


    /**
      * Sets the value of the 'recurrence' field.
      * @param value The value of 'recurrence'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setRecurrence(java.lang.String value) {
      validate(fields()[13], value);
      this.recurrence = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'recurrence' field has been set.
      * @return True if the 'recurrence' field has been set, false otherwise.
      */
    public boolean hasRecurrence() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'recurrence' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearRecurrence() {
      recurrence = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'frequency' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getFrequency() {
      return frequency;
    }


    /**
      * Sets the value of the 'frequency' field.
      * @param value The value of 'frequency'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setFrequency(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[14], value);
      this.frequencyBuilder = null;
      this.frequency = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'frequency' field has been set.
      * @return True if the 'frequency' field has been set, false otherwise.
      */
    public boolean hasFrequency() {
      return fieldSetFlags()[14];
    }

    /**
     * Gets the Builder instance for the 'frequency' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getFrequencyBuilder() {
      if (frequencyBuilder == null) {
        if (hasFrequency()) {
          setFrequencyBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(frequency));
        } else {
          setFrequencyBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return frequencyBuilder;
    }

    /**
     * Sets the Builder instance for the 'frequency' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setFrequencyBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearFrequency();
      frequencyBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'frequency' field has an active Builder instance
     * @return True if the 'frequency' field has an active Builder instance
     */
    public boolean hasFrequencyBuilder() {
      return frequencyBuilder != null;
    }

    /**
      * Clears the value of the 'frequency' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearFrequency() {
      frequency = null;
      frequencyBuilder = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'interval' field.
      * @return The value.
      */
    public java.lang.Integer getInterval() {
      return interval;
    }


    /**
      * Sets the value of the 'interval' field.
      * @param value The value of 'interval'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setInterval(java.lang.Integer value) {
      validate(fields()[15], value);
      this.interval = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'interval' field has been set.
      * @return True if the 'interval' field has been set, false otherwise.
      */
    public boolean hasInterval() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'interval' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearInterval() {
      interval = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'repeatsOnDay' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getRepeatsOnDay() {
      return repeatsOnDay;
    }


    /**
      * Sets the value of the 'repeatsOnDay' field.
      * @param value The value of 'repeatsOnDay'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setRepeatsOnDay(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[16], value);
      this.repeatsOnDayBuilder = null;
      this.repeatsOnDay = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'repeatsOnDay' field has been set.
      * @return True if the 'repeatsOnDay' field has been set, false otherwise.
      */
    public boolean hasRepeatsOnDay() {
      return fieldSetFlags()[16];
    }

    /**
     * Gets the Builder instance for the 'repeatsOnDay' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getRepeatsOnDayBuilder() {
      if (repeatsOnDayBuilder == null) {
        if (hasRepeatsOnDay()) {
          setRepeatsOnDayBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(repeatsOnDay));
        } else {
          setRepeatsOnDayBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return repeatsOnDayBuilder;
    }

    /**
     * Sets the Builder instance for the 'repeatsOnDay' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setRepeatsOnDayBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearRepeatsOnDay();
      repeatsOnDayBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'repeatsOnDay' field has an active Builder instance
     * @return True if the 'repeatsOnDay' field has an active Builder instance
     */
    public boolean hasRepeatsOnDayBuilder() {
      return repeatsOnDayBuilder != null;
    }

    /**
      * Clears the value of the 'repeatsOnDay' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearRepeatsOnDay() {
      repeatsOnDay = null;
      repeatsOnDayBuilder = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'repeatsOnNthDayOfMonth' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getRepeatsOnNthDayOfMonth() {
      return repeatsOnNthDayOfMonth;
    }


    /**
      * Sets the value of the 'repeatsOnNthDayOfMonth' field.
      * @param value The value of 'repeatsOnNthDayOfMonth'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setRepeatsOnNthDayOfMonth(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[17], value);
      this.repeatsOnNthDayOfMonthBuilder = null;
      this.repeatsOnNthDayOfMonth = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'repeatsOnNthDayOfMonth' field has been set.
      * @return True if the 'repeatsOnNthDayOfMonth' field has been set, false otherwise.
      */
    public boolean hasRepeatsOnNthDayOfMonth() {
      return fieldSetFlags()[17];
    }

    /**
     * Gets the Builder instance for the 'repeatsOnNthDayOfMonth' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getRepeatsOnNthDayOfMonthBuilder() {
      if (repeatsOnNthDayOfMonthBuilder == null) {
        if (hasRepeatsOnNthDayOfMonth()) {
          setRepeatsOnNthDayOfMonthBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(repeatsOnNthDayOfMonth));
        } else {
          setRepeatsOnNthDayOfMonthBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return repeatsOnNthDayOfMonthBuilder;
    }

    /**
     * Sets the Builder instance for the 'repeatsOnNthDayOfMonth' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setRepeatsOnNthDayOfMonthBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearRepeatsOnNthDayOfMonth();
      repeatsOnNthDayOfMonthBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'repeatsOnNthDayOfMonth' field has an active Builder instance
     * @return True if the 'repeatsOnNthDayOfMonth' field has an active Builder instance
     */
    public boolean hasRepeatsOnNthDayOfMonthBuilder() {
      return repeatsOnNthDayOfMonthBuilder != null;
    }

    /**
      * Clears the value of the 'repeatsOnNthDayOfMonth' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearRepeatsOnNthDayOfMonth() {
      repeatsOnNthDayOfMonth = null;
      repeatsOnNthDayOfMonthBuilder = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'remindBy' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getRemindBy() {
      return remindBy;
    }


    /**
      * Sets the value of the 'remindBy' field.
      * @param value The value of 'remindBy'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setRemindBy(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[18], value);
      this.remindByBuilder = null;
      this.remindBy = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'remindBy' field has been set.
      * @return True if the 'remindBy' field has been set, false otherwise.
      */
    public boolean hasRemindBy() {
      return fieldSetFlags()[18];
    }

    /**
     * Gets the Builder instance for the 'remindBy' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getRemindByBuilder() {
      if (remindByBuilder == null) {
        if (hasRemindBy()) {
          setRemindByBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(remindBy));
        } else {
          setRemindByBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return remindByBuilder;
    }

    /**
     * Sets the Builder instance for the 'remindBy' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setRemindByBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearRemindBy();
      remindByBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'remindBy' field has an active Builder instance
     * @return True if the 'remindBy' field has an active Builder instance
     */
    public boolean hasRemindByBuilder() {
      return remindByBuilder != null;
    }

    /**
      * Clears the value of the 'remindBy' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearRemindBy() {
      remindBy = null;
      remindByBuilder = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'firstReminder' field.
      * @return The value.
      */
    public java.lang.Integer getFirstReminder() {
      return firstReminder;
    }


    /**
      * Sets the value of the 'firstReminder' field.
      * @param value The value of 'firstReminder'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setFirstReminder(java.lang.Integer value) {
      validate(fields()[19], value);
      this.firstReminder = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'firstReminder' field has been set.
      * @return True if the 'firstReminder' field has been set, false otherwise.
      */
    public boolean hasFirstReminder() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'firstReminder' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearFirstReminder() {
      firstReminder = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'secondReminder' field.
      * @return The value.
      */
    public java.lang.Integer getSecondReminder() {
      return secondReminder;
    }


    /**
      * Sets the value of the 'secondReminder' field.
      * @param value The value of 'secondReminder'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setSecondReminder(java.lang.Integer value) {
      validate(fields()[20], value);
      this.secondReminder = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'secondReminder' field has been set.
      * @return True if the 'secondReminder' field has been set, false otherwise.
      */
    public boolean hasSecondReminder() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'secondReminder' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearSecondReminder() {
      secondReminder = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'recurringDates' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getRecurringDates() {
      return recurringDates;
    }


    /**
      * Sets the value of the 'recurringDates' field.
      * @param value The value of 'recurringDates'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setRecurringDates(java.util.List<java.lang.String> value) {
      validate(fields()[21], value);
      this.recurringDates = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'recurringDates' field has been set.
      * @return True if the 'recurringDates' field has been set, false otherwise.
      */
    public boolean hasRecurringDates() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'recurringDates' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearRecurringDates() {
      recurringDates = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'nextTenRecurringDates' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getNextTenRecurringDates() {
      return nextTenRecurringDates;
    }


    /**
      * Sets the value of the 'nextTenRecurringDates' field.
      * @param value The value of 'nextTenRecurringDates'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setNextTenRecurringDates(java.util.List<java.lang.String> value) {
      validate(fields()[22], value);
      this.nextTenRecurringDates = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'nextTenRecurringDates' field has been set.
      * @return True if the 'nextTenRecurringDates' field has been set, false otherwise.
      */
    public boolean hasNextTenRecurringDates() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'nextTenRecurringDates' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearNextTenRecurringDates() {
      nextTenRecurringDates = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'humanReadable' field.
      * @return The value.
      */
    public java.lang.String getHumanReadable() {
      return humanReadable;
    }


    /**
      * Sets the value of the 'humanReadable' field.
      * @param value The value of 'humanReadable'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setHumanReadable(java.lang.String value) {
      validate(fields()[23], value);
      this.humanReadable = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'humanReadable' field has been set.
      * @return True if the 'humanReadable' field has been set, false otherwise.
      */
    public boolean hasHumanReadable() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'humanReadable' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearHumanReadable() {
      humanReadable = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'recentEligibleMeetingDate' field.
      * @return The value.
      */
    public java.lang.String getRecentEligibleMeetingDate() {
      return recentEligibleMeetingDate;
    }


    /**
      * Sets the value of the 'recentEligibleMeetingDate' field.
      * @param value The value of 'recentEligibleMeetingDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setRecentEligibleMeetingDate(java.lang.String value) {
      validate(fields()[24], value);
      this.recentEligibleMeetingDate = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'recentEligibleMeetingDate' field has been set.
      * @return True if the 'recentEligibleMeetingDate' field has been set, false otherwise.
      */
    public boolean hasRecentEligibleMeetingDate() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'recentEligibleMeetingDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearRecentEligibleMeetingDate() {
      recentEligibleMeetingDate = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdDate' field.
      * @return The value.
      */
    public java.lang.String getCreatedDate() {
      return createdDate;
    }


    /**
      * Sets the value of the 'createdDate' field.
      * @param value The value of 'createdDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setCreatedDate(java.lang.String value) {
      validate(fields()[25], value);
      this.createdDate = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'createdDate' field has been set.
      * @return True if the 'createdDate' field has been set, false otherwise.
      */
    public boolean hasCreatedDate() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'createdDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearCreatedDate() {
      createdDate = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastUpdatedDate' field.
      * @return The value.
      */
    public java.lang.String getLastUpdatedDate() {
      return lastUpdatedDate;
    }


    /**
      * Sets the value of the 'lastUpdatedDate' field.
      * @param value The value of 'lastUpdatedDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setLastUpdatedDate(java.lang.String value) {
      validate(fields()[26], value);
      this.lastUpdatedDate = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'lastUpdatedDate' field has been set.
      * @return True if the 'lastUpdatedDate' field has been set, false otherwise.
      */
    public boolean hasLastUpdatedDate() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'lastUpdatedDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearLastUpdatedDate() {
      lastUpdatedDate = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdByUserId' field.
      * @return The value.
      */
    public java.lang.Long getCreatedByUserId() {
      return createdByUserId;
    }


    /**
      * Sets the value of the 'createdByUserId' field.
      * @param value The value of 'createdByUserId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setCreatedByUserId(java.lang.Long value) {
      validate(fields()[27], value);
      this.createdByUserId = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'createdByUserId' field has been set.
      * @return True if the 'createdByUserId' field has been set, false otherwise.
      */
    public boolean hasCreatedByUserId() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'createdByUserId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearCreatedByUserId() {
      createdByUserId = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdByUsername' field.
      * @return The value.
      */
    public java.lang.String getCreatedByUsername() {
      return createdByUsername;
    }


    /**
      * Sets the value of the 'createdByUsername' field.
      * @param value The value of 'createdByUsername'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setCreatedByUsername(java.lang.String value) {
      validate(fields()[28], value);
      this.createdByUsername = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'createdByUsername' field has been set.
      * @return True if the 'createdByUsername' field has been set, false otherwise.
      */
    public boolean hasCreatedByUsername() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'createdByUsername' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearCreatedByUsername() {
      createdByUsername = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastUpdatedByUserId' field.
      * @return The value.
      */
    public java.lang.Long getLastUpdatedByUserId() {
      return lastUpdatedByUserId;
    }


    /**
      * Sets the value of the 'lastUpdatedByUserId' field.
      * @param value The value of 'lastUpdatedByUserId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setLastUpdatedByUserId(java.lang.Long value) {
      validate(fields()[29], value);
      this.lastUpdatedByUserId = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'lastUpdatedByUserId' field has been set.
      * @return True if the 'lastUpdatedByUserId' field has been set, false otherwise.
      */
    public boolean hasLastUpdatedByUserId() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'lastUpdatedByUserId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearLastUpdatedByUserId() {
      lastUpdatedByUserId = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastUpdatedByUsername' field.
      * @return The value.
      */
    public java.lang.String getLastUpdatedByUsername() {
      return lastUpdatedByUsername;
    }


    /**
      * Sets the value of the 'lastUpdatedByUsername' field.
      * @param value The value of 'lastUpdatedByUsername'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setLastUpdatedByUsername(java.lang.String value) {
      validate(fields()[30], value);
      this.lastUpdatedByUsername = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'lastUpdatedByUsername' field has been set.
      * @return True if the 'lastUpdatedByUsername' field has been set, false otherwise.
      */
    public boolean hasLastUpdatedByUsername() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'lastUpdatedByUsername' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearLastUpdatedByUsername() {
      lastUpdatedByUsername = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'repeatsOnDayOfMonth' field.
      * @return The value.
      */
    public java.lang.Integer getRepeatsOnDayOfMonth() {
      return repeatsOnDayOfMonth;
    }


    /**
      * Sets the value of the 'repeatsOnDayOfMonth' field.
      * @param value The value of 'repeatsOnDayOfMonth'.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder setRepeatsOnDayOfMonth(java.lang.Integer value) {
      validate(fields()[31], value);
      this.repeatsOnDayOfMonth = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
      * Checks whether the 'repeatsOnDayOfMonth' field has been set.
      * @return True if the 'repeatsOnDayOfMonth' field has been set, false otherwise.
      */
    public boolean hasRepeatsOnDayOfMonth() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'repeatsOnDayOfMonth' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.generic.v1.CalendarDataV1.Builder clearRepeatsOnDayOfMonth() {
      repeatsOnDayOfMonth = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CalendarDataV1 build() {
      try {
        CalendarDataV1 record = new CalendarDataV1();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.calendarInstanceId = fieldSetFlags()[1] ? this.calendarInstanceId : (java.lang.Long) defaultValue(fields()[1]);
        record.entityId = fieldSetFlags()[2] ? this.entityId : (java.lang.Long) defaultValue(fields()[2]);
        if (entityTypeBuilder != null) {
          try {
            record.entityType = this.entityTypeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("entityType"));
            throw e;
          }
        } else {
          record.entityType = fieldSetFlags()[3] ? this.entityType : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[3]);
        }
        record.title = fieldSetFlags()[4] ? this.title : (java.lang.String) defaultValue(fields()[4]);
        record.description = fieldSetFlags()[5] ? this.description : (java.lang.String) defaultValue(fields()[5]);
        record.location = fieldSetFlags()[6] ? this.location : (java.lang.String) defaultValue(fields()[6]);
        record.startDate = fieldSetFlags()[7] ? this.startDate : (java.lang.String) defaultValue(fields()[7]);
        record.endDate = fieldSetFlags()[8] ? this.endDate : (java.lang.String) defaultValue(fields()[8]);
        record.meetingTime = fieldSetFlags()[9] ? this.meetingTime : (java.lang.String) defaultValue(fields()[9]);
        record.duration = fieldSetFlags()[10] ? this.duration : (java.lang.Integer) defaultValue(fields()[10]);
        if (typeBuilder != null) {
          try {
            record.type = this.typeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("type"));
            throw e;
          }
        } else {
          record.type = fieldSetFlags()[11] ? this.type : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[11]);
        }
        record.repeating = fieldSetFlags()[12] ? this.repeating : (java.lang.Boolean) defaultValue(fields()[12]);
        record.recurrence = fieldSetFlags()[13] ? this.recurrence : (java.lang.String) defaultValue(fields()[13]);
        if (frequencyBuilder != null) {
          try {
            record.frequency = this.frequencyBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("frequency"));
            throw e;
          }
        } else {
          record.frequency = fieldSetFlags()[14] ? this.frequency : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[14]);
        }
        record.interval = fieldSetFlags()[15] ? this.interval : (java.lang.Integer) defaultValue(fields()[15]);
        if (repeatsOnDayBuilder != null) {
          try {
            record.repeatsOnDay = this.repeatsOnDayBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("repeatsOnDay"));
            throw e;
          }
        } else {
          record.repeatsOnDay = fieldSetFlags()[16] ? this.repeatsOnDay : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[16]);
        }
        if (repeatsOnNthDayOfMonthBuilder != null) {
          try {
            record.repeatsOnNthDayOfMonth = this.repeatsOnNthDayOfMonthBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("repeatsOnNthDayOfMonth"));
            throw e;
          }
        } else {
          record.repeatsOnNthDayOfMonth = fieldSetFlags()[17] ? this.repeatsOnNthDayOfMonth : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[17]);
        }
        if (remindByBuilder != null) {
          try {
            record.remindBy = this.remindByBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("remindBy"));
            throw e;
          }
        } else {
          record.remindBy = fieldSetFlags()[18] ? this.remindBy : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[18]);
        }
        record.firstReminder = fieldSetFlags()[19] ? this.firstReminder : (java.lang.Integer) defaultValue(fields()[19]);
        record.secondReminder = fieldSetFlags()[20] ? this.secondReminder : (java.lang.Integer) defaultValue(fields()[20]);
        record.recurringDates = fieldSetFlags()[21] ? this.recurringDates : (java.util.List<java.lang.String>) defaultValue(fields()[21]);
        record.nextTenRecurringDates = fieldSetFlags()[22] ? this.nextTenRecurringDates : (java.util.List<java.lang.String>) defaultValue(fields()[22]);
        record.humanReadable = fieldSetFlags()[23] ? this.humanReadable : (java.lang.String) defaultValue(fields()[23]);
        record.recentEligibleMeetingDate = fieldSetFlags()[24] ? this.recentEligibleMeetingDate : (java.lang.String) defaultValue(fields()[24]);
        record.createdDate = fieldSetFlags()[25] ? this.createdDate : (java.lang.String) defaultValue(fields()[25]);
        record.lastUpdatedDate = fieldSetFlags()[26] ? this.lastUpdatedDate : (java.lang.String) defaultValue(fields()[26]);
        record.createdByUserId = fieldSetFlags()[27] ? this.createdByUserId : (java.lang.Long) defaultValue(fields()[27]);
        record.createdByUsername = fieldSetFlags()[28] ? this.createdByUsername : (java.lang.String) defaultValue(fields()[28]);
        record.lastUpdatedByUserId = fieldSetFlags()[29] ? this.lastUpdatedByUserId : (java.lang.Long) defaultValue(fields()[29]);
        record.lastUpdatedByUsername = fieldSetFlags()[30] ? this.lastUpdatedByUsername : (java.lang.String) defaultValue(fields()[30]);
        record.repeatsOnDayOfMonth = fieldSetFlags()[31] ? this.repeatsOnDayOfMonth : (java.lang.Integer) defaultValue(fields()[31]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CalendarDataV1>
    WRITER$ = (org.apache.avro.io.DatumWriter<CalendarDataV1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CalendarDataV1>
    READER$ = (org.apache.avro.io.DatumReader<CalendarDataV1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.id);
    }

    if (this.calendarInstanceId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.calendarInstanceId);
    }

    if (this.entityId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.entityId);
    }

    if (this.entityType == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.entityType.customEncode(out);
    }

    if (this.title == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.title);
    }

    if (this.description == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.description);
    }

    if (this.location == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.location);
    }

    if (this.startDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.startDate);
    }

    if (this.endDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.endDate);
    }

    if (this.meetingTime == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.meetingTime);
    }

    if (this.duration == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.duration);
    }

    if (this.type == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.type.customEncode(out);
    }

    if (this.repeating == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.repeating);
    }

    if (this.recurrence == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.recurrence);
    }

    if (this.frequency == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.frequency.customEncode(out);
    }

    if (this.interval == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.interval);
    }

    if (this.repeatsOnDay == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.repeatsOnDay.customEncode(out);
    }

    if (this.repeatsOnNthDayOfMonth == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.repeatsOnNthDayOfMonth.customEncode(out);
    }

    if (this.remindBy == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.remindBy.customEncode(out);
    }

    if (this.firstReminder == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.firstReminder);
    }

    if (this.secondReminder == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.secondReminder);
    }

    if (this.recurringDates == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.recurringDates.size();
      out.writeArrayStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (java.lang.String e0: this.recurringDates) {
        actualSize0++;
        out.startItem();
        out.writeString(e0);
      }
      out.writeArrayEnd();
      if (actualSize0 != size0)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

    if (this.nextTenRecurringDates == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size1 = this.nextTenRecurringDates.size();
      out.writeArrayStart();
      out.setItemCount(size1);
      long actualSize1 = 0;
      for (java.lang.String e1: this.nextTenRecurringDates) {
        actualSize1++;
        out.startItem();
        out.writeString(e1);
      }
      out.writeArrayEnd();
      if (actualSize1 != size1)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");
    }

    if (this.humanReadable == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.humanReadable);
    }

    if (this.recentEligibleMeetingDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.recentEligibleMeetingDate);
    }

    if (this.createdDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.createdDate);
    }

    if (this.lastUpdatedDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.lastUpdatedDate);
    }

    if (this.createdByUserId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.createdByUserId);
    }

    if (this.createdByUsername == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.createdByUsername);
    }

    if (this.lastUpdatedByUserId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.lastUpdatedByUserId);
    }

    if (this.lastUpdatedByUsername == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.lastUpdatedByUsername);
    }

    if (this.repeatsOnDayOfMonth == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.repeatsOnDayOfMonth);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.id = null;
      } else {
        this.id = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.calendarInstanceId = null;
      } else {
        this.calendarInstanceId = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.entityId = null;
      } else {
        this.entityId = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.entityType = null;
      } else {
        if (this.entityType == null) {
          this.entityType = new org.apache.fineract.avro.generic.v1.EnumOptionDataV1();
        }
        this.entityType.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.title = null;
      } else {
        this.title = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.description = null;
      } else {
        this.description = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.location = null;
      } else {
        this.location = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.startDate = null;
      } else {
        this.startDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.endDate = null;
      } else {
        this.endDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.meetingTime = null;
      } else {
        this.meetingTime = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.duration = null;
      } else {
        this.duration = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.type = null;
      } else {
        if (this.type == null) {
          this.type = new org.apache.fineract.avro.generic.v1.EnumOptionDataV1();
        }
        this.type.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.repeating = null;
      } else {
        this.repeating = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.recurrence = null;
      } else {
        this.recurrence = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.frequency = null;
      } else {
        if (this.frequency == null) {
          this.frequency = new org.apache.fineract.avro.generic.v1.EnumOptionDataV1();
        }
        this.frequency.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.interval = null;
      } else {
        this.interval = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.repeatsOnDay = null;
      } else {
        if (this.repeatsOnDay == null) {
          this.repeatsOnDay = new org.apache.fineract.avro.generic.v1.EnumOptionDataV1();
        }
        this.repeatsOnDay.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.repeatsOnNthDayOfMonth = null;
      } else {
        if (this.repeatsOnNthDayOfMonth == null) {
          this.repeatsOnNthDayOfMonth = new org.apache.fineract.avro.generic.v1.EnumOptionDataV1();
        }
        this.repeatsOnNthDayOfMonth.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.remindBy = null;
      } else {
        if (this.remindBy == null) {
          this.remindBy = new org.apache.fineract.avro.generic.v1.EnumOptionDataV1();
        }
        this.remindBy.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.firstReminder = null;
      } else {
        this.firstReminder = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.secondReminder = null;
      } else {
        this.secondReminder = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.recurringDates = null;
      } else {
        long size0 = in.readArrayStart();
        java.util.List<java.lang.String> a0 = this.recurringDates;
        if (a0 == null) {
          a0 = new SpecificData.Array<java.lang.String>((int)size0, SCHEMA$.getField("recurringDates").schema().getTypes().get(1));
          this.recurringDates = a0;
        } else a0.clear();
        SpecificData.Array<java.lang.String> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.String>)a0 : null);
        for ( ; 0 < size0; size0 = in.arrayNext()) {
          for ( ; size0 != 0; size0--) {
            java.lang.String e0 = (ga0 != null ? ga0.peek() : null);
            e0 = in.readString();
            a0.add(e0);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.nextTenRecurringDates = null;
      } else {
        long size1 = in.readArrayStart();
        java.util.List<java.lang.String> a1 = this.nextTenRecurringDates;
        if (a1 == null) {
          a1 = new SpecificData.Array<java.lang.String>((int)size1, SCHEMA$.getField("nextTenRecurringDates").schema().getTypes().get(1));
          this.nextTenRecurringDates = a1;
        } else a1.clear();
        SpecificData.Array<java.lang.String> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.String>)a1 : null);
        for ( ; 0 < size1; size1 = in.arrayNext()) {
          for ( ; size1 != 0; size1--) {
            java.lang.String e1 = (ga1 != null ? ga1.peek() : null);
            e1 = in.readString();
            a1.add(e1);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.humanReadable = null;
      } else {
        this.humanReadable = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.recentEligibleMeetingDate = null;
      } else {
        this.recentEligibleMeetingDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.createdDate = null;
      } else {
        this.createdDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.lastUpdatedDate = null;
      } else {
        this.lastUpdatedDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.createdByUserId = null;
      } else {
        this.createdByUserId = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.createdByUsername = null;
      } else {
        this.createdByUsername = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.lastUpdatedByUserId = null;
      } else {
        this.lastUpdatedByUserId = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.lastUpdatedByUsername = null;
      } else {
        this.lastUpdatedByUsername = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.repeatsOnDayOfMonth = null;
      } else {
        this.repeatsOnDayOfMonth = in.readInt();
      }

    } else {
      for (int i = 0; i < 32; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.id = null;
          } else {
            this.id = in.readLong();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.calendarInstanceId = null;
          } else {
            this.calendarInstanceId = in.readLong();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.entityId = null;
          } else {
            this.entityId = in.readLong();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.entityType = null;
          } else {
            if (this.entityType == null) {
              this.entityType = new org.apache.fineract.avro.generic.v1.EnumOptionDataV1();
            }
            this.entityType.customDecode(in);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.title = null;
          } else {
            this.title = in.readString();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.description = null;
          } else {
            this.description = in.readString();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.location = null;
          } else {
            this.location = in.readString();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.startDate = null;
          } else {
            this.startDate = in.readString();
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.endDate = null;
          } else {
            this.endDate = in.readString();
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.meetingTime = null;
          } else {
            this.meetingTime = in.readString();
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.duration = null;
          } else {
            this.duration = in.readInt();
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.type = null;
          } else {
            if (this.type == null) {
              this.type = new org.apache.fineract.avro.generic.v1.EnumOptionDataV1();
            }
            this.type.customDecode(in);
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.repeating = null;
          } else {
            this.repeating = in.readBoolean();
          }
          break;

        case 13:
          if (in.readIndex() != 1) {
            in.readNull();
            this.recurrence = null;
          } else {
            this.recurrence = in.readString();
          }
          break;

        case 14:
          if (in.readIndex() != 1) {
            in.readNull();
            this.frequency = null;
          } else {
            if (this.frequency == null) {
              this.frequency = new org.apache.fineract.avro.generic.v1.EnumOptionDataV1();
            }
            this.frequency.customDecode(in);
          }
          break;

        case 15:
          if (in.readIndex() != 1) {
            in.readNull();
            this.interval = null;
          } else {
            this.interval = in.readInt();
          }
          break;

        case 16:
          if (in.readIndex() != 1) {
            in.readNull();
            this.repeatsOnDay = null;
          } else {
            if (this.repeatsOnDay == null) {
              this.repeatsOnDay = new org.apache.fineract.avro.generic.v1.EnumOptionDataV1();
            }
            this.repeatsOnDay.customDecode(in);
          }
          break;

        case 17:
          if (in.readIndex() != 1) {
            in.readNull();
            this.repeatsOnNthDayOfMonth = null;
          } else {
            if (this.repeatsOnNthDayOfMonth == null) {
              this.repeatsOnNthDayOfMonth = new org.apache.fineract.avro.generic.v1.EnumOptionDataV1();
            }
            this.repeatsOnNthDayOfMonth.customDecode(in);
          }
          break;

        case 18:
          if (in.readIndex() != 1) {
            in.readNull();
            this.remindBy = null;
          } else {
            if (this.remindBy == null) {
              this.remindBy = new org.apache.fineract.avro.generic.v1.EnumOptionDataV1();
            }
            this.remindBy.customDecode(in);
          }
          break;

        case 19:
          if (in.readIndex() != 1) {
            in.readNull();
            this.firstReminder = null;
          } else {
            this.firstReminder = in.readInt();
          }
          break;

        case 20:
          if (in.readIndex() != 1) {
            in.readNull();
            this.secondReminder = null;
          } else {
            this.secondReminder = in.readInt();
          }
          break;

        case 21:
          if (in.readIndex() != 1) {
            in.readNull();
            this.recurringDates = null;
          } else {
            long size0 = in.readArrayStart();
            java.util.List<java.lang.String> a0 = this.recurringDates;
            if (a0 == null) {
              a0 = new SpecificData.Array<java.lang.String>((int)size0, SCHEMA$.getField("recurringDates").schema().getTypes().get(1));
              this.recurringDates = a0;
            } else a0.clear();
            SpecificData.Array<java.lang.String> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.String>)a0 : null);
            for ( ; 0 < size0; size0 = in.arrayNext()) {
              for ( ; size0 != 0; size0--) {
                java.lang.String e0 = (ga0 != null ? ga0.peek() : null);
                e0 = in.readString();
                a0.add(e0);
              }
            }
          }
          break;

        case 22:
          if (in.readIndex() != 1) {
            in.readNull();
            this.nextTenRecurringDates = null;
          } else {
            long size1 = in.readArrayStart();
            java.util.List<java.lang.String> a1 = this.nextTenRecurringDates;
            if (a1 == null) {
              a1 = new SpecificData.Array<java.lang.String>((int)size1, SCHEMA$.getField("nextTenRecurringDates").schema().getTypes().get(1));
              this.nextTenRecurringDates = a1;
            } else a1.clear();
            SpecificData.Array<java.lang.String> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.String>)a1 : null);
            for ( ; 0 < size1; size1 = in.arrayNext()) {
              for ( ; size1 != 0; size1--) {
                java.lang.String e1 = (ga1 != null ? ga1.peek() : null);
                e1 = in.readString();
                a1.add(e1);
              }
            }
          }
          break;

        case 23:
          if (in.readIndex() != 1) {
            in.readNull();
            this.humanReadable = null;
          } else {
            this.humanReadable = in.readString();
          }
          break;

        case 24:
          if (in.readIndex() != 1) {
            in.readNull();
            this.recentEligibleMeetingDate = null;
          } else {
            this.recentEligibleMeetingDate = in.readString();
          }
          break;

        case 25:
          if (in.readIndex() != 1) {
            in.readNull();
            this.createdDate = null;
          } else {
            this.createdDate = in.readString();
          }
          break;

        case 26:
          if (in.readIndex() != 1) {
            in.readNull();
            this.lastUpdatedDate = null;
          } else {
            this.lastUpdatedDate = in.readString();
          }
          break;

        case 27:
          if (in.readIndex() != 1) {
            in.readNull();
            this.createdByUserId = null;
          } else {
            this.createdByUserId = in.readLong();
          }
          break;

        case 28:
          if (in.readIndex() != 1) {
            in.readNull();
            this.createdByUsername = null;
          } else {
            this.createdByUsername = in.readString();
          }
          break;

        case 29:
          if (in.readIndex() != 1) {
            in.readNull();
            this.lastUpdatedByUserId = null;
          } else {
            this.lastUpdatedByUserId = in.readLong();
          }
          break;

        case 30:
          if (in.readIndex() != 1) {
            in.readNull();
            this.lastUpdatedByUsername = null;
          } else {
            this.lastUpdatedByUsername = in.readString();
          }
          break;

        case 31:
          if (in.readIndex() != 1) {
            in.readNull();
            this.repeatsOnDayOfMonth = null;
          } else {
            this.repeatsOnDayOfMonth = in.readInt();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










