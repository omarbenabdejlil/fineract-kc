/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

package org.apache.fineract.avro.share.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ShareAccountApplicationTimelineDataV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, org.apache.fineract.avro.generator.ByteBufferSerializable {
  private static final long serialVersionUID = -2922418256577490683L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ShareAccountApplicationTimelineDataV1\",\"namespace\":\"org.apache.fineract.avro.share.v1\",\"fields\":[{\"name\":\"submittedOnDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"submittedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"submittedByFirstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"submittedByLastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"rejectedDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"rejectedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"rejectedByFirstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"rejectedByLastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"approvedDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"approvedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"approvedByFirstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"approvedByLastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activatedDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activatedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activatedByFirstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activatedByLastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closedDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closedByFirstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closedByLastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ShareAccountApplicationTimelineDataV1> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ShareAccountApplicationTimelineDataV1> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ShareAccountApplicationTimelineDataV1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ShareAccountApplicationTimelineDataV1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ShareAccountApplicationTimelineDataV1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ShareAccountApplicationTimelineDataV1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  @Override
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ShareAccountApplicationTimelineDataV1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ShareAccountApplicationTimelineDataV1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ShareAccountApplicationTimelineDataV1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String submittedOnDate;
  private java.lang.String submittedByUsername;
  private java.lang.String submittedByFirstname;
  private java.lang.String submittedByLastname;
  private java.lang.String rejectedDate;
  private java.lang.String rejectedByUsername;
  private java.lang.String rejectedByFirstname;
  private java.lang.String rejectedByLastname;
  private java.lang.String approvedDate;
  private java.lang.String approvedByUsername;
  private java.lang.String approvedByFirstname;
  private java.lang.String approvedByLastname;
  private java.lang.String activatedDate;
  private java.lang.String activatedByUsername;
  private java.lang.String activatedByFirstname;
  private java.lang.String activatedByLastname;
  private java.lang.String closedDate;
  private java.lang.String closedByUsername;
  private java.lang.String closedByFirstname;
  private java.lang.String closedByLastname;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ShareAccountApplicationTimelineDataV1() {}

  /**
   * All-args constructor.
   * @param submittedOnDate The new value for submittedOnDate
   * @param submittedByUsername The new value for submittedByUsername
   * @param submittedByFirstname The new value for submittedByFirstname
   * @param submittedByLastname The new value for submittedByLastname
   * @param rejectedDate The new value for rejectedDate
   * @param rejectedByUsername The new value for rejectedByUsername
   * @param rejectedByFirstname The new value for rejectedByFirstname
   * @param rejectedByLastname The new value for rejectedByLastname
   * @param approvedDate The new value for approvedDate
   * @param approvedByUsername The new value for approvedByUsername
   * @param approvedByFirstname The new value for approvedByFirstname
   * @param approvedByLastname The new value for approvedByLastname
   * @param activatedDate The new value for activatedDate
   * @param activatedByUsername The new value for activatedByUsername
   * @param activatedByFirstname The new value for activatedByFirstname
   * @param activatedByLastname The new value for activatedByLastname
   * @param closedDate The new value for closedDate
   * @param closedByUsername The new value for closedByUsername
   * @param closedByFirstname The new value for closedByFirstname
   * @param closedByLastname The new value for closedByLastname
   */
  public ShareAccountApplicationTimelineDataV1(java.lang.String submittedOnDate, java.lang.String submittedByUsername, java.lang.String submittedByFirstname, java.lang.String submittedByLastname, java.lang.String rejectedDate, java.lang.String rejectedByUsername, java.lang.String rejectedByFirstname, java.lang.String rejectedByLastname, java.lang.String approvedDate, java.lang.String approvedByUsername, java.lang.String approvedByFirstname, java.lang.String approvedByLastname, java.lang.String activatedDate, java.lang.String activatedByUsername, java.lang.String activatedByFirstname, java.lang.String activatedByLastname, java.lang.String closedDate, java.lang.String closedByUsername, java.lang.String closedByFirstname, java.lang.String closedByLastname) {
    this.submittedOnDate = submittedOnDate;
    this.submittedByUsername = submittedByUsername;
    this.submittedByFirstname = submittedByFirstname;
    this.submittedByLastname = submittedByLastname;
    this.rejectedDate = rejectedDate;
    this.rejectedByUsername = rejectedByUsername;
    this.rejectedByFirstname = rejectedByFirstname;
    this.rejectedByLastname = rejectedByLastname;
    this.approvedDate = approvedDate;
    this.approvedByUsername = approvedByUsername;
    this.approvedByFirstname = approvedByFirstname;
    this.approvedByLastname = approvedByLastname;
    this.activatedDate = activatedDate;
    this.activatedByUsername = activatedByUsername;
    this.activatedByFirstname = activatedByFirstname;
    this.activatedByLastname = activatedByLastname;
    this.closedDate = closedDate;
    this.closedByUsername = closedByUsername;
    this.closedByFirstname = closedByFirstname;
    this.closedByLastname = closedByLastname;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return submittedOnDate;
    case 1: return submittedByUsername;
    case 2: return submittedByFirstname;
    case 3: return submittedByLastname;
    case 4: return rejectedDate;
    case 5: return rejectedByUsername;
    case 6: return rejectedByFirstname;
    case 7: return rejectedByLastname;
    case 8: return approvedDate;
    case 9: return approvedByUsername;
    case 10: return approvedByFirstname;
    case 11: return approvedByLastname;
    case 12: return activatedDate;
    case 13: return activatedByUsername;
    case 14: return activatedByFirstname;
    case 15: return activatedByLastname;
    case 16: return closedDate;
    case 17: return closedByUsername;
    case 18: return closedByFirstname;
    case 19: return closedByLastname;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: submittedOnDate = value$ != null ? value$.toString() : null; break;
    case 1: submittedByUsername = value$ != null ? value$.toString() : null; break;
    case 2: submittedByFirstname = value$ != null ? value$.toString() : null; break;
    case 3: submittedByLastname = value$ != null ? value$.toString() : null; break;
    case 4: rejectedDate = value$ != null ? value$.toString() : null; break;
    case 5: rejectedByUsername = value$ != null ? value$.toString() : null; break;
    case 6: rejectedByFirstname = value$ != null ? value$.toString() : null; break;
    case 7: rejectedByLastname = value$ != null ? value$.toString() : null; break;
    case 8: approvedDate = value$ != null ? value$.toString() : null; break;
    case 9: approvedByUsername = value$ != null ? value$.toString() : null; break;
    case 10: approvedByFirstname = value$ != null ? value$.toString() : null; break;
    case 11: approvedByLastname = value$ != null ? value$.toString() : null; break;
    case 12: activatedDate = value$ != null ? value$.toString() : null; break;
    case 13: activatedByUsername = value$ != null ? value$.toString() : null; break;
    case 14: activatedByFirstname = value$ != null ? value$.toString() : null; break;
    case 15: activatedByLastname = value$ != null ? value$.toString() : null; break;
    case 16: closedDate = value$ != null ? value$.toString() : null; break;
    case 17: closedByUsername = value$ != null ? value$.toString() : null; break;
    case 18: closedByFirstname = value$ != null ? value$.toString() : null; break;
    case 19: closedByLastname = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'submittedOnDate' field.
   * @return The value of the 'submittedOnDate' field.
   */
  public java.lang.String getSubmittedOnDate() {
    return submittedOnDate;
  }


  /**
   * Sets the value of the 'submittedOnDate' field.
   * @param value the value to set.
   */
  public void setSubmittedOnDate(java.lang.String value) {
    this.submittedOnDate = value;
  }

  /**
   * Gets the value of the 'submittedByUsername' field.
   * @return The value of the 'submittedByUsername' field.
   */
  public java.lang.String getSubmittedByUsername() {
    return submittedByUsername;
  }


  /**
   * Sets the value of the 'submittedByUsername' field.
   * @param value the value to set.
   */
  public void setSubmittedByUsername(java.lang.String value) {
    this.submittedByUsername = value;
  }

  /**
   * Gets the value of the 'submittedByFirstname' field.
   * @return The value of the 'submittedByFirstname' field.
   */
  public java.lang.String getSubmittedByFirstname() {
    return submittedByFirstname;
  }


  /**
   * Sets the value of the 'submittedByFirstname' field.
   * @param value the value to set.
   */
  public void setSubmittedByFirstname(java.lang.String value) {
    this.submittedByFirstname = value;
  }

  /**
   * Gets the value of the 'submittedByLastname' field.
   * @return The value of the 'submittedByLastname' field.
   */
  public java.lang.String getSubmittedByLastname() {
    return submittedByLastname;
  }


  /**
   * Sets the value of the 'submittedByLastname' field.
   * @param value the value to set.
   */
  public void setSubmittedByLastname(java.lang.String value) {
    this.submittedByLastname = value;
  }

  /**
   * Gets the value of the 'rejectedDate' field.
   * @return The value of the 'rejectedDate' field.
   */
  public java.lang.String getRejectedDate() {
    return rejectedDate;
  }


  /**
   * Sets the value of the 'rejectedDate' field.
   * @param value the value to set.
   */
  public void setRejectedDate(java.lang.String value) {
    this.rejectedDate = value;
  }

  /**
   * Gets the value of the 'rejectedByUsername' field.
   * @return The value of the 'rejectedByUsername' field.
   */
  public java.lang.String getRejectedByUsername() {
    return rejectedByUsername;
  }


  /**
   * Sets the value of the 'rejectedByUsername' field.
   * @param value the value to set.
   */
  public void setRejectedByUsername(java.lang.String value) {
    this.rejectedByUsername = value;
  }

  /**
   * Gets the value of the 'rejectedByFirstname' field.
   * @return The value of the 'rejectedByFirstname' field.
   */
  public java.lang.String getRejectedByFirstname() {
    return rejectedByFirstname;
  }


  /**
   * Sets the value of the 'rejectedByFirstname' field.
   * @param value the value to set.
   */
  public void setRejectedByFirstname(java.lang.String value) {
    this.rejectedByFirstname = value;
  }

  /**
   * Gets the value of the 'rejectedByLastname' field.
   * @return The value of the 'rejectedByLastname' field.
   */
  public java.lang.String getRejectedByLastname() {
    return rejectedByLastname;
  }


  /**
   * Sets the value of the 'rejectedByLastname' field.
   * @param value the value to set.
   */
  public void setRejectedByLastname(java.lang.String value) {
    this.rejectedByLastname = value;
  }

  /**
   * Gets the value of the 'approvedDate' field.
   * @return The value of the 'approvedDate' field.
   */
  public java.lang.String getApprovedDate() {
    return approvedDate;
  }


  /**
   * Sets the value of the 'approvedDate' field.
   * @param value the value to set.
   */
  public void setApprovedDate(java.lang.String value) {
    this.approvedDate = value;
  }

  /**
   * Gets the value of the 'approvedByUsername' field.
   * @return The value of the 'approvedByUsername' field.
   */
  public java.lang.String getApprovedByUsername() {
    return approvedByUsername;
  }


  /**
   * Sets the value of the 'approvedByUsername' field.
   * @param value the value to set.
   */
  public void setApprovedByUsername(java.lang.String value) {
    this.approvedByUsername = value;
  }

  /**
   * Gets the value of the 'approvedByFirstname' field.
   * @return The value of the 'approvedByFirstname' field.
   */
  public java.lang.String getApprovedByFirstname() {
    return approvedByFirstname;
  }


  /**
   * Sets the value of the 'approvedByFirstname' field.
   * @param value the value to set.
   */
  public void setApprovedByFirstname(java.lang.String value) {
    this.approvedByFirstname = value;
  }

  /**
   * Gets the value of the 'approvedByLastname' field.
   * @return The value of the 'approvedByLastname' field.
   */
  public java.lang.String getApprovedByLastname() {
    return approvedByLastname;
  }


  /**
   * Sets the value of the 'approvedByLastname' field.
   * @param value the value to set.
   */
  public void setApprovedByLastname(java.lang.String value) {
    this.approvedByLastname = value;
  }

  /**
   * Gets the value of the 'activatedDate' field.
   * @return The value of the 'activatedDate' field.
   */
  public java.lang.String getActivatedDate() {
    return activatedDate;
  }


  /**
   * Sets the value of the 'activatedDate' field.
   * @param value the value to set.
   */
  public void setActivatedDate(java.lang.String value) {
    this.activatedDate = value;
  }

  /**
   * Gets the value of the 'activatedByUsername' field.
   * @return The value of the 'activatedByUsername' field.
   */
  public java.lang.String getActivatedByUsername() {
    return activatedByUsername;
  }


  /**
   * Sets the value of the 'activatedByUsername' field.
   * @param value the value to set.
   */
  public void setActivatedByUsername(java.lang.String value) {
    this.activatedByUsername = value;
  }

  /**
   * Gets the value of the 'activatedByFirstname' field.
   * @return The value of the 'activatedByFirstname' field.
   */
  public java.lang.String getActivatedByFirstname() {
    return activatedByFirstname;
  }


  /**
   * Sets the value of the 'activatedByFirstname' field.
   * @param value the value to set.
   */
  public void setActivatedByFirstname(java.lang.String value) {
    this.activatedByFirstname = value;
  }

  /**
   * Gets the value of the 'activatedByLastname' field.
   * @return The value of the 'activatedByLastname' field.
   */
  public java.lang.String getActivatedByLastname() {
    return activatedByLastname;
  }


  /**
   * Sets the value of the 'activatedByLastname' field.
   * @param value the value to set.
   */
  public void setActivatedByLastname(java.lang.String value) {
    this.activatedByLastname = value;
  }

  /**
   * Gets the value of the 'closedDate' field.
   * @return The value of the 'closedDate' field.
   */
  public java.lang.String getClosedDate() {
    return closedDate;
  }


  /**
   * Sets the value of the 'closedDate' field.
   * @param value the value to set.
   */
  public void setClosedDate(java.lang.String value) {
    this.closedDate = value;
  }

  /**
   * Gets the value of the 'closedByUsername' field.
   * @return The value of the 'closedByUsername' field.
   */
  public java.lang.String getClosedByUsername() {
    return closedByUsername;
  }


  /**
   * Sets the value of the 'closedByUsername' field.
   * @param value the value to set.
   */
  public void setClosedByUsername(java.lang.String value) {
    this.closedByUsername = value;
  }

  /**
   * Gets the value of the 'closedByFirstname' field.
   * @return The value of the 'closedByFirstname' field.
   */
  public java.lang.String getClosedByFirstname() {
    return closedByFirstname;
  }


  /**
   * Sets the value of the 'closedByFirstname' field.
   * @param value the value to set.
   */
  public void setClosedByFirstname(java.lang.String value) {
    this.closedByFirstname = value;
  }

  /**
   * Gets the value of the 'closedByLastname' field.
   * @return The value of the 'closedByLastname' field.
   */
  public java.lang.String getClosedByLastname() {
    return closedByLastname;
  }


  /**
   * Sets the value of the 'closedByLastname' field.
   * @param value the value to set.
   */
  public void setClosedByLastname(java.lang.String value) {
    this.closedByLastname = value;
  }

  /**
   * Creates a new ShareAccountApplicationTimelineDataV1 RecordBuilder.
   * @return A new ShareAccountApplicationTimelineDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder newBuilder() {
    return new org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder();
  }

  /**
   * Creates a new ShareAccountApplicationTimelineDataV1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ShareAccountApplicationTimelineDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder newBuilder(org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder other) {
    if (other == null) {
      return new org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder(other);
    }
  }

  /**
   * Creates a new ShareAccountApplicationTimelineDataV1 RecordBuilder by copying an existing ShareAccountApplicationTimelineDataV1 instance.
   * @param other The existing instance to copy.
   * @return A new ShareAccountApplicationTimelineDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder newBuilder(org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1 other) {
    if (other == null) {
      return new org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder(other);
    }
  }

  /**
   * RecordBuilder for ShareAccountApplicationTimelineDataV1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ShareAccountApplicationTimelineDataV1>
    implements org.apache.avro.data.RecordBuilder<ShareAccountApplicationTimelineDataV1> {

    private java.lang.String submittedOnDate;
    private java.lang.String submittedByUsername;
    private java.lang.String submittedByFirstname;
    private java.lang.String submittedByLastname;
    private java.lang.String rejectedDate;
    private java.lang.String rejectedByUsername;
    private java.lang.String rejectedByFirstname;
    private java.lang.String rejectedByLastname;
    private java.lang.String approvedDate;
    private java.lang.String approvedByUsername;
    private java.lang.String approvedByFirstname;
    private java.lang.String approvedByLastname;
    private java.lang.String activatedDate;
    private java.lang.String activatedByUsername;
    private java.lang.String activatedByFirstname;
    private java.lang.String activatedByLastname;
    private java.lang.String closedDate;
    private java.lang.String closedByUsername;
    private java.lang.String closedByFirstname;
    private java.lang.String closedByLastname;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.submittedOnDate)) {
        this.submittedOnDate = data().deepCopy(fields()[0].schema(), other.submittedOnDate);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.submittedByUsername)) {
        this.submittedByUsername = data().deepCopy(fields()[1].schema(), other.submittedByUsername);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.submittedByFirstname)) {
        this.submittedByFirstname = data().deepCopy(fields()[2].schema(), other.submittedByFirstname);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.submittedByLastname)) {
        this.submittedByLastname = data().deepCopy(fields()[3].schema(), other.submittedByLastname);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.rejectedDate)) {
        this.rejectedDate = data().deepCopy(fields()[4].schema(), other.rejectedDate);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.rejectedByUsername)) {
        this.rejectedByUsername = data().deepCopy(fields()[5].schema(), other.rejectedByUsername);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.rejectedByFirstname)) {
        this.rejectedByFirstname = data().deepCopy(fields()[6].schema(), other.rejectedByFirstname);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.rejectedByLastname)) {
        this.rejectedByLastname = data().deepCopy(fields()[7].schema(), other.rejectedByLastname);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.approvedDate)) {
        this.approvedDate = data().deepCopy(fields()[8].schema(), other.approvedDate);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.approvedByUsername)) {
        this.approvedByUsername = data().deepCopy(fields()[9].schema(), other.approvedByUsername);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.approvedByFirstname)) {
        this.approvedByFirstname = data().deepCopy(fields()[10].schema(), other.approvedByFirstname);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.approvedByLastname)) {
        this.approvedByLastname = data().deepCopy(fields()[11].schema(), other.approvedByLastname);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.activatedDate)) {
        this.activatedDate = data().deepCopy(fields()[12].schema(), other.activatedDate);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.activatedByUsername)) {
        this.activatedByUsername = data().deepCopy(fields()[13].schema(), other.activatedByUsername);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.activatedByFirstname)) {
        this.activatedByFirstname = data().deepCopy(fields()[14].schema(), other.activatedByFirstname);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.activatedByLastname)) {
        this.activatedByLastname = data().deepCopy(fields()[15].schema(), other.activatedByLastname);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.closedDate)) {
        this.closedDate = data().deepCopy(fields()[16].schema(), other.closedDate);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.closedByUsername)) {
        this.closedByUsername = data().deepCopy(fields()[17].schema(), other.closedByUsername);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.closedByFirstname)) {
        this.closedByFirstname = data().deepCopy(fields()[18].schema(), other.closedByFirstname);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.closedByLastname)) {
        this.closedByLastname = data().deepCopy(fields()[19].schema(), other.closedByLastname);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
    }

    /**
     * Creates a Builder by copying an existing ShareAccountApplicationTimelineDataV1 instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.submittedOnDate)) {
        this.submittedOnDate = data().deepCopy(fields()[0].schema(), other.submittedOnDate);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.submittedByUsername)) {
        this.submittedByUsername = data().deepCopy(fields()[1].schema(), other.submittedByUsername);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.submittedByFirstname)) {
        this.submittedByFirstname = data().deepCopy(fields()[2].schema(), other.submittedByFirstname);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.submittedByLastname)) {
        this.submittedByLastname = data().deepCopy(fields()[3].schema(), other.submittedByLastname);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.rejectedDate)) {
        this.rejectedDate = data().deepCopy(fields()[4].schema(), other.rejectedDate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.rejectedByUsername)) {
        this.rejectedByUsername = data().deepCopy(fields()[5].schema(), other.rejectedByUsername);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.rejectedByFirstname)) {
        this.rejectedByFirstname = data().deepCopy(fields()[6].schema(), other.rejectedByFirstname);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.rejectedByLastname)) {
        this.rejectedByLastname = data().deepCopy(fields()[7].schema(), other.rejectedByLastname);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.approvedDate)) {
        this.approvedDate = data().deepCopy(fields()[8].schema(), other.approvedDate);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.approvedByUsername)) {
        this.approvedByUsername = data().deepCopy(fields()[9].schema(), other.approvedByUsername);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.approvedByFirstname)) {
        this.approvedByFirstname = data().deepCopy(fields()[10].schema(), other.approvedByFirstname);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.approvedByLastname)) {
        this.approvedByLastname = data().deepCopy(fields()[11].schema(), other.approvedByLastname);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.activatedDate)) {
        this.activatedDate = data().deepCopy(fields()[12].schema(), other.activatedDate);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.activatedByUsername)) {
        this.activatedByUsername = data().deepCopy(fields()[13].schema(), other.activatedByUsername);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.activatedByFirstname)) {
        this.activatedByFirstname = data().deepCopy(fields()[14].schema(), other.activatedByFirstname);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.activatedByLastname)) {
        this.activatedByLastname = data().deepCopy(fields()[15].schema(), other.activatedByLastname);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.closedDate)) {
        this.closedDate = data().deepCopy(fields()[16].schema(), other.closedDate);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.closedByUsername)) {
        this.closedByUsername = data().deepCopy(fields()[17].schema(), other.closedByUsername);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.closedByFirstname)) {
        this.closedByFirstname = data().deepCopy(fields()[18].schema(), other.closedByFirstname);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.closedByLastname)) {
        this.closedByLastname = data().deepCopy(fields()[19].schema(), other.closedByLastname);
        fieldSetFlags()[19] = true;
      }
    }

    /**
      * Gets the value of the 'submittedOnDate' field.
      * @return The value.
      */
    public java.lang.String getSubmittedOnDate() {
      return submittedOnDate;
    }


    /**
      * Sets the value of the 'submittedOnDate' field.
      * @param value The value of 'submittedOnDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder setSubmittedOnDate(java.lang.String value) {
      validate(fields()[0], value);
      this.submittedOnDate = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'submittedOnDate' field has been set.
      * @return True if the 'submittedOnDate' field has been set, false otherwise.
      */
    public boolean hasSubmittedOnDate() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'submittedOnDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder clearSubmittedOnDate() {
      submittedOnDate = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'submittedByUsername' field.
      * @return The value.
      */
    public java.lang.String getSubmittedByUsername() {
      return submittedByUsername;
    }


    /**
      * Sets the value of the 'submittedByUsername' field.
      * @param value The value of 'submittedByUsername'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder setSubmittedByUsername(java.lang.String value) {
      validate(fields()[1], value);
      this.submittedByUsername = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'submittedByUsername' field has been set.
      * @return True if the 'submittedByUsername' field has been set, false otherwise.
      */
    public boolean hasSubmittedByUsername() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'submittedByUsername' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder clearSubmittedByUsername() {
      submittedByUsername = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'submittedByFirstname' field.
      * @return The value.
      */
    public java.lang.String getSubmittedByFirstname() {
      return submittedByFirstname;
    }


    /**
      * Sets the value of the 'submittedByFirstname' field.
      * @param value The value of 'submittedByFirstname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder setSubmittedByFirstname(java.lang.String value) {
      validate(fields()[2], value);
      this.submittedByFirstname = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'submittedByFirstname' field has been set.
      * @return True if the 'submittedByFirstname' field has been set, false otherwise.
      */
    public boolean hasSubmittedByFirstname() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'submittedByFirstname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder clearSubmittedByFirstname() {
      submittedByFirstname = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'submittedByLastname' field.
      * @return The value.
      */
    public java.lang.String getSubmittedByLastname() {
      return submittedByLastname;
    }


    /**
      * Sets the value of the 'submittedByLastname' field.
      * @param value The value of 'submittedByLastname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder setSubmittedByLastname(java.lang.String value) {
      validate(fields()[3], value);
      this.submittedByLastname = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'submittedByLastname' field has been set.
      * @return True if the 'submittedByLastname' field has been set, false otherwise.
      */
    public boolean hasSubmittedByLastname() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'submittedByLastname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder clearSubmittedByLastname() {
      submittedByLastname = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'rejectedDate' field.
      * @return The value.
      */
    public java.lang.String getRejectedDate() {
      return rejectedDate;
    }


    /**
      * Sets the value of the 'rejectedDate' field.
      * @param value The value of 'rejectedDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder setRejectedDate(java.lang.String value) {
      validate(fields()[4], value);
      this.rejectedDate = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'rejectedDate' field has been set.
      * @return True if the 'rejectedDate' field has been set, false otherwise.
      */
    public boolean hasRejectedDate() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'rejectedDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder clearRejectedDate() {
      rejectedDate = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'rejectedByUsername' field.
      * @return The value.
      */
    public java.lang.String getRejectedByUsername() {
      return rejectedByUsername;
    }


    /**
      * Sets the value of the 'rejectedByUsername' field.
      * @param value The value of 'rejectedByUsername'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder setRejectedByUsername(java.lang.String value) {
      validate(fields()[5], value);
      this.rejectedByUsername = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'rejectedByUsername' field has been set.
      * @return True if the 'rejectedByUsername' field has been set, false otherwise.
      */
    public boolean hasRejectedByUsername() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'rejectedByUsername' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder clearRejectedByUsername() {
      rejectedByUsername = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'rejectedByFirstname' field.
      * @return The value.
      */
    public java.lang.String getRejectedByFirstname() {
      return rejectedByFirstname;
    }


    /**
      * Sets the value of the 'rejectedByFirstname' field.
      * @param value The value of 'rejectedByFirstname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder setRejectedByFirstname(java.lang.String value) {
      validate(fields()[6], value);
      this.rejectedByFirstname = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'rejectedByFirstname' field has been set.
      * @return True if the 'rejectedByFirstname' field has been set, false otherwise.
      */
    public boolean hasRejectedByFirstname() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'rejectedByFirstname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder clearRejectedByFirstname() {
      rejectedByFirstname = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'rejectedByLastname' field.
      * @return The value.
      */
    public java.lang.String getRejectedByLastname() {
      return rejectedByLastname;
    }


    /**
      * Sets the value of the 'rejectedByLastname' field.
      * @param value The value of 'rejectedByLastname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder setRejectedByLastname(java.lang.String value) {
      validate(fields()[7], value);
      this.rejectedByLastname = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'rejectedByLastname' field has been set.
      * @return True if the 'rejectedByLastname' field has been set, false otherwise.
      */
    public boolean hasRejectedByLastname() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'rejectedByLastname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder clearRejectedByLastname() {
      rejectedByLastname = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'approvedDate' field.
      * @return The value.
      */
    public java.lang.String getApprovedDate() {
      return approvedDate;
    }


    /**
      * Sets the value of the 'approvedDate' field.
      * @param value The value of 'approvedDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder setApprovedDate(java.lang.String value) {
      validate(fields()[8], value);
      this.approvedDate = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'approvedDate' field has been set.
      * @return True if the 'approvedDate' field has been set, false otherwise.
      */
    public boolean hasApprovedDate() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'approvedDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder clearApprovedDate() {
      approvedDate = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'approvedByUsername' field.
      * @return The value.
      */
    public java.lang.String getApprovedByUsername() {
      return approvedByUsername;
    }


    /**
      * Sets the value of the 'approvedByUsername' field.
      * @param value The value of 'approvedByUsername'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder setApprovedByUsername(java.lang.String value) {
      validate(fields()[9], value);
      this.approvedByUsername = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'approvedByUsername' field has been set.
      * @return True if the 'approvedByUsername' field has been set, false otherwise.
      */
    public boolean hasApprovedByUsername() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'approvedByUsername' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder clearApprovedByUsername() {
      approvedByUsername = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'approvedByFirstname' field.
      * @return The value.
      */
    public java.lang.String getApprovedByFirstname() {
      return approvedByFirstname;
    }


    /**
      * Sets the value of the 'approvedByFirstname' field.
      * @param value The value of 'approvedByFirstname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder setApprovedByFirstname(java.lang.String value) {
      validate(fields()[10], value);
      this.approvedByFirstname = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'approvedByFirstname' field has been set.
      * @return True if the 'approvedByFirstname' field has been set, false otherwise.
      */
    public boolean hasApprovedByFirstname() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'approvedByFirstname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder clearApprovedByFirstname() {
      approvedByFirstname = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'approvedByLastname' field.
      * @return The value.
      */
    public java.lang.String getApprovedByLastname() {
      return approvedByLastname;
    }


    /**
      * Sets the value of the 'approvedByLastname' field.
      * @param value The value of 'approvedByLastname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder setApprovedByLastname(java.lang.String value) {
      validate(fields()[11], value);
      this.approvedByLastname = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'approvedByLastname' field has been set.
      * @return True if the 'approvedByLastname' field has been set, false otherwise.
      */
    public boolean hasApprovedByLastname() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'approvedByLastname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder clearApprovedByLastname() {
      approvedByLastname = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'activatedDate' field.
      * @return The value.
      */
    public java.lang.String getActivatedDate() {
      return activatedDate;
    }


    /**
      * Sets the value of the 'activatedDate' field.
      * @param value The value of 'activatedDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder setActivatedDate(java.lang.String value) {
      validate(fields()[12], value);
      this.activatedDate = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'activatedDate' field has been set.
      * @return True if the 'activatedDate' field has been set, false otherwise.
      */
    public boolean hasActivatedDate() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'activatedDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder clearActivatedDate() {
      activatedDate = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'activatedByUsername' field.
      * @return The value.
      */
    public java.lang.String getActivatedByUsername() {
      return activatedByUsername;
    }


    /**
      * Sets the value of the 'activatedByUsername' field.
      * @param value The value of 'activatedByUsername'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder setActivatedByUsername(java.lang.String value) {
      validate(fields()[13], value);
      this.activatedByUsername = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'activatedByUsername' field has been set.
      * @return True if the 'activatedByUsername' field has been set, false otherwise.
      */
    public boolean hasActivatedByUsername() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'activatedByUsername' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder clearActivatedByUsername() {
      activatedByUsername = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'activatedByFirstname' field.
      * @return The value.
      */
    public java.lang.String getActivatedByFirstname() {
      return activatedByFirstname;
    }


    /**
      * Sets the value of the 'activatedByFirstname' field.
      * @param value The value of 'activatedByFirstname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder setActivatedByFirstname(java.lang.String value) {
      validate(fields()[14], value);
      this.activatedByFirstname = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'activatedByFirstname' field has been set.
      * @return True if the 'activatedByFirstname' field has been set, false otherwise.
      */
    public boolean hasActivatedByFirstname() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'activatedByFirstname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder clearActivatedByFirstname() {
      activatedByFirstname = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'activatedByLastname' field.
      * @return The value.
      */
    public java.lang.String getActivatedByLastname() {
      return activatedByLastname;
    }


    /**
      * Sets the value of the 'activatedByLastname' field.
      * @param value The value of 'activatedByLastname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder setActivatedByLastname(java.lang.String value) {
      validate(fields()[15], value);
      this.activatedByLastname = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'activatedByLastname' field has been set.
      * @return True if the 'activatedByLastname' field has been set, false otherwise.
      */
    public boolean hasActivatedByLastname() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'activatedByLastname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder clearActivatedByLastname() {
      activatedByLastname = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'closedDate' field.
      * @return The value.
      */
    public java.lang.String getClosedDate() {
      return closedDate;
    }


    /**
      * Sets the value of the 'closedDate' field.
      * @param value The value of 'closedDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder setClosedDate(java.lang.String value) {
      validate(fields()[16], value);
      this.closedDate = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'closedDate' field has been set.
      * @return True if the 'closedDate' field has been set, false otherwise.
      */
    public boolean hasClosedDate() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'closedDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder clearClosedDate() {
      closedDate = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'closedByUsername' field.
      * @return The value.
      */
    public java.lang.String getClosedByUsername() {
      return closedByUsername;
    }


    /**
      * Sets the value of the 'closedByUsername' field.
      * @param value The value of 'closedByUsername'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder setClosedByUsername(java.lang.String value) {
      validate(fields()[17], value);
      this.closedByUsername = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'closedByUsername' field has been set.
      * @return True if the 'closedByUsername' field has been set, false otherwise.
      */
    public boolean hasClosedByUsername() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'closedByUsername' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder clearClosedByUsername() {
      closedByUsername = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'closedByFirstname' field.
      * @return The value.
      */
    public java.lang.String getClosedByFirstname() {
      return closedByFirstname;
    }


    /**
      * Sets the value of the 'closedByFirstname' field.
      * @param value The value of 'closedByFirstname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder setClosedByFirstname(java.lang.String value) {
      validate(fields()[18], value);
      this.closedByFirstname = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'closedByFirstname' field has been set.
      * @return True if the 'closedByFirstname' field has been set, false otherwise.
      */
    public boolean hasClosedByFirstname() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'closedByFirstname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder clearClosedByFirstname() {
      closedByFirstname = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'closedByLastname' field.
      * @return The value.
      */
    public java.lang.String getClosedByLastname() {
      return closedByLastname;
    }


    /**
      * Sets the value of the 'closedByLastname' field.
      * @param value The value of 'closedByLastname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder setClosedByLastname(java.lang.String value) {
      validate(fields()[19], value);
      this.closedByLastname = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'closedByLastname' field has been set.
      * @return True if the 'closedByLastname' field has been set, false otherwise.
      */
    public boolean hasClosedByLastname() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'closedByLastname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareAccountApplicationTimelineDataV1.Builder clearClosedByLastname() {
      closedByLastname = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ShareAccountApplicationTimelineDataV1 build() {
      try {
        ShareAccountApplicationTimelineDataV1 record = new ShareAccountApplicationTimelineDataV1();
        record.submittedOnDate = fieldSetFlags()[0] ? this.submittedOnDate : (java.lang.String) defaultValue(fields()[0]);
        record.submittedByUsername = fieldSetFlags()[1] ? this.submittedByUsername : (java.lang.String) defaultValue(fields()[1]);
        record.submittedByFirstname = fieldSetFlags()[2] ? this.submittedByFirstname : (java.lang.String) defaultValue(fields()[2]);
        record.submittedByLastname = fieldSetFlags()[3] ? this.submittedByLastname : (java.lang.String) defaultValue(fields()[3]);
        record.rejectedDate = fieldSetFlags()[4] ? this.rejectedDate : (java.lang.String) defaultValue(fields()[4]);
        record.rejectedByUsername = fieldSetFlags()[5] ? this.rejectedByUsername : (java.lang.String) defaultValue(fields()[5]);
        record.rejectedByFirstname = fieldSetFlags()[6] ? this.rejectedByFirstname : (java.lang.String) defaultValue(fields()[6]);
        record.rejectedByLastname = fieldSetFlags()[7] ? this.rejectedByLastname : (java.lang.String) defaultValue(fields()[7]);
        record.approvedDate = fieldSetFlags()[8] ? this.approvedDate : (java.lang.String) defaultValue(fields()[8]);
        record.approvedByUsername = fieldSetFlags()[9] ? this.approvedByUsername : (java.lang.String) defaultValue(fields()[9]);
        record.approvedByFirstname = fieldSetFlags()[10] ? this.approvedByFirstname : (java.lang.String) defaultValue(fields()[10]);
        record.approvedByLastname = fieldSetFlags()[11] ? this.approvedByLastname : (java.lang.String) defaultValue(fields()[11]);
        record.activatedDate = fieldSetFlags()[12] ? this.activatedDate : (java.lang.String) defaultValue(fields()[12]);
        record.activatedByUsername = fieldSetFlags()[13] ? this.activatedByUsername : (java.lang.String) defaultValue(fields()[13]);
        record.activatedByFirstname = fieldSetFlags()[14] ? this.activatedByFirstname : (java.lang.String) defaultValue(fields()[14]);
        record.activatedByLastname = fieldSetFlags()[15] ? this.activatedByLastname : (java.lang.String) defaultValue(fields()[15]);
        record.closedDate = fieldSetFlags()[16] ? this.closedDate : (java.lang.String) defaultValue(fields()[16]);
        record.closedByUsername = fieldSetFlags()[17] ? this.closedByUsername : (java.lang.String) defaultValue(fields()[17]);
        record.closedByFirstname = fieldSetFlags()[18] ? this.closedByFirstname : (java.lang.String) defaultValue(fields()[18]);
        record.closedByLastname = fieldSetFlags()[19] ? this.closedByLastname : (java.lang.String) defaultValue(fields()[19]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ShareAccountApplicationTimelineDataV1>
    WRITER$ = (org.apache.avro.io.DatumWriter<ShareAccountApplicationTimelineDataV1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ShareAccountApplicationTimelineDataV1>
    READER$ = (org.apache.avro.io.DatumReader<ShareAccountApplicationTimelineDataV1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.submittedOnDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.submittedOnDate);
    }

    if (this.submittedByUsername == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.submittedByUsername);
    }

    if (this.submittedByFirstname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.submittedByFirstname);
    }

    if (this.submittedByLastname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.submittedByLastname);
    }

    if (this.rejectedDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.rejectedDate);
    }

    if (this.rejectedByUsername == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.rejectedByUsername);
    }

    if (this.rejectedByFirstname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.rejectedByFirstname);
    }

    if (this.rejectedByLastname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.rejectedByLastname);
    }

    if (this.approvedDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.approvedDate);
    }

    if (this.approvedByUsername == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.approvedByUsername);
    }

    if (this.approvedByFirstname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.approvedByFirstname);
    }

    if (this.approvedByLastname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.approvedByLastname);
    }

    if (this.activatedDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.activatedDate);
    }

    if (this.activatedByUsername == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.activatedByUsername);
    }

    if (this.activatedByFirstname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.activatedByFirstname);
    }

    if (this.activatedByLastname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.activatedByLastname);
    }

    if (this.closedDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.closedDate);
    }

    if (this.closedByUsername == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.closedByUsername);
    }

    if (this.closedByFirstname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.closedByFirstname);
    }

    if (this.closedByLastname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.closedByLastname);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.submittedOnDate = null;
      } else {
        this.submittedOnDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.submittedByUsername = null;
      } else {
        this.submittedByUsername = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.submittedByFirstname = null;
      } else {
        this.submittedByFirstname = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.submittedByLastname = null;
      } else {
        this.submittedByLastname = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.rejectedDate = null;
      } else {
        this.rejectedDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.rejectedByUsername = null;
      } else {
        this.rejectedByUsername = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.rejectedByFirstname = null;
      } else {
        this.rejectedByFirstname = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.rejectedByLastname = null;
      } else {
        this.rejectedByLastname = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.approvedDate = null;
      } else {
        this.approvedDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.approvedByUsername = null;
      } else {
        this.approvedByUsername = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.approvedByFirstname = null;
      } else {
        this.approvedByFirstname = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.approvedByLastname = null;
      } else {
        this.approvedByLastname = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.activatedDate = null;
      } else {
        this.activatedDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.activatedByUsername = null;
      } else {
        this.activatedByUsername = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.activatedByFirstname = null;
      } else {
        this.activatedByFirstname = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.activatedByLastname = null;
      } else {
        this.activatedByLastname = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.closedDate = null;
      } else {
        this.closedDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.closedByUsername = null;
      } else {
        this.closedByUsername = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.closedByFirstname = null;
      } else {
        this.closedByFirstname = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.closedByLastname = null;
      } else {
        this.closedByLastname = in.readString();
      }

    } else {
      for (int i = 0; i < 20; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.submittedOnDate = null;
          } else {
            this.submittedOnDate = in.readString();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.submittedByUsername = null;
          } else {
            this.submittedByUsername = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.submittedByFirstname = null;
          } else {
            this.submittedByFirstname = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.submittedByLastname = null;
          } else {
            this.submittedByLastname = in.readString();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.rejectedDate = null;
          } else {
            this.rejectedDate = in.readString();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.rejectedByUsername = null;
          } else {
            this.rejectedByUsername = in.readString();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.rejectedByFirstname = null;
          } else {
            this.rejectedByFirstname = in.readString();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.rejectedByLastname = null;
          } else {
            this.rejectedByLastname = in.readString();
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.approvedDate = null;
          } else {
            this.approvedDate = in.readString();
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.approvedByUsername = null;
          } else {
            this.approvedByUsername = in.readString();
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.approvedByFirstname = null;
          } else {
            this.approvedByFirstname = in.readString();
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.approvedByLastname = null;
          } else {
            this.approvedByLastname = in.readString();
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.activatedDate = null;
          } else {
            this.activatedDate = in.readString();
          }
          break;

        case 13:
          if (in.readIndex() != 1) {
            in.readNull();
            this.activatedByUsername = null;
          } else {
            this.activatedByUsername = in.readString();
          }
          break;

        case 14:
          if (in.readIndex() != 1) {
            in.readNull();
            this.activatedByFirstname = null;
          } else {
            this.activatedByFirstname = in.readString();
          }
          break;

        case 15:
          if (in.readIndex() != 1) {
            in.readNull();
            this.activatedByLastname = null;
          } else {
            this.activatedByLastname = in.readString();
          }
          break;

        case 16:
          if (in.readIndex() != 1) {
            in.readNull();
            this.closedDate = null;
          } else {
            this.closedDate = in.readString();
          }
          break;

        case 17:
          if (in.readIndex() != 1) {
            in.readNull();
            this.closedByUsername = null;
          } else {
            this.closedByUsername = in.readString();
          }
          break;

        case 18:
          if (in.readIndex() != 1) {
            in.readNull();
            this.closedByFirstname = null;
          } else {
            this.closedByFirstname = in.readString();
          }
          break;

        case 19:
          if (in.readIndex() != 1) {
            in.readNull();
            this.closedByLastname = null;
          } else {
            this.closedByLastname = in.readString();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










