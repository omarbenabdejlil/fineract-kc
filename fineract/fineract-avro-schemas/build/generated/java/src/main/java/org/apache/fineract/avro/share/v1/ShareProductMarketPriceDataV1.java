/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

package org.apache.fineract.avro.share.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ShareProductMarketPriceDataV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, org.apache.fineract.avro.generator.ByteBufferSerializable {
  private static final long serialVersionUID = 1310151672466933402L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ShareProductMarketPriceDataV1\",\"namespace\":\"org.apache.fineract.avro.share.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"fromDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"shareValue\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<ShareProductMarketPriceDataV1> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ShareProductMarketPriceDataV1> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ShareProductMarketPriceDataV1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ShareProductMarketPriceDataV1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ShareProductMarketPriceDataV1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ShareProductMarketPriceDataV1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  @Override
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ShareProductMarketPriceDataV1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ShareProductMarketPriceDataV1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ShareProductMarketPriceDataV1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.Long id;
  private java.lang.String fromDate;
  private java.math.BigDecimal shareValue;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ShareProductMarketPriceDataV1() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param fromDate The new value for fromDate
   * @param shareValue The new value for shareValue
   */
  public ShareProductMarketPriceDataV1(java.lang.Long id, java.lang.String fromDate, java.math.BigDecimal shareValue) {
    this.id = id;
    this.fromDate = fromDate;
    this.shareValue = shareValue;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return fromDate;
    case 2: return shareValue;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: fromDate = value$ != null ? value$.toString() : null; break;
    case 2: shareValue = (java.math.BigDecimal)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'fromDate' field.
   * @return The value of the 'fromDate' field.
   */
  public java.lang.String getFromDate() {
    return fromDate;
  }


  /**
   * Sets the value of the 'fromDate' field.
   * @param value the value to set.
   */
  public void setFromDate(java.lang.String value) {
    this.fromDate = value;
  }

  /**
   * Gets the value of the 'shareValue' field.
   * @return The value of the 'shareValue' field.
   */
  public java.math.BigDecimal getShareValue() {
    return shareValue;
  }


  /**
   * Sets the value of the 'shareValue' field.
   * @param value the value to set.
   */
  public void setShareValue(java.math.BigDecimal value) {
    this.shareValue = value;
  }

  /**
   * Creates a new ShareProductMarketPriceDataV1 RecordBuilder.
   * @return A new ShareProductMarketPriceDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1.Builder newBuilder() {
    return new org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1.Builder();
  }

  /**
   * Creates a new ShareProductMarketPriceDataV1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ShareProductMarketPriceDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1.Builder newBuilder(org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1.Builder other) {
    if (other == null) {
      return new org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1.Builder(other);
    }
  }

  /**
   * Creates a new ShareProductMarketPriceDataV1 RecordBuilder by copying an existing ShareProductMarketPriceDataV1 instance.
   * @param other The existing instance to copy.
   * @return A new ShareProductMarketPriceDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1.Builder newBuilder(org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1 other) {
    if (other == null) {
      return new org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1.Builder(other);
    }
  }

  /**
   * RecordBuilder for ShareProductMarketPriceDataV1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ShareProductMarketPriceDataV1>
    implements org.apache.avro.data.RecordBuilder<ShareProductMarketPriceDataV1> {

    private java.lang.Long id;
    private java.lang.String fromDate;
    private java.math.BigDecimal shareValue;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.fromDate)) {
        this.fromDate = data().deepCopy(fields()[1].schema(), other.fromDate);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.shareValue)) {
        this.shareValue = data().deepCopy(fields()[2].schema(), other.shareValue);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing ShareProductMarketPriceDataV1 instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.fromDate)) {
        this.fromDate = data().deepCopy(fields()[1].schema(), other.fromDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.shareValue)) {
        this.shareValue = data().deepCopy(fields()[2].schema(), other.shareValue);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1.Builder setId(java.lang.Long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'fromDate' field.
      * @return The value.
      */
    public java.lang.String getFromDate() {
      return fromDate;
    }


    /**
      * Sets the value of the 'fromDate' field.
      * @param value The value of 'fromDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1.Builder setFromDate(java.lang.String value) {
      validate(fields()[1], value);
      this.fromDate = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'fromDate' field has been set.
      * @return True if the 'fromDate' field has been set, false otherwise.
      */
    public boolean hasFromDate() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'fromDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1.Builder clearFromDate() {
      fromDate = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'shareValue' field.
      * @return The value.
      */
    public java.math.BigDecimal getShareValue() {
      return shareValue;
    }


    /**
      * Sets the value of the 'shareValue' field.
      * @param value The value of 'shareValue'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1.Builder setShareValue(java.math.BigDecimal value) {
      validate(fields()[2], value);
      this.shareValue = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'shareValue' field has been set.
      * @return True if the 'shareValue' field has been set, false otherwise.
      */
    public boolean hasShareValue() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'shareValue' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1.Builder clearShareValue() {
      shareValue = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ShareProductMarketPriceDataV1 build() {
      try {
        ShareProductMarketPriceDataV1 record = new ShareProductMarketPriceDataV1();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.fromDate = fieldSetFlags()[1] ? this.fromDate : (java.lang.String) defaultValue(fields()[1]);
        record.shareValue = fieldSetFlags()[2] ? this.shareValue : (java.math.BigDecimal) defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ShareProductMarketPriceDataV1>
    WRITER$ = (org.apache.avro.io.DatumWriter<ShareProductMarketPriceDataV1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ShareProductMarketPriceDataV1>
    READER$ = (org.apache.avro.io.DatumReader<ShareProductMarketPriceDataV1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










