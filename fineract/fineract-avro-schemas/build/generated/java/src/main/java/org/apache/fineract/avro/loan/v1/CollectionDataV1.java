/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

package org.apache.fineract.avro.loan.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class CollectionDataV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, org.apache.fineract.avro.generator.ByteBufferSerializable {
  private static final long serialVersionUID = -2783734145895306433L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CollectionDataV1\",\"namespace\":\"org.apache.fineract.avro.loan.v1\",\"fields\":[{\"name\":\"availableDisbursementAmount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"pastDueDays\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"nextPaymentDueDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"delinquentDays\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"delinquentDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"delinquentAmount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"lastPaymentDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lastPaymentAmount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"lastRepaymentDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"lastRepaymentAmount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"delinquencyPausePeriods\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"DelinquencyPausePeriodV1\",\"fields\":[{\"name\":\"active\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"pausePeriodStart\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"pausePeriodEnd\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"installmentDelinquencyBuckets\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"LoanInstallmentDelinquencyBucketDataV1\",\"fields\":[{\"name\":\"delinquencyRange\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DelinquencyRangeDataV1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"classification\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"minimumAgeDays\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"maximumAgeDays\",\"type\":[\"null\",\"int\"],\"default\":null}]}],\"default\":null},{\"name\":\"amount\",\"type\":{\"type\":\"record\",\"name\":\"LoanAmountDataV1\",\"fields\":[{\"name\":\"totalAmount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"principalAmount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"interestAmount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"feeAmount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"penaltyAmount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null}]},\"doc\":\"Contains installments  total, fee, interest, principal and penalty amount summaries\"},{\"name\":\"charges\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"LoanChargeDataRangeViewV1\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"currency\",\"type\":{\"type\":\"record\",\"name\":\"CurrencyDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"decimalPlaces\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"inMultiplesOf\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"displaySymbol\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nameCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"displayLabel\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}},{\"name\":\"amount\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}}]}}},{\"name\":\"currency\",\"type\":\"org.apache.fineract.avro.generic.v1.CurrencyDataV1\"}]}}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<CollectionDataV1> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CollectionDataV1> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CollectionDataV1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CollectionDataV1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CollectionDataV1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CollectionDataV1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  @Override
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CollectionDataV1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CollectionDataV1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CollectionDataV1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.math.BigDecimal availableDisbursementAmount;
  private java.lang.Integer pastDueDays;
  private java.lang.String nextPaymentDueDate;
  private java.lang.Integer delinquentDays;
  private java.lang.String delinquentDate;
  private java.math.BigDecimal delinquentAmount;
  private java.lang.String lastPaymentDate;
  private java.math.BigDecimal lastPaymentAmount;
  private java.lang.String lastRepaymentDate;
  private java.math.BigDecimal lastRepaymentAmount;
  private java.util.List<org.apache.fineract.avro.loan.v1.DelinquencyPausePeriodV1> delinquencyPausePeriods;
  private java.util.List<org.apache.fineract.avro.loan.v1.LoanInstallmentDelinquencyBucketDataV1> installmentDelinquencyBuckets;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CollectionDataV1() {}

  /**
   * All-args constructor.
   * @param availableDisbursementAmount The new value for availableDisbursementAmount
   * @param pastDueDays The new value for pastDueDays
   * @param nextPaymentDueDate The new value for nextPaymentDueDate
   * @param delinquentDays The new value for delinquentDays
   * @param delinquentDate The new value for delinquentDate
   * @param delinquentAmount The new value for delinquentAmount
   * @param lastPaymentDate The new value for lastPaymentDate
   * @param lastPaymentAmount The new value for lastPaymentAmount
   * @param lastRepaymentDate The new value for lastRepaymentDate
   * @param lastRepaymentAmount The new value for lastRepaymentAmount
   * @param delinquencyPausePeriods The new value for delinquencyPausePeriods
   * @param installmentDelinquencyBuckets The new value for installmentDelinquencyBuckets
   */
  public CollectionDataV1(java.math.BigDecimal availableDisbursementAmount, java.lang.Integer pastDueDays, java.lang.String nextPaymentDueDate, java.lang.Integer delinquentDays, java.lang.String delinquentDate, java.math.BigDecimal delinquentAmount, java.lang.String lastPaymentDate, java.math.BigDecimal lastPaymentAmount, java.lang.String lastRepaymentDate, java.math.BigDecimal lastRepaymentAmount, java.util.List<org.apache.fineract.avro.loan.v1.DelinquencyPausePeriodV1> delinquencyPausePeriods, java.util.List<org.apache.fineract.avro.loan.v1.LoanInstallmentDelinquencyBucketDataV1> installmentDelinquencyBuckets) {
    this.availableDisbursementAmount = availableDisbursementAmount;
    this.pastDueDays = pastDueDays;
    this.nextPaymentDueDate = nextPaymentDueDate;
    this.delinquentDays = delinquentDays;
    this.delinquentDate = delinquentDate;
    this.delinquentAmount = delinquentAmount;
    this.lastPaymentDate = lastPaymentDate;
    this.lastPaymentAmount = lastPaymentAmount;
    this.lastRepaymentDate = lastRepaymentDate;
    this.lastRepaymentAmount = lastRepaymentAmount;
    this.delinquencyPausePeriods = delinquencyPausePeriods;
    this.installmentDelinquencyBuckets = installmentDelinquencyBuckets;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return availableDisbursementAmount;
    case 1: return pastDueDays;
    case 2: return nextPaymentDueDate;
    case 3: return delinquentDays;
    case 4: return delinquentDate;
    case 5: return delinquentAmount;
    case 6: return lastPaymentDate;
    case 7: return lastPaymentAmount;
    case 8: return lastRepaymentDate;
    case 9: return lastRepaymentAmount;
    case 10: return delinquencyPausePeriods;
    case 11: return installmentDelinquencyBuckets;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: availableDisbursementAmount = (java.math.BigDecimal)value$; break;
    case 1: pastDueDays = (java.lang.Integer)value$; break;
    case 2: nextPaymentDueDate = value$ != null ? value$.toString() : null; break;
    case 3: delinquentDays = (java.lang.Integer)value$; break;
    case 4: delinquentDate = value$ != null ? value$.toString() : null; break;
    case 5: delinquentAmount = (java.math.BigDecimal)value$; break;
    case 6: lastPaymentDate = value$ != null ? value$.toString() : null; break;
    case 7: lastPaymentAmount = (java.math.BigDecimal)value$; break;
    case 8: lastRepaymentDate = value$ != null ? value$.toString() : null; break;
    case 9: lastRepaymentAmount = (java.math.BigDecimal)value$; break;
    case 10: delinquencyPausePeriods = (java.util.List<org.apache.fineract.avro.loan.v1.DelinquencyPausePeriodV1>)value$; break;
    case 11: installmentDelinquencyBuckets = (java.util.List<org.apache.fineract.avro.loan.v1.LoanInstallmentDelinquencyBucketDataV1>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'availableDisbursementAmount' field.
   * @return The value of the 'availableDisbursementAmount' field.
   */
  public java.math.BigDecimal getAvailableDisbursementAmount() {
    return availableDisbursementAmount;
  }


  /**
   * Sets the value of the 'availableDisbursementAmount' field.
   * @param value the value to set.
   */
  public void setAvailableDisbursementAmount(java.math.BigDecimal value) {
    this.availableDisbursementAmount = value;
  }

  /**
   * Gets the value of the 'pastDueDays' field.
   * @return The value of the 'pastDueDays' field.
   */
  public java.lang.Integer getPastDueDays() {
    return pastDueDays;
  }


  /**
   * Sets the value of the 'pastDueDays' field.
   * @param value the value to set.
   */
  public void setPastDueDays(java.lang.Integer value) {
    this.pastDueDays = value;
  }

  /**
   * Gets the value of the 'nextPaymentDueDate' field.
   * @return The value of the 'nextPaymentDueDate' field.
   */
  public java.lang.String getNextPaymentDueDate() {
    return nextPaymentDueDate;
  }


  /**
   * Sets the value of the 'nextPaymentDueDate' field.
   * @param value the value to set.
   */
  public void setNextPaymentDueDate(java.lang.String value) {
    this.nextPaymentDueDate = value;
  }

  /**
   * Gets the value of the 'delinquentDays' field.
   * @return The value of the 'delinquentDays' field.
   */
  public java.lang.Integer getDelinquentDays() {
    return delinquentDays;
  }


  /**
   * Sets the value of the 'delinquentDays' field.
   * @param value the value to set.
   */
  public void setDelinquentDays(java.lang.Integer value) {
    this.delinquentDays = value;
  }

  /**
   * Gets the value of the 'delinquentDate' field.
   * @return The value of the 'delinquentDate' field.
   */
  public java.lang.String getDelinquentDate() {
    return delinquentDate;
  }


  /**
   * Sets the value of the 'delinquentDate' field.
   * @param value the value to set.
   */
  public void setDelinquentDate(java.lang.String value) {
    this.delinquentDate = value;
  }

  /**
   * Gets the value of the 'delinquentAmount' field.
   * @return The value of the 'delinquentAmount' field.
   */
  public java.math.BigDecimal getDelinquentAmount() {
    return delinquentAmount;
  }


  /**
   * Sets the value of the 'delinquentAmount' field.
   * @param value the value to set.
   */
  public void setDelinquentAmount(java.math.BigDecimal value) {
    this.delinquentAmount = value;
  }

  /**
   * Gets the value of the 'lastPaymentDate' field.
   * @return The value of the 'lastPaymentDate' field.
   */
  public java.lang.String getLastPaymentDate() {
    return lastPaymentDate;
  }


  /**
   * Sets the value of the 'lastPaymentDate' field.
   * @param value the value to set.
   */
  public void setLastPaymentDate(java.lang.String value) {
    this.lastPaymentDate = value;
  }

  /**
   * Gets the value of the 'lastPaymentAmount' field.
   * @return The value of the 'lastPaymentAmount' field.
   */
  public java.math.BigDecimal getLastPaymentAmount() {
    return lastPaymentAmount;
  }


  /**
   * Sets the value of the 'lastPaymentAmount' field.
   * @param value the value to set.
   */
  public void setLastPaymentAmount(java.math.BigDecimal value) {
    this.lastPaymentAmount = value;
  }

  /**
   * Gets the value of the 'lastRepaymentDate' field.
   * @return The value of the 'lastRepaymentDate' field.
   */
  public java.lang.String getLastRepaymentDate() {
    return lastRepaymentDate;
  }


  /**
   * Sets the value of the 'lastRepaymentDate' field.
   * @param value the value to set.
   */
  public void setLastRepaymentDate(java.lang.String value) {
    this.lastRepaymentDate = value;
  }

  /**
   * Gets the value of the 'lastRepaymentAmount' field.
   * @return The value of the 'lastRepaymentAmount' field.
   */
  public java.math.BigDecimal getLastRepaymentAmount() {
    return lastRepaymentAmount;
  }


  /**
   * Sets the value of the 'lastRepaymentAmount' field.
   * @param value the value to set.
   */
  public void setLastRepaymentAmount(java.math.BigDecimal value) {
    this.lastRepaymentAmount = value;
  }

  /**
   * Gets the value of the 'delinquencyPausePeriods' field.
   * @return The value of the 'delinquencyPausePeriods' field.
   */
  public java.util.List<org.apache.fineract.avro.loan.v1.DelinquencyPausePeriodV1> getDelinquencyPausePeriods() {
    return delinquencyPausePeriods;
  }


  /**
   * Sets the value of the 'delinquencyPausePeriods' field.
   * @param value the value to set.
   */
  public void setDelinquencyPausePeriods(java.util.List<org.apache.fineract.avro.loan.v1.DelinquencyPausePeriodV1> value) {
    this.delinquencyPausePeriods = value;
  }

  /**
   * Gets the value of the 'installmentDelinquencyBuckets' field.
   * @return The value of the 'installmentDelinquencyBuckets' field.
   */
  public java.util.List<org.apache.fineract.avro.loan.v1.LoanInstallmentDelinquencyBucketDataV1> getInstallmentDelinquencyBuckets() {
    return installmentDelinquencyBuckets;
  }


  /**
   * Sets the value of the 'installmentDelinquencyBuckets' field.
   * @param value the value to set.
   */
  public void setInstallmentDelinquencyBuckets(java.util.List<org.apache.fineract.avro.loan.v1.LoanInstallmentDelinquencyBucketDataV1> value) {
    this.installmentDelinquencyBuckets = value;
  }

  /**
   * Creates a new CollectionDataV1 RecordBuilder.
   * @return A new CollectionDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder newBuilder() {
    return new org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder();
  }

  /**
   * Creates a new CollectionDataV1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CollectionDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder newBuilder(org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder other) {
    if (other == null) {
      return new org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder(other);
    }
  }

  /**
   * Creates a new CollectionDataV1 RecordBuilder by copying an existing CollectionDataV1 instance.
   * @param other The existing instance to copy.
   * @return A new CollectionDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder newBuilder(org.apache.fineract.avro.loan.v1.CollectionDataV1 other) {
    if (other == null) {
      return new org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder(other);
    }
  }

  /**
   * RecordBuilder for CollectionDataV1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CollectionDataV1>
    implements org.apache.avro.data.RecordBuilder<CollectionDataV1> {

    private java.math.BigDecimal availableDisbursementAmount;
    private java.lang.Integer pastDueDays;
    private java.lang.String nextPaymentDueDate;
    private java.lang.Integer delinquentDays;
    private java.lang.String delinquentDate;
    private java.math.BigDecimal delinquentAmount;
    private java.lang.String lastPaymentDate;
    private java.math.BigDecimal lastPaymentAmount;
    private java.lang.String lastRepaymentDate;
    private java.math.BigDecimal lastRepaymentAmount;
    private java.util.List<org.apache.fineract.avro.loan.v1.DelinquencyPausePeriodV1> delinquencyPausePeriods;
    private java.util.List<org.apache.fineract.avro.loan.v1.LoanInstallmentDelinquencyBucketDataV1> installmentDelinquencyBuckets;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.availableDisbursementAmount)) {
        this.availableDisbursementAmount = data().deepCopy(fields()[0].schema(), other.availableDisbursementAmount);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.pastDueDays)) {
        this.pastDueDays = data().deepCopy(fields()[1].schema(), other.pastDueDays);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.nextPaymentDueDate)) {
        this.nextPaymentDueDate = data().deepCopy(fields()[2].schema(), other.nextPaymentDueDate);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.delinquentDays)) {
        this.delinquentDays = data().deepCopy(fields()[3].schema(), other.delinquentDays);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.delinquentDate)) {
        this.delinquentDate = data().deepCopy(fields()[4].schema(), other.delinquentDate);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.delinquentAmount)) {
        this.delinquentAmount = data().deepCopy(fields()[5].schema(), other.delinquentAmount);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.lastPaymentDate)) {
        this.lastPaymentDate = data().deepCopy(fields()[6].schema(), other.lastPaymentDate);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.lastPaymentAmount)) {
        this.lastPaymentAmount = data().deepCopy(fields()[7].schema(), other.lastPaymentAmount);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.lastRepaymentDate)) {
        this.lastRepaymentDate = data().deepCopy(fields()[8].schema(), other.lastRepaymentDate);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.lastRepaymentAmount)) {
        this.lastRepaymentAmount = data().deepCopy(fields()[9].schema(), other.lastRepaymentAmount);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.delinquencyPausePeriods)) {
        this.delinquencyPausePeriods = data().deepCopy(fields()[10].schema(), other.delinquencyPausePeriods);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.installmentDelinquencyBuckets)) {
        this.installmentDelinquencyBuckets = data().deepCopy(fields()[11].schema(), other.installmentDelinquencyBuckets);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
    }

    /**
     * Creates a Builder by copying an existing CollectionDataV1 instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.fineract.avro.loan.v1.CollectionDataV1 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.availableDisbursementAmount)) {
        this.availableDisbursementAmount = data().deepCopy(fields()[0].schema(), other.availableDisbursementAmount);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.pastDueDays)) {
        this.pastDueDays = data().deepCopy(fields()[1].schema(), other.pastDueDays);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.nextPaymentDueDate)) {
        this.nextPaymentDueDate = data().deepCopy(fields()[2].schema(), other.nextPaymentDueDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.delinquentDays)) {
        this.delinquentDays = data().deepCopy(fields()[3].schema(), other.delinquentDays);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.delinquentDate)) {
        this.delinquentDate = data().deepCopy(fields()[4].schema(), other.delinquentDate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.delinquentAmount)) {
        this.delinquentAmount = data().deepCopy(fields()[5].schema(), other.delinquentAmount);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.lastPaymentDate)) {
        this.lastPaymentDate = data().deepCopy(fields()[6].schema(), other.lastPaymentDate);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.lastPaymentAmount)) {
        this.lastPaymentAmount = data().deepCopy(fields()[7].schema(), other.lastPaymentAmount);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.lastRepaymentDate)) {
        this.lastRepaymentDate = data().deepCopy(fields()[8].schema(), other.lastRepaymentDate);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.lastRepaymentAmount)) {
        this.lastRepaymentAmount = data().deepCopy(fields()[9].schema(), other.lastRepaymentAmount);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.delinquencyPausePeriods)) {
        this.delinquencyPausePeriods = data().deepCopy(fields()[10].schema(), other.delinquencyPausePeriods);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.installmentDelinquencyBuckets)) {
        this.installmentDelinquencyBuckets = data().deepCopy(fields()[11].schema(), other.installmentDelinquencyBuckets);
        fieldSetFlags()[11] = true;
      }
    }

    /**
      * Gets the value of the 'availableDisbursementAmount' field.
      * @return The value.
      */
    public java.math.BigDecimal getAvailableDisbursementAmount() {
      return availableDisbursementAmount;
    }


    /**
      * Sets the value of the 'availableDisbursementAmount' field.
      * @param value The value of 'availableDisbursementAmount'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder setAvailableDisbursementAmount(java.math.BigDecimal value) {
      validate(fields()[0], value);
      this.availableDisbursementAmount = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'availableDisbursementAmount' field has been set.
      * @return True if the 'availableDisbursementAmount' field has been set, false otherwise.
      */
    public boolean hasAvailableDisbursementAmount() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'availableDisbursementAmount' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder clearAvailableDisbursementAmount() {
      availableDisbursementAmount = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'pastDueDays' field.
      * @return The value.
      */
    public java.lang.Integer getPastDueDays() {
      return pastDueDays;
    }


    /**
      * Sets the value of the 'pastDueDays' field.
      * @param value The value of 'pastDueDays'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder setPastDueDays(java.lang.Integer value) {
      validate(fields()[1], value);
      this.pastDueDays = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'pastDueDays' field has been set.
      * @return True if the 'pastDueDays' field has been set, false otherwise.
      */
    public boolean hasPastDueDays() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'pastDueDays' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder clearPastDueDays() {
      pastDueDays = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'nextPaymentDueDate' field.
      * @return The value.
      */
    public java.lang.String getNextPaymentDueDate() {
      return nextPaymentDueDate;
    }


    /**
      * Sets the value of the 'nextPaymentDueDate' field.
      * @param value The value of 'nextPaymentDueDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder setNextPaymentDueDate(java.lang.String value) {
      validate(fields()[2], value);
      this.nextPaymentDueDate = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'nextPaymentDueDate' field has been set.
      * @return True if the 'nextPaymentDueDate' field has been set, false otherwise.
      */
    public boolean hasNextPaymentDueDate() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'nextPaymentDueDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder clearNextPaymentDueDate() {
      nextPaymentDueDate = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'delinquentDays' field.
      * @return The value.
      */
    public java.lang.Integer getDelinquentDays() {
      return delinquentDays;
    }


    /**
      * Sets the value of the 'delinquentDays' field.
      * @param value The value of 'delinquentDays'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder setDelinquentDays(java.lang.Integer value) {
      validate(fields()[3], value);
      this.delinquentDays = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'delinquentDays' field has been set.
      * @return True if the 'delinquentDays' field has been set, false otherwise.
      */
    public boolean hasDelinquentDays() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'delinquentDays' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder clearDelinquentDays() {
      delinquentDays = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'delinquentDate' field.
      * @return The value.
      */
    public java.lang.String getDelinquentDate() {
      return delinquentDate;
    }


    /**
      * Sets the value of the 'delinquentDate' field.
      * @param value The value of 'delinquentDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder setDelinquentDate(java.lang.String value) {
      validate(fields()[4], value);
      this.delinquentDate = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'delinquentDate' field has been set.
      * @return True if the 'delinquentDate' field has been set, false otherwise.
      */
    public boolean hasDelinquentDate() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'delinquentDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder clearDelinquentDate() {
      delinquentDate = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'delinquentAmount' field.
      * @return The value.
      */
    public java.math.BigDecimal getDelinquentAmount() {
      return delinquentAmount;
    }


    /**
      * Sets the value of the 'delinquentAmount' field.
      * @param value The value of 'delinquentAmount'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder setDelinquentAmount(java.math.BigDecimal value) {
      validate(fields()[5], value);
      this.delinquentAmount = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'delinquentAmount' field has been set.
      * @return True if the 'delinquentAmount' field has been set, false otherwise.
      */
    public boolean hasDelinquentAmount() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'delinquentAmount' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder clearDelinquentAmount() {
      delinquentAmount = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastPaymentDate' field.
      * @return The value.
      */
    public java.lang.String getLastPaymentDate() {
      return lastPaymentDate;
    }


    /**
      * Sets the value of the 'lastPaymentDate' field.
      * @param value The value of 'lastPaymentDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder setLastPaymentDate(java.lang.String value) {
      validate(fields()[6], value);
      this.lastPaymentDate = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'lastPaymentDate' field has been set.
      * @return True if the 'lastPaymentDate' field has been set, false otherwise.
      */
    public boolean hasLastPaymentDate() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'lastPaymentDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder clearLastPaymentDate() {
      lastPaymentDate = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastPaymentAmount' field.
      * @return The value.
      */
    public java.math.BigDecimal getLastPaymentAmount() {
      return lastPaymentAmount;
    }


    /**
      * Sets the value of the 'lastPaymentAmount' field.
      * @param value The value of 'lastPaymentAmount'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder setLastPaymentAmount(java.math.BigDecimal value) {
      validate(fields()[7], value);
      this.lastPaymentAmount = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'lastPaymentAmount' field has been set.
      * @return True if the 'lastPaymentAmount' field has been set, false otherwise.
      */
    public boolean hasLastPaymentAmount() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'lastPaymentAmount' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder clearLastPaymentAmount() {
      lastPaymentAmount = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastRepaymentDate' field.
      * @return The value.
      */
    public java.lang.String getLastRepaymentDate() {
      return lastRepaymentDate;
    }


    /**
      * Sets the value of the 'lastRepaymentDate' field.
      * @param value The value of 'lastRepaymentDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder setLastRepaymentDate(java.lang.String value) {
      validate(fields()[8], value);
      this.lastRepaymentDate = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'lastRepaymentDate' field has been set.
      * @return True if the 'lastRepaymentDate' field has been set, false otherwise.
      */
    public boolean hasLastRepaymentDate() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'lastRepaymentDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder clearLastRepaymentDate() {
      lastRepaymentDate = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastRepaymentAmount' field.
      * @return The value.
      */
    public java.math.BigDecimal getLastRepaymentAmount() {
      return lastRepaymentAmount;
    }


    /**
      * Sets the value of the 'lastRepaymentAmount' field.
      * @param value The value of 'lastRepaymentAmount'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder setLastRepaymentAmount(java.math.BigDecimal value) {
      validate(fields()[9], value);
      this.lastRepaymentAmount = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'lastRepaymentAmount' field has been set.
      * @return True if the 'lastRepaymentAmount' field has been set, false otherwise.
      */
    public boolean hasLastRepaymentAmount() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'lastRepaymentAmount' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder clearLastRepaymentAmount() {
      lastRepaymentAmount = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'delinquencyPausePeriods' field.
      * @return The value.
      */
    public java.util.List<org.apache.fineract.avro.loan.v1.DelinquencyPausePeriodV1> getDelinquencyPausePeriods() {
      return delinquencyPausePeriods;
    }


    /**
      * Sets the value of the 'delinquencyPausePeriods' field.
      * @param value The value of 'delinquencyPausePeriods'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder setDelinquencyPausePeriods(java.util.List<org.apache.fineract.avro.loan.v1.DelinquencyPausePeriodV1> value) {
      validate(fields()[10], value);
      this.delinquencyPausePeriods = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'delinquencyPausePeriods' field has been set.
      * @return True if the 'delinquencyPausePeriods' field has been set, false otherwise.
      */
    public boolean hasDelinquencyPausePeriods() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'delinquencyPausePeriods' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder clearDelinquencyPausePeriods() {
      delinquencyPausePeriods = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'installmentDelinquencyBuckets' field.
      * @return The value.
      */
    public java.util.List<org.apache.fineract.avro.loan.v1.LoanInstallmentDelinquencyBucketDataV1> getInstallmentDelinquencyBuckets() {
      return installmentDelinquencyBuckets;
    }


    /**
      * Sets the value of the 'installmentDelinquencyBuckets' field.
      * @param value The value of 'installmentDelinquencyBuckets'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder setInstallmentDelinquencyBuckets(java.util.List<org.apache.fineract.avro.loan.v1.LoanInstallmentDelinquencyBucketDataV1> value) {
      validate(fields()[11], value);
      this.installmentDelinquencyBuckets = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'installmentDelinquencyBuckets' field has been set.
      * @return True if the 'installmentDelinquencyBuckets' field has been set, false otherwise.
      */
    public boolean hasInstallmentDelinquencyBuckets() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'installmentDelinquencyBuckets' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.CollectionDataV1.Builder clearInstallmentDelinquencyBuckets() {
      installmentDelinquencyBuckets = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CollectionDataV1 build() {
      try {
        CollectionDataV1 record = new CollectionDataV1();
        record.availableDisbursementAmount = fieldSetFlags()[0] ? this.availableDisbursementAmount : (java.math.BigDecimal) defaultValue(fields()[0]);
        record.pastDueDays = fieldSetFlags()[1] ? this.pastDueDays : (java.lang.Integer) defaultValue(fields()[1]);
        record.nextPaymentDueDate = fieldSetFlags()[2] ? this.nextPaymentDueDate : (java.lang.String) defaultValue(fields()[2]);
        record.delinquentDays = fieldSetFlags()[3] ? this.delinquentDays : (java.lang.Integer) defaultValue(fields()[3]);
        record.delinquentDate = fieldSetFlags()[4] ? this.delinquentDate : (java.lang.String) defaultValue(fields()[4]);
        record.delinquentAmount = fieldSetFlags()[5] ? this.delinquentAmount : (java.math.BigDecimal) defaultValue(fields()[5]);
        record.lastPaymentDate = fieldSetFlags()[6] ? this.lastPaymentDate : (java.lang.String) defaultValue(fields()[6]);
        record.lastPaymentAmount = fieldSetFlags()[7] ? this.lastPaymentAmount : (java.math.BigDecimal) defaultValue(fields()[7]);
        record.lastRepaymentDate = fieldSetFlags()[8] ? this.lastRepaymentDate : (java.lang.String) defaultValue(fields()[8]);
        record.lastRepaymentAmount = fieldSetFlags()[9] ? this.lastRepaymentAmount : (java.math.BigDecimal) defaultValue(fields()[9]);
        record.delinquencyPausePeriods = fieldSetFlags()[10] ? this.delinquencyPausePeriods : (java.util.List<org.apache.fineract.avro.loan.v1.DelinquencyPausePeriodV1>) defaultValue(fields()[10]);
        record.installmentDelinquencyBuckets = fieldSetFlags()[11] ? this.installmentDelinquencyBuckets : (java.util.List<org.apache.fineract.avro.loan.v1.LoanInstallmentDelinquencyBucketDataV1>) defaultValue(fields()[11]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CollectionDataV1>
    WRITER$ = (org.apache.avro.io.DatumWriter<CollectionDataV1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CollectionDataV1>
    READER$ = (org.apache.avro.io.DatumReader<CollectionDataV1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










