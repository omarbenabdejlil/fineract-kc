/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

package org.apache.fineract.avro.savings.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class SavingsAccountSubStatusEnumDataV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, org.apache.fineract.avro.generator.ByteBufferSerializable {
  private static final long serialVersionUID = 2290084923766728048L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SavingsAccountSubStatusEnumDataV1\",\"namespace\":\"org.apache.fineract.avro.savings.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"none\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"inactive\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"dormant\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"escheat\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"block\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"blockCredit\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"blockDebit\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SavingsAccountSubStatusEnumDataV1> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SavingsAccountSubStatusEnumDataV1> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<SavingsAccountSubStatusEnumDataV1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<SavingsAccountSubStatusEnumDataV1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<SavingsAccountSubStatusEnumDataV1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this SavingsAccountSubStatusEnumDataV1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  @Override
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a SavingsAccountSubStatusEnumDataV1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a SavingsAccountSubStatusEnumDataV1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static SavingsAccountSubStatusEnumDataV1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.Integer id;
  private java.lang.String code;
  private java.lang.String value;
  private java.lang.Boolean none;
  private java.lang.Boolean inactive;
  private java.lang.Boolean dormant;
  private java.lang.Boolean escheat;
  private java.lang.Boolean block;
  private java.lang.Boolean blockCredit;
  private java.lang.Boolean blockDebit;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SavingsAccountSubStatusEnumDataV1() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param code The new value for code
   * @param value The new value for value
   * @param none The new value for none
   * @param inactive The new value for inactive
   * @param dormant The new value for dormant
   * @param escheat The new value for escheat
   * @param block The new value for block
   * @param blockCredit The new value for blockCredit
   * @param blockDebit The new value for blockDebit
   */
  public SavingsAccountSubStatusEnumDataV1(java.lang.Integer id, java.lang.String code, java.lang.String value, java.lang.Boolean none, java.lang.Boolean inactive, java.lang.Boolean dormant, java.lang.Boolean escheat, java.lang.Boolean block, java.lang.Boolean blockCredit, java.lang.Boolean blockDebit) {
    this.id = id;
    this.code = code;
    this.value = value;
    this.none = none;
    this.inactive = inactive;
    this.dormant = dormant;
    this.escheat = escheat;
    this.block = block;
    this.blockCredit = blockCredit;
    this.blockDebit = blockDebit;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return code;
    case 2: return value;
    case 3: return none;
    case 4: return inactive;
    case 5: return dormant;
    case 6: return escheat;
    case 7: return block;
    case 8: return blockCredit;
    case 9: return blockDebit;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Integer)value$; break;
    case 1: code = value$ != null ? value$.toString() : null; break;
    case 2: value = value$ != null ? value$.toString() : null; break;
    case 3: none = (java.lang.Boolean)value$; break;
    case 4: inactive = (java.lang.Boolean)value$; break;
    case 5: dormant = (java.lang.Boolean)value$; break;
    case 6: escheat = (java.lang.Boolean)value$; break;
    case 7: block = (java.lang.Boolean)value$; break;
    case 8: blockCredit = (java.lang.Boolean)value$; break;
    case 9: blockDebit = (java.lang.Boolean)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Integer getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Integer value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'code' field.
   * @return The value of the 'code' field.
   */
  public java.lang.String getCode() {
    return code;
  }


  /**
   * Sets the value of the 'code' field.
   * @param value the value to set.
   */
  public void setCode(java.lang.String value) {
    this.code = value;
  }

  /**
   * Gets the value of the 'value' field.
   * @return The value of the 'value' field.
   */
  public java.lang.String getValue() {
    return value;
  }


  /**
   * Sets the value of the 'value' field.
   * @param value the value to set.
   */
  public void setValue(java.lang.String value) {
    this.value = value;
  }

  /**
   * Gets the value of the 'none' field.
   * @return The value of the 'none' field.
   */
  public java.lang.Boolean getNone() {
    return none;
  }


  /**
   * Sets the value of the 'none' field.
   * @param value the value to set.
   */
  public void setNone(java.lang.Boolean value) {
    this.none = value;
  }

  /**
   * Gets the value of the 'inactive' field.
   * @return The value of the 'inactive' field.
   */
  public java.lang.Boolean getInactive() {
    return inactive;
  }


  /**
   * Sets the value of the 'inactive' field.
   * @param value the value to set.
   */
  public void setInactive(java.lang.Boolean value) {
    this.inactive = value;
  }

  /**
   * Gets the value of the 'dormant' field.
   * @return The value of the 'dormant' field.
   */
  public java.lang.Boolean getDormant() {
    return dormant;
  }


  /**
   * Sets the value of the 'dormant' field.
   * @param value the value to set.
   */
  public void setDormant(java.lang.Boolean value) {
    this.dormant = value;
  }

  /**
   * Gets the value of the 'escheat' field.
   * @return The value of the 'escheat' field.
   */
  public java.lang.Boolean getEscheat() {
    return escheat;
  }


  /**
   * Sets the value of the 'escheat' field.
   * @param value the value to set.
   */
  public void setEscheat(java.lang.Boolean value) {
    this.escheat = value;
  }

  /**
   * Gets the value of the 'block' field.
   * @return The value of the 'block' field.
   */
  public java.lang.Boolean getBlock() {
    return block;
  }


  /**
   * Sets the value of the 'block' field.
   * @param value the value to set.
   */
  public void setBlock(java.lang.Boolean value) {
    this.block = value;
  }

  /**
   * Gets the value of the 'blockCredit' field.
   * @return The value of the 'blockCredit' field.
   */
  public java.lang.Boolean getBlockCredit() {
    return blockCredit;
  }


  /**
   * Sets the value of the 'blockCredit' field.
   * @param value the value to set.
   */
  public void setBlockCredit(java.lang.Boolean value) {
    this.blockCredit = value;
  }

  /**
   * Gets the value of the 'blockDebit' field.
   * @return The value of the 'blockDebit' field.
   */
  public java.lang.Boolean getBlockDebit() {
    return blockDebit;
  }


  /**
   * Sets the value of the 'blockDebit' field.
   * @param value the value to set.
   */
  public void setBlockDebit(java.lang.Boolean value) {
    this.blockDebit = value;
  }

  /**
   * Creates a new SavingsAccountSubStatusEnumDataV1 RecordBuilder.
   * @return A new SavingsAccountSubStatusEnumDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder newBuilder() {
    return new org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder();
  }

  /**
   * Creates a new SavingsAccountSubStatusEnumDataV1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SavingsAccountSubStatusEnumDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder newBuilder(org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder other) {
    if (other == null) {
      return new org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder(other);
    }
  }

  /**
   * Creates a new SavingsAccountSubStatusEnumDataV1 RecordBuilder by copying an existing SavingsAccountSubStatusEnumDataV1 instance.
   * @param other The existing instance to copy.
   * @return A new SavingsAccountSubStatusEnumDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder newBuilder(org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1 other) {
    if (other == null) {
      return new org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder(other);
    }
  }

  /**
   * RecordBuilder for SavingsAccountSubStatusEnumDataV1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SavingsAccountSubStatusEnumDataV1>
    implements org.apache.avro.data.RecordBuilder<SavingsAccountSubStatusEnumDataV1> {

    private java.lang.Integer id;
    private java.lang.String code;
    private java.lang.String value;
    private java.lang.Boolean none;
    private java.lang.Boolean inactive;
    private java.lang.Boolean dormant;
    private java.lang.Boolean escheat;
    private java.lang.Boolean block;
    private java.lang.Boolean blockCredit;
    private java.lang.Boolean blockDebit;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.code)) {
        this.code = data().deepCopy(fields()[1].schema(), other.code);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.value)) {
        this.value = data().deepCopy(fields()[2].schema(), other.value);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.none)) {
        this.none = data().deepCopy(fields()[3].schema(), other.none);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.inactive)) {
        this.inactive = data().deepCopy(fields()[4].schema(), other.inactive);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.dormant)) {
        this.dormant = data().deepCopy(fields()[5].schema(), other.dormant);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.escheat)) {
        this.escheat = data().deepCopy(fields()[6].schema(), other.escheat);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.block)) {
        this.block = data().deepCopy(fields()[7].schema(), other.block);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.blockCredit)) {
        this.blockCredit = data().deepCopy(fields()[8].schema(), other.blockCredit);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.blockDebit)) {
        this.blockDebit = data().deepCopy(fields()[9].schema(), other.blockDebit);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
    }

    /**
     * Creates a Builder by copying an existing SavingsAccountSubStatusEnumDataV1 instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.code)) {
        this.code = data().deepCopy(fields()[1].schema(), other.code);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.value)) {
        this.value = data().deepCopy(fields()[2].schema(), other.value);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.none)) {
        this.none = data().deepCopy(fields()[3].schema(), other.none);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.inactive)) {
        this.inactive = data().deepCopy(fields()[4].schema(), other.inactive);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.dormant)) {
        this.dormant = data().deepCopy(fields()[5].schema(), other.dormant);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.escheat)) {
        this.escheat = data().deepCopy(fields()[6].schema(), other.escheat);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.block)) {
        this.block = data().deepCopy(fields()[7].schema(), other.block);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.blockCredit)) {
        this.blockCredit = data().deepCopy(fields()[8].schema(), other.blockCredit);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.blockDebit)) {
        this.blockDebit = data().deepCopy(fields()[9].schema(), other.blockDebit);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Integer getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder setId(java.lang.Integer value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'code' field.
      * @return The value.
      */
    public java.lang.String getCode() {
      return code;
    }


    /**
      * Sets the value of the 'code' field.
      * @param value The value of 'code'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder setCode(java.lang.String value) {
      validate(fields()[1], value);
      this.code = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'code' field has been set.
      * @return True if the 'code' field has been set, false otherwise.
      */
    public boolean hasCode() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'code' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder clearCode() {
      code = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'value' field.
      * @return The value.
      */
    public java.lang.String getValue() {
      return value;
    }


    /**
      * Sets the value of the 'value' field.
      * @param value The value of 'value'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder setValue(java.lang.String value) {
      validate(fields()[2], value);
      this.value = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'value' field has been set.
      * @return True if the 'value' field has been set, false otherwise.
      */
    public boolean hasValue() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'value' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder clearValue() {
      value = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'none' field.
      * @return The value.
      */
    public java.lang.Boolean getNone() {
      return none;
    }


    /**
      * Sets the value of the 'none' field.
      * @param value The value of 'none'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder setNone(java.lang.Boolean value) {
      validate(fields()[3], value);
      this.none = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'none' field has been set.
      * @return True if the 'none' field has been set, false otherwise.
      */
    public boolean hasNone() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'none' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder clearNone() {
      none = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'inactive' field.
      * @return The value.
      */
    public java.lang.Boolean getInactive() {
      return inactive;
    }


    /**
      * Sets the value of the 'inactive' field.
      * @param value The value of 'inactive'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder setInactive(java.lang.Boolean value) {
      validate(fields()[4], value);
      this.inactive = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'inactive' field has been set.
      * @return True if the 'inactive' field has been set, false otherwise.
      */
    public boolean hasInactive() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'inactive' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder clearInactive() {
      inactive = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'dormant' field.
      * @return The value.
      */
    public java.lang.Boolean getDormant() {
      return dormant;
    }


    /**
      * Sets the value of the 'dormant' field.
      * @param value The value of 'dormant'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder setDormant(java.lang.Boolean value) {
      validate(fields()[5], value);
      this.dormant = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'dormant' field has been set.
      * @return True if the 'dormant' field has been set, false otherwise.
      */
    public boolean hasDormant() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'dormant' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder clearDormant() {
      dormant = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'escheat' field.
      * @return The value.
      */
    public java.lang.Boolean getEscheat() {
      return escheat;
    }


    /**
      * Sets the value of the 'escheat' field.
      * @param value The value of 'escheat'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder setEscheat(java.lang.Boolean value) {
      validate(fields()[6], value);
      this.escheat = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'escheat' field has been set.
      * @return True if the 'escheat' field has been set, false otherwise.
      */
    public boolean hasEscheat() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'escheat' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder clearEscheat() {
      escheat = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'block' field.
      * @return The value.
      */
    public java.lang.Boolean getBlock() {
      return block;
    }


    /**
      * Sets the value of the 'block' field.
      * @param value The value of 'block'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder setBlock(java.lang.Boolean value) {
      validate(fields()[7], value);
      this.block = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'block' field has been set.
      * @return True if the 'block' field has been set, false otherwise.
      */
    public boolean hasBlock() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'block' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder clearBlock() {
      block = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'blockCredit' field.
      * @return The value.
      */
    public java.lang.Boolean getBlockCredit() {
      return blockCredit;
    }


    /**
      * Sets the value of the 'blockCredit' field.
      * @param value The value of 'blockCredit'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder setBlockCredit(java.lang.Boolean value) {
      validate(fields()[8], value);
      this.blockCredit = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'blockCredit' field has been set.
      * @return True if the 'blockCredit' field has been set, false otherwise.
      */
    public boolean hasBlockCredit() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'blockCredit' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder clearBlockCredit() {
      blockCredit = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'blockDebit' field.
      * @return The value.
      */
    public java.lang.Boolean getBlockDebit() {
      return blockDebit;
    }


    /**
      * Sets the value of the 'blockDebit' field.
      * @param value The value of 'blockDebit'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder setBlockDebit(java.lang.Boolean value) {
      validate(fields()[9], value);
      this.blockDebit = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'blockDebit' field has been set.
      * @return True if the 'blockDebit' field has been set, false otherwise.
      */
    public boolean hasBlockDebit() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'blockDebit' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountSubStatusEnumDataV1.Builder clearBlockDebit() {
      blockDebit = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SavingsAccountSubStatusEnumDataV1 build() {
      try {
        SavingsAccountSubStatusEnumDataV1 record = new SavingsAccountSubStatusEnumDataV1();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Integer) defaultValue(fields()[0]);
        record.code = fieldSetFlags()[1] ? this.code : (java.lang.String) defaultValue(fields()[1]);
        record.value = fieldSetFlags()[2] ? this.value : (java.lang.String) defaultValue(fields()[2]);
        record.none = fieldSetFlags()[3] ? this.none : (java.lang.Boolean) defaultValue(fields()[3]);
        record.inactive = fieldSetFlags()[4] ? this.inactive : (java.lang.Boolean) defaultValue(fields()[4]);
        record.dormant = fieldSetFlags()[5] ? this.dormant : (java.lang.Boolean) defaultValue(fields()[5]);
        record.escheat = fieldSetFlags()[6] ? this.escheat : (java.lang.Boolean) defaultValue(fields()[6]);
        record.block = fieldSetFlags()[7] ? this.block : (java.lang.Boolean) defaultValue(fields()[7]);
        record.blockCredit = fieldSetFlags()[8] ? this.blockCredit : (java.lang.Boolean) defaultValue(fields()[8]);
        record.blockDebit = fieldSetFlags()[9] ? this.blockDebit : (java.lang.Boolean) defaultValue(fields()[9]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SavingsAccountSubStatusEnumDataV1>
    WRITER$ = (org.apache.avro.io.DatumWriter<SavingsAccountSubStatusEnumDataV1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SavingsAccountSubStatusEnumDataV1>
    READER$ = (org.apache.avro.io.DatumReader<SavingsAccountSubStatusEnumDataV1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.id);
    }

    if (this.code == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.code);
    }

    if (this.value == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.value);
    }

    if (this.none == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.none);
    }

    if (this.inactive == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.inactive);
    }

    if (this.dormant == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.dormant);
    }

    if (this.escheat == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.escheat);
    }

    if (this.block == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.block);
    }

    if (this.blockCredit == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.blockCredit);
    }

    if (this.blockDebit == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.blockDebit);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.id = null;
      } else {
        this.id = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.code = null;
      } else {
        this.code = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.value = null;
      } else {
        this.value = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.none = null;
      } else {
        this.none = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.inactive = null;
      } else {
        this.inactive = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.dormant = null;
      } else {
        this.dormant = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.escheat = null;
      } else {
        this.escheat = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.block = null;
      } else {
        this.block = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.blockCredit = null;
      } else {
        this.blockCredit = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.blockDebit = null;
      } else {
        this.blockDebit = in.readBoolean();
      }

    } else {
      for (int i = 0; i < 10; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.id = null;
          } else {
            this.id = in.readInt();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.code = null;
          } else {
            this.code = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.value = null;
          } else {
            this.value = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.none = null;
          } else {
            this.none = in.readBoolean();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.inactive = null;
          } else {
            this.inactive = in.readBoolean();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.dormant = null;
          } else {
            this.dormant = in.readBoolean();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.escheat = null;
          } else {
            this.escheat = in.readBoolean();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.block = null;
          } else {
            this.block = in.readBoolean();
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.blockCredit = null;
          } else {
            this.blockCredit = in.readBoolean();
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.blockDebit = null;
          } else {
            this.blockDebit = in.readBoolean();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










