/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

package org.apache.fineract.avro.loan.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class LoanStatusEnumDataV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, org.apache.fineract.avro.generator.ByteBufferSerializable {
  private static final long serialVersionUID = 5687912831453687524L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LoanStatusEnumDataV1\",\"namespace\":\"org.apache.fineract.avro.loan.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"pendingApproval\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"waitingForDisbursal\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"active\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"closedObligationsMet\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"closedWrittenOff\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"closedRescheduled\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"closed\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"overpaid\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<LoanStatusEnumDataV1> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<LoanStatusEnumDataV1> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<LoanStatusEnumDataV1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<LoanStatusEnumDataV1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<LoanStatusEnumDataV1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this LoanStatusEnumDataV1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  @Override
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a LoanStatusEnumDataV1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a LoanStatusEnumDataV1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static LoanStatusEnumDataV1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.Integer id;
  private java.lang.String code;
  private java.lang.String value;
  private java.lang.Boolean pendingApproval;
  private java.lang.Boolean waitingForDisbursal;
  private java.lang.Boolean active;
  private java.lang.Boolean closedObligationsMet;
  private java.lang.Boolean closedWrittenOff;
  private java.lang.Boolean closedRescheduled;
  private java.lang.Boolean closed;
  private java.lang.Boolean overpaid;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LoanStatusEnumDataV1() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param code The new value for code
   * @param value The new value for value
   * @param pendingApproval The new value for pendingApproval
   * @param waitingForDisbursal The new value for waitingForDisbursal
   * @param active The new value for active
   * @param closedObligationsMet The new value for closedObligationsMet
   * @param closedWrittenOff The new value for closedWrittenOff
   * @param closedRescheduled The new value for closedRescheduled
   * @param closed The new value for closed
   * @param overpaid The new value for overpaid
   */
  public LoanStatusEnumDataV1(java.lang.Integer id, java.lang.String code, java.lang.String value, java.lang.Boolean pendingApproval, java.lang.Boolean waitingForDisbursal, java.lang.Boolean active, java.lang.Boolean closedObligationsMet, java.lang.Boolean closedWrittenOff, java.lang.Boolean closedRescheduled, java.lang.Boolean closed, java.lang.Boolean overpaid) {
    this.id = id;
    this.code = code;
    this.value = value;
    this.pendingApproval = pendingApproval;
    this.waitingForDisbursal = waitingForDisbursal;
    this.active = active;
    this.closedObligationsMet = closedObligationsMet;
    this.closedWrittenOff = closedWrittenOff;
    this.closedRescheduled = closedRescheduled;
    this.closed = closed;
    this.overpaid = overpaid;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return code;
    case 2: return value;
    case 3: return pendingApproval;
    case 4: return waitingForDisbursal;
    case 5: return active;
    case 6: return closedObligationsMet;
    case 7: return closedWrittenOff;
    case 8: return closedRescheduled;
    case 9: return closed;
    case 10: return overpaid;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Integer)value$; break;
    case 1: code = value$ != null ? value$.toString() : null; break;
    case 2: value = value$ != null ? value$.toString() : null; break;
    case 3: pendingApproval = (java.lang.Boolean)value$; break;
    case 4: waitingForDisbursal = (java.lang.Boolean)value$; break;
    case 5: active = (java.lang.Boolean)value$; break;
    case 6: closedObligationsMet = (java.lang.Boolean)value$; break;
    case 7: closedWrittenOff = (java.lang.Boolean)value$; break;
    case 8: closedRescheduled = (java.lang.Boolean)value$; break;
    case 9: closed = (java.lang.Boolean)value$; break;
    case 10: overpaid = (java.lang.Boolean)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Integer getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Integer value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'code' field.
   * @return The value of the 'code' field.
   */
  public java.lang.String getCode() {
    return code;
  }


  /**
   * Sets the value of the 'code' field.
   * @param value the value to set.
   */
  public void setCode(java.lang.String value) {
    this.code = value;
  }

  /**
   * Gets the value of the 'value' field.
   * @return The value of the 'value' field.
   */
  public java.lang.String getValue() {
    return value;
  }


  /**
   * Sets the value of the 'value' field.
   * @param value the value to set.
   */
  public void setValue(java.lang.String value) {
    this.value = value;
  }

  /**
   * Gets the value of the 'pendingApproval' field.
   * @return The value of the 'pendingApproval' field.
   */
  public java.lang.Boolean getPendingApproval() {
    return pendingApproval;
  }


  /**
   * Sets the value of the 'pendingApproval' field.
   * @param value the value to set.
   */
  public void setPendingApproval(java.lang.Boolean value) {
    this.pendingApproval = value;
  }

  /**
   * Gets the value of the 'waitingForDisbursal' field.
   * @return The value of the 'waitingForDisbursal' field.
   */
  public java.lang.Boolean getWaitingForDisbursal() {
    return waitingForDisbursal;
  }


  /**
   * Sets the value of the 'waitingForDisbursal' field.
   * @param value the value to set.
   */
  public void setWaitingForDisbursal(java.lang.Boolean value) {
    this.waitingForDisbursal = value;
  }

  /**
   * Gets the value of the 'active' field.
   * @return The value of the 'active' field.
   */
  public java.lang.Boolean getActive() {
    return active;
  }


  /**
   * Sets the value of the 'active' field.
   * @param value the value to set.
   */
  public void setActive(java.lang.Boolean value) {
    this.active = value;
  }

  /**
   * Gets the value of the 'closedObligationsMet' field.
   * @return The value of the 'closedObligationsMet' field.
   */
  public java.lang.Boolean getClosedObligationsMet() {
    return closedObligationsMet;
  }


  /**
   * Sets the value of the 'closedObligationsMet' field.
   * @param value the value to set.
   */
  public void setClosedObligationsMet(java.lang.Boolean value) {
    this.closedObligationsMet = value;
  }

  /**
   * Gets the value of the 'closedWrittenOff' field.
   * @return The value of the 'closedWrittenOff' field.
   */
  public java.lang.Boolean getClosedWrittenOff() {
    return closedWrittenOff;
  }


  /**
   * Sets the value of the 'closedWrittenOff' field.
   * @param value the value to set.
   */
  public void setClosedWrittenOff(java.lang.Boolean value) {
    this.closedWrittenOff = value;
  }

  /**
   * Gets the value of the 'closedRescheduled' field.
   * @return The value of the 'closedRescheduled' field.
   */
  public java.lang.Boolean getClosedRescheduled() {
    return closedRescheduled;
  }


  /**
   * Sets the value of the 'closedRescheduled' field.
   * @param value the value to set.
   */
  public void setClosedRescheduled(java.lang.Boolean value) {
    this.closedRescheduled = value;
  }

  /**
   * Gets the value of the 'closed' field.
   * @return The value of the 'closed' field.
   */
  public java.lang.Boolean getClosed() {
    return closed;
  }


  /**
   * Sets the value of the 'closed' field.
   * @param value the value to set.
   */
  public void setClosed(java.lang.Boolean value) {
    this.closed = value;
  }

  /**
   * Gets the value of the 'overpaid' field.
   * @return The value of the 'overpaid' field.
   */
  public java.lang.Boolean getOverpaid() {
    return overpaid;
  }


  /**
   * Sets the value of the 'overpaid' field.
   * @param value the value to set.
   */
  public void setOverpaid(java.lang.Boolean value) {
    this.overpaid = value;
  }

  /**
   * Creates a new LoanStatusEnumDataV1 RecordBuilder.
   * @return A new LoanStatusEnumDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder newBuilder() {
    return new org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder();
  }

  /**
   * Creates a new LoanStatusEnumDataV1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LoanStatusEnumDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder newBuilder(org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder other) {
    if (other == null) {
      return new org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder(other);
    }
  }

  /**
   * Creates a new LoanStatusEnumDataV1 RecordBuilder by copying an existing LoanStatusEnumDataV1 instance.
   * @param other The existing instance to copy.
   * @return A new LoanStatusEnumDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder newBuilder(org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1 other) {
    if (other == null) {
      return new org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder(other);
    }
  }

  /**
   * RecordBuilder for LoanStatusEnumDataV1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LoanStatusEnumDataV1>
    implements org.apache.avro.data.RecordBuilder<LoanStatusEnumDataV1> {

    private java.lang.Integer id;
    private java.lang.String code;
    private java.lang.String value;
    private java.lang.Boolean pendingApproval;
    private java.lang.Boolean waitingForDisbursal;
    private java.lang.Boolean active;
    private java.lang.Boolean closedObligationsMet;
    private java.lang.Boolean closedWrittenOff;
    private java.lang.Boolean closedRescheduled;
    private java.lang.Boolean closed;
    private java.lang.Boolean overpaid;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.code)) {
        this.code = data().deepCopy(fields()[1].schema(), other.code);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.value)) {
        this.value = data().deepCopy(fields()[2].schema(), other.value);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.pendingApproval)) {
        this.pendingApproval = data().deepCopy(fields()[3].schema(), other.pendingApproval);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.waitingForDisbursal)) {
        this.waitingForDisbursal = data().deepCopy(fields()[4].schema(), other.waitingForDisbursal);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.active)) {
        this.active = data().deepCopy(fields()[5].schema(), other.active);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.closedObligationsMet)) {
        this.closedObligationsMet = data().deepCopy(fields()[6].schema(), other.closedObligationsMet);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.closedWrittenOff)) {
        this.closedWrittenOff = data().deepCopy(fields()[7].schema(), other.closedWrittenOff);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.closedRescheduled)) {
        this.closedRescheduled = data().deepCopy(fields()[8].schema(), other.closedRescheduled);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.closed)) {
        this.closed = data().deepCopy(fields()[9].schema(), other.closed);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.overpaid)) {
        this.overpaid = data().deepCopy(fields()[10].schema(), other.overpaid);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
    }

    /**
     * Creates a Builder by copying an existing LoanStatusEnumDataV1 instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.code)) {
        this.code = data().deepCopy(fields()[1].schema(), other.code);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.value)) {
        this.value = data().deepCopy(fields()[2].schema(), other.value);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.pendingApproval)) {
        this.pendingApproval = data().deepCopy(fields()[3].schema(), other.pendingApproval);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.waitingForDisbursal)) {
        this.waitingForDisbursal = data().deepCopy(fields()[4].schema(), other.waitingForDisbursal);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.active)) {
        this.active = data().deepCopy(fields()[5].schema(), other.active);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.closedObligationsMet)) {
        this.closedObligationsMet = data().deepCopy(fields()[6].schema(), other.closedObligationsMet);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.closedWrittenOff)) {
        this.closedWrittenOff = data().deepCopy(fields()[7].schema(), other.closedWrittenOff);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.closedRescheduled)) {
        this.closedRescheduled = data().deepCopy(fields()[8].schema(), other.closedRescheduled);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.closed)) {
        this.closed = data().deepCopy(fields()[9].schema(), other.closed);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.overpaid)) {
        this.overpaid = data().deepCopy(fields()[10].schema(), other.overpaid);
        fieldSetFlags()[10] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Integer getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder setId(java.lang.Integer value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'code' field.
      * @return The value.
      */
    public java.lang.String getCode() {
      return code;
    }


    /**
      * Sets the value of the 'code' field.
      * @param value The value of 'code'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder setCode(java.lang.String value) {
      validate(fields()[1], value);
      this.code = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'code' field has been set.
      * @return True if the 'code' field has been set, false otherwise.
      */
    public boolean hasCode() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'code' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder clearCode() {
      code = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'value' field.
      * @return The value.
      */
    public java.lang.String getValue() {
      return value;
    }


    /**
      * Sets the value of the 'value' field.
      * @param value The value of 'value'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder setValue(java.lang.String value) {
      validate(fields()[2], value);
      this.value = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'value' field has been set.
      * @return True if the 'value' field has been set, false otherwise.
      */
    public boolean hasValue() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'value' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder clearValue() {
      value = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'pendingApproval' field.
      * @return The value.
      */
    public java.lang.Boolean getPendingApproval() {
      return pendingApproval;
    }


    /**
      * Sets the value of the 'pendingApproval' field.
      * @param value The value of 'pendingApproval'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder setPendingApproval(java.lang.Boolean value) {
      validate(fields()[3], value);
      this.pendingApproval = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'pendingApproval' field has been set.
      * @return True if the 'pendingApproval' field has been set, false otherwise.
      */
    public boolean hasPendingApproval() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'pendingApproval' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder clearPendingApproval() {
      pendingApproval = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'waitingForDisbursal' field.
      * @return The value.
      */
    public java.lang.Boolean getWaitingForDisbursal() {
      return waitingForDisbursal;
    }


    /**
      * Sets the value of the 'waitingForDisbursal' field.
      * @param value The value of 'waitingForDisbursal'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder setWaitingForDisbursal(java.lang.Boolean value) {
      validate(fields()[4], value);
      this.waitingForDisbursal = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'waitingForDisbursal' field has been set.
      * @return True if the 'waitingForDisbursal' field has been set, false otherwise.
      */
    public boolean hasWaitingForDisbursal() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'waitingForDisbursal' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder clearWaitingForDisbursal() {
      waitingForDisbursal = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'active' field.
      * @return The value.
      */
    public java.lang.Boolean getActive() {
      return active;
    }


    /**
      * Sets the value of the 'active' field.
      * @param value The value of 'active'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder setActive(java.lang.Boolean value) {
      validate(fields()[5], value);
      this.active = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'active' field has been set.
      * @return True if the 'active' field has been set, false otherwise.
      */
    public boolean hasActive() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'active' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder clearActive() {
      active = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'closedObligationsMet' field.
      * @return The value.
      */
    public java.lang.Boolean getClosedObligationsMet() {
      return closedObligationsMet;
    }


    /**
      * Sets the value of the 'closedObligationsMet' field.
      * @param value The value of 'closedObligationsMet'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder setClosedObligationsMet(java.lang.Boolean value) {
      validate(fields()[6], value);
      this.closedObligationsMet = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'closedObligationsMet' field has been set.
      * @return True if the 'closedObligationsMet' field has been set, false otherwise.
      */
    public boolean hasClosedObligationsMet() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'closedObligationsMet' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder clearClosedObligationsMet() {
      closedObligationsMet = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'closedWrittenOff' field.
      * @return The value.
      */
    public java.lang.Boolean getClosedWrittenOff() {
      return closedWrittenOff;
    }


    /**
      * Sets the value of the 'closedWrittenOff' field.
      * @param value The value of 'closedWrittenOff'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder setClosedWrittenOff(java.lang.Boolean value) {
      validate(fields()[7], value);
      this.closedWrittenOff = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'closedWrittenOff' field has been set.
      * @return True if the 'closedWrittenOff' field has been set, false otherwise.
      */
    public boolean hasClosedWrittenOff() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'closedWrittenOff' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder clearClosedWrittenOff() {
      closedWrittenOff = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'closedRescheduled' field.
      * @return The value.
      */
    public java.lang.Boolean getClosedRescheduled() {
      return closedRescheduled;
    }


    /**
      * Sets the value of the 'closedRescheduled' field.
      * @param value The value of 'closedRescheduled'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder setClosedRescheduled(java.lang.Boolean value) {
      validate(fields()[8], value);
      this.closedRescheduled = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'closedRescheduled' field has been set.
      * @return True if the 'closedRescheduled' field has been set, false otherwise.
      */
    public boolean hasClosedRescheduled() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'closedRescheduled' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder clearClosedRescheduled() {
      closedRescheduled = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'closed' field.
      * @return The value.
      */
    public java.lang.Boolean getClosed() {
      return closed;
    }


    /**
      * Sets the value of the 'closed' field.
      * @param value The value of 'closed'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder setClosed(java.lang.Boolean value) {
      validate(fields()[9], value);
      this.closed = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'closed' field has been set.
      * @return True if the 'closed' field has been set, false otherwise.
      */
    public boolean hasClosed() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'closed' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder clearClosed() {
      closed = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'overpaid' field.
      * @return The value.
      */
    public java.lang.Boolean getOverpaid() {
      return overpaid;
    }


    /**
      * Sets the value of the 'overpaid' field.
      * @param value The value of 'overpaid'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder setOverpaid(java.lang.Boolean value) {
      validate(fields()[10], value);
      this.overpaid = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'overpaid' field has been set.
      * @return True if the 'overpaid' field has been set, false otherwise.
      */
    public boolean hasOverpaid() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'overpaid' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanStatusEnumDataV1.Builder clearOverpaid() {
      overpaid = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public LoanStatusEnumDataV1 build() {
      try {
        LoanStatusEnumDataV1 record = new LoanStatusEnumDataV1();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Integer) defaultValue(fields()[0]);
        record.code = fieldSetFlags()[1] ? this.code : (java.lang.String) defaultValue(fields()[1]);
        record.value = fieldSetFlags()[2] ? this.value : (java.lang.String) defaultValue(fields()[2]);
        record.pendingApproval = fieldSetFlags()[3] ? this.pendingApproval : (java.lang.Boolean) defaultValue(fields()[3]);
        record.waitingForDisbursal = fieldSetFlags()[4] ? this.waitingForDisbursal : (java.lang.Boolean) defaultValue(fields()[4]);
        record.active = fieldSetFlags()[5] ? this.active : (java.lang.Boolean) defaultValue(fields()[5]);
        record.closedObligationsMet = fieldSetFlags()[6] ? this.closedObligationsMet : (java.lang.Boolean) defaultValue(fields()[6]);
        record.closedWrittenOff = fieldSetFlags()[7] ? this.closedWrittenOff : (java.lang.Boolean) defaultValue(fields()[7]);
        record.closedRescheduled = fieldSetFlags()[8] ? this.closedRescheduled : (java.lang.Boolean) defaultValue(fields()[8]);
        record.closed = fieldSetFlags()[9] ? this.closed : (java.lang.Boolean) defaultValue(fields()[9]);
        record.overpaid = fieldSetFlags()[10] ? this.overpaid : (java.lang.Boolean) defaultValue(fields()[10]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<LoanStatusEnumDataV1>
    WRITER$ = (org.apache.avro.io.DatumWriter<LoanStatusEnumDataV1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<LoanStatusEnumDataV1>
    READER$ = (org.apache.avro.io.DatumReader<LoanStatusEnumDataV1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.id);
    }

    if (this.code == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.code);
    }

    if (this.value == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.value);
    }

    if (this.pendingApproval == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.pendingApproval);
    }

    if (this.waitingForDisbursal == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.waitingForDisbursal);
    }

    if (this.active == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.active);
    }

    if (this.closedObligationsMet == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.closedObligationsMet);
    }

    if (this.closedWrittenOff == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.closedWrittenOff);
    }

    if (this.closedRescheduled == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.closedRescheduled);
    }

    if (this.closed == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.closed);
    }

    if (this.overpaid == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.overpaid);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.id = null;
      } else {
        this.id = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.code = null;
      } else {
        this.code = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.value = null;
      } else {
        this.value = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.pendingApproval = null;
      } else {
        this.pendingApproval = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.waitingForDisbursal = null;
      } else {
        this.waitingForDisbursal = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.active = null;
      } else {
        this.active = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.closedObligationsMet = null;
      } else {
        this.closedObligationsMet = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.closedWrittenOff = null;
      } else {
        this.closedWrittenOff = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.closedRescheduled = null;
      } else {
        this.closedRescheduled = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.closed = null;
      } else {
        this.closed = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.overpaid = null;
      } else {
        this.overpaid = in.readBoolean();
      }

    } else {
      for (int i = 0; i < 11; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.id = null;
          } else {
            this.id = in.readInt();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.code = null;
          } else {
            this.code = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.value = null;
          } else {
            this.value = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.pendingApproval = null;
          } else {
            this.pendingApproval = in.readBoolean();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.waitingForDisbursal = null;
          } else {
            this.waitingForDisbursal = in.readBoolean();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.active = null;
          } else {
            this.active = in.readBoolean();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.closedObligationsMet = null;
          } else {
            this.closedObligationsMet = in.readBoolean();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.closedWrittenOff = null;
          } else {
            this.closedWrittenOff = in.readBoolean();
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.closedRescheduled = null;
          } else {
            this.closedRescheduled = in.readBoolean();
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.closed = null;
          } else {
            this.closed = in.readBoolean();
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.overpaid = null;
          } else {
            this.overpaid = in.readBoolean();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










