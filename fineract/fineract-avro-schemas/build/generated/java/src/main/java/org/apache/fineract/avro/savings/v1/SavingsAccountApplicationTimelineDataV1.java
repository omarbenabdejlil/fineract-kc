/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

package org.apache.fineract.avro.savings.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class SavingsAccountApplicationTimelineDataV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, org.apache.fineract.avro.generator.ByteBufferSerializable {
  private static final long serialVersionUID = -5305135960862100459L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SavingsAccountApplicationTimelineDataV1\",\"namespace\":\"org.apache.fineract.avro.savings.v1\",\"fields\":[{\"name\":\"submittedOnDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"submittedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"submittedByFirstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"submittedByLastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"rejectedOnDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"rejectedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"rejectedByFirstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"rejectedByLastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"withdrawnOnDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"withdrawnByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"withdrawnByFirstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"withdrawnByLastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"approvedOnDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"approvedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"approvedByFirstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"approvedByLastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activatedOnDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activatedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activatedByFirstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activatedByLastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closedOnDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closedByUsername\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closedByFirstname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closedByLastname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SavingsAccountApplicationTimelineDataV1> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SavingsAccountApplicationTimelineDataV1> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<SavingsAccountApplicationTimelineDataV1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<SavingsAccountApplicationTimelineDataV1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<SavingsAccountApplicationTimelineDataV1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this SavingsAccountApplicationTimelineDataV1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  @Override
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a SavingsAccountApplicationTimelineDataV1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a SavingsAccountApplicationTimelineDataV1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static SavingsAccountApplicationTimelineDataV1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String submittedOnDate;
  private java.lang.String submittedByUsername;
  private java.lang.String submittedByFirstname;
  private java.lang.String submittedByLastname;
  private java.lang.String rejectedOnDate;
  private java.lang.String rejectedByUsername;
  private java.lang.String rejectedByFirstname;
  private java.lang.String rejectedByLastname;
  private java.lang.String withdrawnOnDate;
  private java.lang.String withdrawnByUsername;
  private java.lang.String withdrawnByFirstname;
  private java.lang.String withdrawnByLastname;
  private java.lang.String approvedOnDate;
  private java.lang.String approvedByUsername;
  private java.lang.String approvedByFirstname;
  private java.lang.String approvedByLastname;
  private java.lang.String activatedOnDate;
  private java.lang.String activatedByUsername;
  private java.lang.String activatedByFirstname;
  private java.lang.String activatedByLastname;
  private java.lang.String closedOnDate;
  private java.lang.String closedByUsername;
  private java.lang.String closedByFirstname;
  private java.lang.String closedByLastname;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SavingsAccountApplicationTimelineDataV1() {}

  /**
   * All-args constructor.
   * @param submittedOnDate The new value for submittedOnDate
   * @param submittedByUsername The new value for submittedByUsername
   * @param submittedByFirstname The new value for submittedByFirstname
   * @param submittedByLastname The new value for submittedByLastname
   * @param rejectedOnDate The new value for rejectedOnDate
   * @param rejectedByUsername The new value for rejectedByUsername
   * @param rejectedByFirstname The new value for rejectedByFirstname
   * @param rejectedByLastname The new value for rejectedByLastname
   * @param withdrawnOnDate The new value for withdrawnOnDate
   * @param withdrawnByUsername The new value for withdrawnByUsername
   * @param withdrawnByFirstname The new value for withdrawnByFirstname
   * @param withdrawnByLastname The new value for withdrawnByLastname
   * @param approvedOnDate The new value for approvedOnDate
   * @param approvedByUsername The new value for approvedByUsername
   * @param approvedByFirstname The new value for approvedByFirstname
   * @param approvedByLastname The new value for approvedByLastname
   * @param activatedOnDate The new value for activatedOnDate
   * @param activatedByUsername The new value for activatedByUsername
   * @param activatedByFirstname The new value for activatedByFirstname
   * @param activatedByLastname The new value for activatedByLastname
   * @param closedOnDate The new value for closedOnDate
   * @param closedByUsername The new value for closedByUsername
   * @param closedByFirstname The new value for closedByFirstname
   * @param closedByLastname The new value for closedByLastname
   */
  public SavingsAccountApplicationTimelineDataV1(java.lang.String submittedOnDate, java.lang.String submittedByUsername, java.lang.String submittedByFirstname, java.lang.String submittedByLastname, java.lang.String rejectedOnDate, java.lang.String rejectedByUsername, java.lang.String rejectedByFirstname, java.lang.String rejectedByLastname, java.lang.String withdrawnOnDate, java.lang.String withdrawnByUsername, java.lang.String withdrawnByFirstname, java.lang.String withdrawnByLastname, java.lang.String approvedOnDate, java.lang.String approvedByUsername, java.lang.String approvedByFirstname, java.lang.String approvedByLastname, java.lang.String activatedOnDate, java.lang.String activatedByUsername, java.lang.String activatedByFirstname, java.lang.String activatedByLastname, java.lang.String closedOnDate, java.lang.String closedByUsername, java.lang.String closedByFirstname, java.lang.String closedByLastname) {
    this.submittedOnDate = submittedOnDate;
    this.submittedByUsername = submittedByUsername;
    this.submittedByFirstname = submittedByFirstname;
    this.submittedByLastname = submittedByLastname;
    this.rejectedOnDate = rejectedOnDate;
    this.rejectedByUsername = rejectedByUsername;
    this.rejectedByFirstname = rejectedByFirstname;
    this.rejectedByLastname = rejectedByLastname;
    this.withdrawnOnDate = withdrawnOnDate;
    this.withdrawnByUsername = withdrawnByUsername;
    this.withdrawnByFirstname = withdrawnByFirstname;
    this.withdrawnByLastname = withdrawnByLastname;
    this.approvedOnDate = approvedOnDate;
    this.approvedByUsername = approvedByUsername;
    this.approvedByFirstname = approvedByFirstname;
    this.approvedByLastname = approvedByLastname;
    this.activatedOnDate = activatedOnDate;
    this.activatedByUsername = activatedByUsername;
    this.activatedByFirstname = activatedByFirstname;
    this.activatedByLastname = activatedByLastname;
    this.closedOnDate = closedOnDate;
    this.closedByUsername = closedByUsername;
    this.closedByFirstname = closedByFirstname;
    this.closedByLastname = closedByLastname;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return submittedOnDate;
    case 1: return submittedByUsername;
    case 2: return submittedByFirstname;
    case 3: return submittedByLastname;
    case 4: return rejectedOnDate;
    case 5: return rejectedByUsername;
    case 6: return rejectedByFirstname;
    case 7: return rejectedByLastname;
    case 8: return withdrawnOnDate;
    case 9: return withdrawnByUsername;
    case 10: return withdrawnByFirstname;
    case 11: return withdrawnByLastname;
    case 12: return approvedOnDate;
    case 13: return approvedByUsername;
    case 14: return approvedByFirstname;
    case 15: return approvedByLastname;
    case 16: return activatedOnDate;
    case 17: return activatedByUsername;
    case 18: return activatedByFirstname;
    case 19: return activatedByLastname;
    case 20: return closedOnDate;
    case 21: return closedByUsername;
    case 22: return closedByFirstname;
    case 23: return closedByLastname;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: submittedOnDate = value$ != null ? value$.toString() : null; break;
    case 1: submittedByUsername = value$ != null ? value$.toString() : null; break;
    case 2: submittedByFirstname = value$ != null ? value$.toString() : null; break;
    case 3: submittedByLastname = value$ != null ? value$.toString() : null; break;
    case 4: rejectedOnDate = value$ != null ? value$.toString() : null; break;
    case 5: rejectedByUsername = value$ != null ? value$.toString() : null; break;
    case 6: rejectedByFirstname = value$ != null ? value$.toString() : null; break;
    case 7: rejectedByLastname = value$ != null ? value$.toString() : null; break;
    case 8: withdrawnOnDate = value$ != null ? value$.toString() : null; break;
    case 9: withdrawnByUsername = value$ != null ? value$.toString() : null; break;
    case 10: withdrawnByFirstname = value$ != null ? value$.toString() : null; break;
    case 11: withdrawnByLastname = value$ != null ? value$.toString() : null; break;
    case 12: approvedOnDate = value$ != null ? value$.toString() : null; break;
    case 13: approvedByUsername = value$ != null ? value$.toString() : null; break;
    case 14: approvedByFirstname = value$ != null ? value$.toString() : null; break;
    case 15: approvedByLastname = value$ != null ? value$.toString() : null; break;
    case 16: activatedOnDate = value$ != null ? value$.toString() : null; break;
    case 17: activatedByUsername = value$ != null ? value$.toString() : null; break;
    case 18: activatedByFirstname = value$ != null ? value$.toString() : null; break;
    case 19: activatedByLastname = value$ != null ? value$.toString() : null; break;
    case 20: closedOnDate = value$ != null ? value$.toString() : null; break;
    case 21: closedByUsername = value$ != null ? value$.toString() : null; break;
    case 22: closedByFirstname = value$ != null ? value$.toString() : null; break;
    case 23: closedByLastname = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'submittedOnDate' field.
   * @return The value of the 'submittedOnDate' field.
   */
  public java.lang.String getSubmittedOnDate() {
    return submittedOnDate;
  }


  /**
   * Sets the value of the 'submittedOnDate' field.
   * @param value the value to set.
   */
  public void setSubmittedOnDate(java.lang.String value) {
    this.submittedOnDate = value;
  }

  /**
   * Gets the value of the 'submittedByUsername' field.
   * @return The value of the 'submittedByUsername' field.
   */
  public java.lang.String getSubmittedByUsername() {
    return submittedByUsername;
  }


  /**
   * Sets the value of the 'submittedByUsername' field.
   * @param value the value to set.
   */
  public void setSubmittedByUsername(java.lang.String value) {
    this.submittedByUsername = value;
  }

  /**
   * Gets the value of the 'submittedByFirstname' field.
   * @return The value of the 'submittedByFirstname' field.
   */
  public java.lang.String getSubmittedByFirstname() {
    return submittedByFirstname;
  }


  /**
   * Sets the value of the 'submittedByFirstname' field.
   * @param value the value to set.
   */
  public void setSubmittedByFirstname(java.lang.String value) {
    this.submittedByFirstname = value;
  }

  /**
   * Gets the value of the 'submittedByLastname' field.
   * @return The value of the 'submittedByLastname' field.
   */
  public java.lang.String getSubmittedByLastname() {
    return submittedByLastname;
  }


  /**
   * Sets the value of the 'submittedByLastname' field.
   * @param value the value to set.
   */
  public void setSubmittedByLastname(java.lang.String value) {
    this.submittedByLastname = value;
  }

  /**
   * Gets the value of the 'rejectedOnDate' field.
   * @return The value of the 'rejectedOnDate' field.
   */
  public java.lang.String getRejectedOnDate() {
    return rejectedOnDate;
  }


  /**
   * Sets the value of the 'rejectedOnDate' field.
   * @param value the value to set.
   */
  public void setRejectedOnDate(java.lang.String value) {
    this.rejectedOnDate = value;
  }

  /**
   * Gets the value of the 'rejectedByUsername' field.
   * @return The value of the 'rejectedByUsername' field.
   */
  public java.lang.String getRejectedByUsername() {
    return rejectedByUsername;
  }


  /**
   * Sets the value of the 'rejectedByUsername' field.
   * @param value the value to set.
   */
  public void setRejectedByUsername(java.lang.String value) {
    this.rejectedByUsername = value;
  }

  /**
   * Gets the value of the 'rejectedByFirstname' field.
   * @return The value of the 'rejectedByFirstname' field.
   */
  public java.lang.String getRejectedByFirstname() {
    return rejectedByFirstname;
  }


  /**
   * Sets the value of the 'rejectedByFirstname' field.
   * @param value the value to set.
   */
  public void setRejectedByFirstname(java.lang.String value) {
    this.rejectedByFirstname = value;
  }

  /**
   * Gets the value of the 'rejectedByLastname' field.
   * @return The value of the 'rejectedByLastname' field.
   */
  public java.lang.String getRejectedByLastname() {
    return rejectedByLastname;
  }


  /**
   * Sets the value of the 'rejectedByLastname' field.
   * @param value the value to set.
   */
  public void setRejectedByLastname(java.lang.String value) {
    this.rejectedByLastname = value;
  }

  /**
   * Gets the value of the 'withdrawnOnDate' field.
   * @return The value of the 'withdrawnOnDate' field.
   */
  public java.lang.String getWithdrawnOnDate() {
    return withdrawnOnDate;
  }


  /**
   * Sets the value of the 'withdrawnOnDate' field.
   * @param value the value to set.
   */
  public void setWithdrawnOnDate(java.lang.String value) {
    this.withdrawnOnDate = value;
  }

  /**
   * Gets the value of the 'withdrawnByUsername' field.
   * @return The value of the 'withdrawnByUsername' field.
   */
  public java.lang.String getWithdrawnByUsername() {
    return withdrawnByUsername;
  }


  /**
   * Sets the value of the 'withdrawnByUsername' field.
   * @param value the value to set.
   */
  public void setWithdrawnByUsername(java.lang.String value) {
    this.withdrawnByUsername = value;
  }

  /**
   * Gets the value of the 'withdrawnByFirstname' field.
   * @return The value of the 'withdrawnByFirstname' field.
   */
  public java.lang.String getWithdrawnByFirstname() {
    return withdrawnByFirstname;
  }


  /**
   * Sets the value of the 'withdrawnByFirstname' field.
   * @param value the value to set.
   */
  public void setWithdrawnByFirstname(java.lang.String value) {
    this.withdrawnByFirstname = value;
  }

  /**
   * Gets the value of the 'withdrawnByLastname' field.
   * @return The value of the 'withdrawnByLastname' field.
   */
  public java.lang.String getWithdrawnByLastname() {
    return withdrawnByLastname;
  }


  /**
   * Sets the value of the 'withdrawnByLastname' field.
   * @param value the value to set.
   */
  public void setWithdrawnByLastname(java.lang.String value) {
    this.withdrawnByLastname = value;
  }

  /**
   * Gets the value of the 'approvedOnDate' field.
   * @return The value of the 'approvedOnDate' field.
   */
  public java.lang.String getApprovedOnDate() {
    return approvedOnDate;
  }


  /**
   * Sets the value of the 'approvedOnDate' field.
   * @param value the value to set.
   */
  public void setApprovedOnDate(java.lang.String value) {
    this.approvedOnDate = value;
  }

  /**
   * Gets the value of the 'approvedByUsername' field.
   * @return The value of the 'approvedByUsername' field.
   */
  public java.lang.String getApprovedByUsername() {
    return approvedByUsername;
  }


  /**
   * Sets the value of the 'approvedByUsername' field.
   * @param value the value to set.
   */
  public void setApprovedByUsername(java.lang.String value) {
    this.approvedByUsername = value;
  }

  /**
   * Gets the value of the 'approvedByFirstname' field.
   * @return The value of the 'approvedByFirstname' field.
   */
  public java.lang.String getApprovedByFirstname() {
    return approvedByFirstname;
  }


  /**
   * Sets the value of the 'approvedByFirstname' field.
   * @param value the value to set.
   */
  public void setApprovedByFirstname(java.lang.String value) {
    this.approvedByFirstname = value;
  }

  /**
   * Gets the value of the 'approvedByLastname' field.
   * @return The value of the 'approvedByLastname' field.
   */
  public java.lang.String getApprovedByLastname() {
    return approvedByLastname;
  }


  /**
   * Sets the value of the 'approvedByLastname' field.
   * @param value the value to set.
   */
  public void setApprovedByLastname(java.lang.String value) {
    this.approvedByLastname = value;
  }

  /**
   * Gets the value of the 'activatedOnDate' field.
   * @return The value of the 'activatedOnDate' field.
   */
  public java.lang.String getActivatedOnDate() {
    return activatedOnDate;
  }


  /**
   * Sets the value of the 'activatedOnDate' field.
   * @param value the value to set.
   */
  public void setActivatedOnDate(java.lang.String value) {
    this.activatedOnDate = value;
  }

  /**
   * Gets the value of the 'activatedByUsername' field.
   * @return The value of the 'activatedByUsername' field.
   */
  public java.lang.String getActivatedByUsername() {
    return activatedByUsername;
  }


  /**
   * Sets the value of the 'activatedByUsername' field.
   * @param value the value to set.
   */
  public void setActivatedByUsername(java.lang.String value) {
    this.activatedByUsername = value;
  }

  /**
   * Gets the value of the 'activatedByFirstname' field.
   * @return The value of the 'activatedByFirstname' field.
   */
  public java.lang.String getActivatedByFirstname() {
    return activatedByFirstname;
  }


  /**
   * Sets the value of the 'activatedByFirstname' field.
   * @param value the value to set.
   */
  public void setActivatedByFirstname(java.lang.String value) {
    this.activatedByFirstname = value;
  }

  /**
   * Gets the value of the 'activatedByLastname' field.
   * @return The value of the 'activatedByLastname' field.
   */
  public java.lang.String getActivatedByLastname() {
    return activatedByLastname;
  }


  /**
   * Sets the value of the 'activatedByLastname' field.
   * @param value the value to set.
   */
  public void setActivatedByLastname(java.lang.String value) {
    this.activatedByLastname = value;
  }

  /**
   * Gets the value of the 'closedOnDate' field.
   * @return The value of the 'closedOnDate' field.
   */
  public java.lang.String getClosedOnDate() {
    return closedOnDate;
  }


  /**
   * Sets the value of the 'closedOnDate' field.
   * @param value the value to set.
   */
  public void setClosedOnDate(java.lang.String value) {
    this.closedOnDate = value;
  }

  /**
   * Gets the value of the 'closedByUsername' field.
   * @return The value of the 'closedByUsername' field.
   */
  public java.lang.String getClosedByUsername() {
    return closedByUsername;
  }


  /**
   * Sets the value of the 'closedByUsername' field.
   * @param value the value to set.
   */
  public void setClosedByUsername(java.lang.String value) {
    this.closedByUsername = value;
  }

  /**
   * Gets the value of the 'closedByFirstname' field.
   * @return The value of the 'closedByFirstname' field.
   */
  public java.lang.String getClosedByFirstname() {
    return closedByFirstname;
  }


  /**
   * Sets the value of the 'closedByFirstname' field.
   * @param value the value to set.
   */
  public void setClosedByFirstname(java.lang.String value) {
    this.closedByFirstname = value;
  }

  /**
   * Gets the value of the 'closedByLastname' field.
   * @return The value of the 'closedByLastname' field.
   */
  public java.lang.String getClosedByLastname() {
    return closedByLastname;
  }


  /**
   * Sets the value of the 'closedByLastname' field.
   * @param value the value to set.
   */
  public void setClosedByLastname(java.lang.String value) {
    this.closedByLastname = value;
  }

  /**
   * Creates a new SavingsAccountApplicationTimelineDataV1 RecordBuilder.
   * @return A new SavingsAccountApplicationTimelineDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder newBuilder() {
    return new org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder();
  }

  /**
   * Creates a new SavingsAccountApplicationTimelineDataV1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SavingsAccountApplicationTimelineDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder newBuilder(org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder other) {
    if (other == null) {
      return new org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder(other);
    }
  }

  /**
   * Creates a new SavingsAccountApplicationTimelineDataV1 RecordBuilder by copying an existing SavingsAccountApplicationTimelineDataV1 instance.
   * @param other The existing instance to copy.
   * @return A new SavingsAccountApplicationTimelineDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder newBuilder(org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1 other) {
    if (other == null) {
      return new org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder(other);
    }
  }

  /**
   * RecordBuilder for SavingsAccountApplicationTimelineDataV1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SavingsAccountApplicationTimelineDataV1>
    implements org.apache.avro.data.RecordBuilder<SavingsAccountApplicationTimelineDataV1> {

    private java.lang.String submittedOnDate;
    private java.lang.String submittedByUsername;
    private java.lang.String submittedByFirstname;
    private java.lang.String submittedByLastname;
    private java.lang.String rejectedOnDate;
    private java.lang.String rejectedByUsername;
    private java.lang.String rejectedByFirstname;
    private java.lang.String rejectedByLastname;
    private java.lang.String withdrawnOnDate;
    private java.lang.String withdrawnByUsername;
    private java.lang.String withdrawnByFirstname;
    private java.lang.String withdrawnByLastname;
    private java.lang.String approvedOnDate;
    private java.lang.String approvedByUsername;
    private java.lang.String approvedByFirstname;
    private java.lang.String approvedByLastname;
    private java.lang.String activatedOnDate;
    private java.lang.String activatedByUsername;
    private java.lang.String activatedByFirstname;
    private java.lang.String activatedByLastname;
    private java.lang.String closedOnDate;
    private java.lang.String closedByUsername;
    private java.lang.String closedByFirstname;
    private java.lang.String closedByLastname;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.submittedOnDate)) {
        this.submittedOnDate = data().deepCopy(fields()[0].schema(), other.submittedOnDate);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.submittedByUsername)) {
        this.submittedByUsername = data().deepCopy(fields()[1].schema(), other.submittedByUsername);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.submittedByFirstname)) {
        this.submittedByFirstname = data().deepCopy(fields()[2].schema(), other.submittedByFirstname);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.submittedByLastname)) {
        this.submittedByLastname = data().deepCopy(fields()[3].schema(), other.submittedByLastname);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.rejectedOnDate)) {
        this.rejectedOnDate = data().deepCopy(fields()[4].schema(), other.rejectedOnDate);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.rejectedByUsername)) {
        this.rejectedByUsername = data().deepCopy(fields()[5].schema(), other.rejectedByUsername);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.rejectedByFirstname)) {
        this.rejectedByFirstname = data().deepCopy(fields()[6].schema(), other.rejectedByFirstname);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.rejectedByLastname)) {
        this.rejectedByLastname = data().deepCopy(fields()[7].schema(), other.rejectedByLastname);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.withdrawnOnDate)) {
        this.withdrawnOnDate = data().deepCopy(fields()[8].schema(), other.withdrawnOnDate);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.withdrawnByUsername)) {
        this.withdrawnByUsername = data().deepCopy(fields()[9].schema(), other.withdrawnByUsername);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.withdrawnByFirstname)) {
        this.withdrawnByFirstname = data().deepCopy(fields()[10].schema(), other.withdrawnByFirstname);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.withdrawnByLastname)) {
        this.withdrawnByLastname = data().deepCopy(fields()[11].schema(), other.withdrawnByLastname);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.approvedOnDate)) {
        this.approvedOnDate = data().deepCopy(fields()[12].schema(), other.approvedOnDate);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.approvedByUsername)) {
        this.approvedByUsername = data().deepCopy(fields()[13].schema(), other.approvedByUsername);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.approvedByFirstname)) {
        this.approvedByFirstname = data().deepCopy(fields()[14].schema(), other.approvedByFirstname);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.approvedByLastname)) {
        this.approvedByLastname = data().deepCopy(fields()[15].schema(), other.approvedByLastname);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.activatedOnDate)) {
        this.activatedOnDate = data().deepCopy(fields()[16].schema(), other.activatedOnDate);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.activatedByUsername)) {
        this.activatedByUsername = data().deepCopy(fields()[17].schema(), other.activatedByUsername);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.activatedByFirstname)) {
        this.activatedByFirstname = data().deepCopy(fields()[18].schema(), other.activatedByFirstname);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.activatedByLastname)) {
        this.activatedByLastname = data().deepCopy(fields()[19].schema(), other.activatedByLastname);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.closedOnDate)) {
        this.closedOnDate = data().deepCopy(fields()[20].schema(), other.closedOnDate);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.closedByUsername)) {
        this.closedByUsername = data().deepCopy(fields()[21].schema(), other.closedByUsername);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.closedByFirstname)) {
        this.closedByFirstname = data().deepCopy(fields()[22].schema(), other.closedByFirstname);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.closedByLastname)) {
        this.closedByLastname = data().deepCopy(fields()[23].schema(), other.closedByLastname);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
    }

    /**
     * Creates a Builder by copying an existing SavingsAccountApplicationTimelineDataV1 instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.submittedOnDate)) {
        this.submittedOnDate = data().deepCopy(fields()[0].schema(), other.submittedOnDate);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.submittedByUsername)) {
        this.submittedByUsername = data().deepCopy(fields()[1].schema(), other.submittedByUsername);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.submittedByFirstname)) {
        this.submittedByFirstname = data().deepCopy(fields()[2].schema(), other.submittedByFirstname);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.submittedByLastname)) {
        this.submittedByLastname = data().deepCopy(fields()[3].schema(), other.submittedByLastname);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.rejectedOnDate)) {
        this.rejectedOnDate = data().deepCopy(fields()[4].schema(), other.rejectedOnDate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.rejectedByUsername)) {
        this.rejectedByUsername = data().deepCopy(fields()[5].schema(), other.rejectedByUsername);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.rejectedByFirstname)) {
        this.rejectedByFirstname = data().deepCopy(fields()[6].schema(), other.rejectedByFirstname);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.rejectedByLastname)) {
        this.rejectedByLastname = data().deepCopy(fields()[7].schema(), other.rejectedByLastname);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.withdrawnOnDate)) {
        this.withdrawnOnDate = data().deepCopy(fields()[8].schema(), other.withdrawnOnDate);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.withdrawnByUsername)) {
        this.withdrawnByUsername = data().deepCopy(fields()[9].schema(), other.withdrawnByUsername);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.withdrawnByFirstname)) {
        this.withdrawnByFirstname = data().deepCopy(fields()[10].schema(), other.withdrawnByFirstname);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.withdrawnByLastname)) {
        this.withdrawnByLastname = data().deepCopy(fields()[11].schema(), other.withdrawnByLastname);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.approvedOnDate)) {
        this.approvedOnDate = data().deepCopy(fields()[12].schema(), other.approvedOnDate);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.approvedByUsername)) {
        this.approvedByUsername = data().deepCopy(fields()[13].schema(), other.approvedByUsername);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.approvedByFirstname)) {
        this.approvedByFirstname = data().deepCopy(fields()[14].schema(), other.approvedByFirstname);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.approvedByLastname)) {
        this.approvedByLastname = data().deepCopy(fields()[15].schema(), other.approvedByLastname);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.activatedOnDate)) {
        this.activatedOnDate = data().deepCopy(fields()[16].schema(), other.activatedOnDate);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.activatedByUsername)) {
        this.activatedByUsername = data().deepCopy(fields()[17].schema(), other.activatedByUsername);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.activatedByFirstname)) {
        this.activatedByFirstname = data().deepCopy(fields()[18].schema(), other.activatedByFirstname);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.activatedByLastname)) {
        this.activatedByLastname = data().deepCopy(fields()[19].schema(), other.activatedByLastname);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.closedOnDate)) {
        this.closedOnDate = data().deepCopy(fields()[20].schema(), other.closedOnDate);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.closedByUsername)) {
        this.closedByUsername = data().deepCopy(fields()[21].schema(), other.closedByUsername);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.closedByFirstname)) {
        this.closedByFirstname = data().deepCopy(fields()[22].schema(), other.closedByFirstname);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.closedByLastname)) {
        this.closedByLastname = data().deepCopy(fields()[23].schema(), other.closedByLastname);
        fieldSetFlags()[23] = true;
      }
    }

    /**
      * Gets the value of the 'submittedOnDate' field.
      * @return The value.
      */
    public java.lang.String getSubmittedOnDate() {
      return submittedOnDate;
    }


    /**
      * Sets the value of the 'submittedOnDate' field.
      * @param value The value of 'submittedOnDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder setSubmittedOnDate(java.lang.String value) {
      validate(fields()[0], value);
      this.submittedOnDate = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'submittedOnDate' field has been set.
      * @return True if the 'submittedOnDate' field has been set, false otherwise.
      */
    public boolean hasSubmittedOnDate() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'submittedOnDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder clearSubmittedOnDate() {
      submittedOnDate = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'submittedByUsername' field.
      * @return The value.
      */
    public java.lang.String getSubmittedByUsername() {
      return submittedByUsername;
    }


    /**
      * Sets the value of the 'submittedByUsername' field.
      * @param value The value of 'submittedByUsername'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder setSubmittedByUsername(java.lang.String value) {
      validate(fields()[1], value);
      this.submittedByUsername = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'submittedByUsername' field has been set.
      * @return True if the 'submittedByUsername' field has been set, false otherwise.
      */
    public boolean hasSubmittedByUsername() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'submittedByUsername' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder clearSubmittedByUsername() {
      submittedByUsername = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'submittedByFirstname' field.
      * @return The value.
      */
    public java.lang.String getSubmittedByFirstname() {
      return submittedByFirstname;
    }


    /**
      * Sets the value of the 'submittedByFirstname' field.
      * @param value The value of 'submittedByFirstname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder setSubmittedByFirstname(java.lang.String value) {
      validate(fields()[2], value);
      this.submittedByFirstname = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'submittedByFirstname' field has been set.
      * @return True if the 'submittedByFirstname' field has been set, false otherwise.
      */
    public boolean hasSubmittedByFirstname() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'submittedByFirstname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder clearSubmittedByFirstname() {
      submittedByFirstname = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'submittedByLastname' field.
      * @return The value.
      */
    public java.lang.String getSubmittedByLastname() {
      return submittedByLastname;
    }


    /**
      * Sets the value of the 'submittedByLastname' field.
      * @param value The value of 'submittedByLastname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder setSubmittedByLastname(java.lang.String value) {
      validate(fields()[3], value);
      this.submittedByLastname = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'submittedByLastname' field has been set.
      * @return True if the 'submittedByLastname' field has been set, false otherwise.
      */
    public boolean hasSubmittedByLastname() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'submittedByLastname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder clearSubmittedByLastname() {
      submittedByLastname = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'rejectedOnDate' field.
      * @return The value.
      */
    public java.lang.String getRejectedOnDate() {
      return rejectedOnDate;
    }


    /**
      * Sets the value of the 'rejectedOnDate' field.
      * @param value The value of 'rejectedOnDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder setRejectedOnDate(java.lang.String value) {
      validate(fields()[4], value);
      this.rejectedOnDate = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'rejectedOnDate' field has been set.
      * @return True if the 'rejectedOnDate' field has been set, false otherwise.
      */
    public boolean hasRejectedOnDate() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'rejectedOnDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder clearRejectedOnDate() {
      rejectedOnDate = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'rejectedByUsername' field.
      * @return The value.
      */
    public java.lang.String getRejectedByUsername() {
      return rejectedByUsername;
    }


    /**
      * Sets the value of the 'rejectedByUsername' field.
      * @param value The value of 'rejectedByUsername'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder setRejectedByUsername(java.lang.String value) {
      validate(fields()[5], value);
      this.rejectedByUsername = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'rejectedByUsername' field has been set.
      * @return True if the 'rejectedByUsername' field has been set, false otherwise.
      */
    public boolean hasRejectedByUsername() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'rejectedByUsername' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder clearRejectedByUsername() {
      rejectedByUsername = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'rejectedByFirstname' field.
      * @return The value.
      */
    public java.lang.String getRejectedByFirstname() {
      return rejectedByFirstname;
    }


    /**
      * Sets the value of the 'rejectedByFirstname' field.
      * @param value The value of 'rejectedByFirstname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder setRejectedByFirstname(java.lang.String value) {
      validate(fields()[6], value);
      this.rejectedByFirstname = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'rejectedByFirstname' field has been set.
      * @return True if the 'rejectedByFirstname' field has been set, false otherwise.
      */
    public boolean hasRejectedByFirstname() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'rejectedByFirstname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder clearRejectedByFirstname() {
      rejectedByFirstname = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'rejectedByLastname' field.
      * @return The value.
      */
    public java.lang.String getRejectedByLastname() {
      return rejectedByLastname;
    }


    /**
      * Sets the value of the 'rejectedByLastname' field.
      * @param value The value of 'rejectedByLastname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder setRejectedByLastname(java.lang.String value) {
      validate(fields()[7], value);
      this.rejectedByLastname = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'rejectedByLastname' field has been set.
      * @return True if the 'rejectedByLastname' field has been set, false otherwise.
      */
    public boolean hasRejectedByLastname() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'rejectedByLastname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder clearRejectedByLastname() {
      rejectedByLastname = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'withdrawnOnDate' field.
      * @return The value.
      */
    public java.lang.String getWithdrawnOnDate() {
      return withdrawnOnDate;
    }


    /**
      * Sets the value of the 'withdrawnOnDate' field.
      * @param value The value of 'withdrawnOnDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder setWithdrawnOnDate(java.lang.String value) {
      validate(fields()[8], value);
      this.withdrawnOnDate = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'withdrawnOnDate' field has been set.
      * @return True if the 'withdrawnOnDate' field has been set, false otherwise.
      */
    public boolean hasWithdrawnOnDate() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'withdrawnOnDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder clearWithdrawnOnDate() {
      withdrawnOnDate = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'withdrawnByUsername' field.
      * @return The value.
      */
    public java.lang.String getWithdrawnByUsername() {
      return withdrawnByUsername;
    }


    /**
      * Sets the value of the 'withdrawnByUsername' field.
      * @param value The value of 'withdrawnByUsername'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder setWithdrawnByUsername(java.lang.String value) {
      validate(fields()[9], value);
      this.withdrawnByUsername = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'withdrawnByUsername' field has been set.
      * @return True if the 'withdrawnByUsername' field has been set, false otherwise.
      */
    public boolean hasWithdrawnByUsername() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'withdrawnByUsername' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder clearWithdrawnByUsername() {
      withdrawnByUsername = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'withdrawnByFirstname' field.
      * @return The value.
      */
    public java.lang.String getWithdrawnByFirstname() {
      return withdrawnByFirstname;
    }


    /**
      * Sets the value of the 'withdrawnByFirstname' field.
      * @param value The value of 'withdrawnByFirstname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder setWithdrawnByFirstname(java.lang.String value) {
      validate(fields()[10], value);
      this.withdrawnByFirstname = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'withdrawnByFirstname' field has been set.
      * @return True if the 'withdrawnByFirstname' field has been set, false otherwise.
      */
    public boolean hasWithdrawnByFirstname() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'withdrawnByFirstname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder clearWithdrawnByFirstname() {
      withdrawnByFirstname = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'withdrawnByLastname' field.
      * @return The value.
      */
    public java.lang.String getWithdrawnByLastname() {
      return withdrawnByLastname;
    }


    /**
      * Sets the value of the 'withdrawnByLastname' field.
      * @param value The value of 'withdrawnByLastname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder setWithdrawnByLastname(java.lang.String value) {
      validate(fields()[11], value);
      this.withdrawnByLastname = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'withdrawnByLastname' field has been set.
      * @return True if the 'withdrawnByLastname' field has been set, false otherwise.
      */
    public boolean hasWithdrawnByLastname() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'withdrawnByLastname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder clearWithdrawnByLastname() {
      withdrawnByLastname = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'approvedOnDate' field.
      * @return The value.
      */
    public java.lang.String getApprovedOnDate() {
      return approvedOnDate;
    }


    /**
      * Sets the value of the 'approvedOnDate' field.
      * @param value The value of 'approvedOnDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder setApprovedOnDate(java.lang.String value) {
      validate(fields()[12], value);
      this.approvedOnDate = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'approvedOnDate' field has been set.
      * @return True if the 'approvedOnDate' field has been set, false otherwise.
      */
    public boolean hasApprovedOnDate() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'approvedOnDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder clearApprovedOnDate() {
      approvedOnDate = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'approvedByUsername' field.
      * @return The value.
      */
    public java.lang.String getApprovedByUsername() {
      return approvedByUsername;
    }


    /**
      * Sets the value of the 'approvedByUsername' field.
      * @param value The value of 'approvedByUsername'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder setApprovedByUsername(java.lang.String value) {
      validate(fields()[13], value);
      this.approvedByUsername = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'approvedByUsername' field has been set.
      * @return True if the 'approvedByUsername' field has been set, false otherwise.
      */
    public boolean hasApprovedByUsername() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'approvedByUsername' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder clearApprovedByUsername() {
      approvedByUsername = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'approvedByFirstname' field.
      * @return The value.
      */
    public java.lang.String getApprovedByFirstname() {
      return approvedByFirstname;
    }


    /**
      * Sets the value of the 'approvedByFirstname' field.
      * @param value The value of 'approvedByFirstname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder setApprovedByFirstname(java.lang.String value) {
      validate(fields()[14], value);
      this.approvedByFirstname = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'approvedByFirstname' field has been set.
      * @return True if the 'approvedByFirstname' field has been set, false otherwise.
      */
    public boolean hasApprovedByFirstname() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'approvedByFirstname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder clearApprovedByFirstname() {
      approvedByFirstname = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'approvedByLastname' field.
      * @return The value.
      */
    public java.lang.String getApprovedByLastname() {
      return approvedByLastname;
    }


    /**
      * Sets the value of the 'approvedByLastname' field.
      * @param value The value of 'approvedByLastname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder setApprovedByLastname(java.lang.String value) {
      validate(fields()[15], value);
      this.approvedByLastname = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'approvedByLastname' field has been set.
      * @return True if the 'approvedByLastname' field has been set, false otherwise.
      */
    public boolean hasApprovedByLastname() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'approvedByLastname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder clearApprovedByLastname() {
      approvedByLastname = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'activatedOnDate' field.
      * @return The value.
      */
    public java.lang.String getActivatedOnDate() {
      return activatedOnDate;
    }


    /**
      * Sets the value of the 'activatedOnDate' field.
      * @param value The value of 'activatedOnDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder setActivatedOnDate(java.lang.String value) {
      validate(fields()[16], value);
      this.activatedOnDate = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'activatedOnDate' field has been set.
      * @return True if the 'activatedOnDate' field has been set, false otherwise.
      */
    public boolean hasActivatedOnDate() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'activatedOnDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder clearActivatedOnDate() {
      activatedOnDate = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'activatedByUsername' field.
      * @return The value.
      */
    public java.lang.String getActivatedByUsername() {
      return activatedByUsername;
    }


    /**
      * Sets the value of the 'activatedByUsername' field.
      * @param value The value of 'activatedByUsername'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder setActivatedByUsername(java.lang.String value) {
      validate(fields()[17], value);
      this.activatedByUsername = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'activatedByUsername' field has been set.
      * @return True if the 'activatedByUsername' field has been set, false otherwise.
      */
    public boolean hasActivatedByUsername() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'activatedByUsername' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder clearActivatedByUsername() {
      activatedByUsername = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'activatedByFirstname' field.
      * @return The value.
      */
    public java.lang.String getActivatedByFirstname() {
      return activatedByFirstname;
    }


    /**
      * Sets the value of the 'activatedByFirstname' field.
      * @param value The value of 'activatedByFirstname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder setActivatedByFirstname(java.lang.String value) {
      validate(fields()[18], value);
      this.activatedByFirstname = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'activatedByFirstname' field has been set.
      * @return True if the 'activatedByFirstname' field has been set, false otherwise.
      */
    public boolean hasActivatedByFirstname() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'activatedByFirstname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder clearActivatedByFirstname() {
      activatedByFirstname = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'activatedByLastname' field.
      * @return The value.
      */
    public java.lang.String getActivatedByLastname() {
      return activatedByLastname;
    }


    /**
      * Sets the value of the 'activatedByLastname' field.
      * @param value The value of 'activatedByLastname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder setActivatedByLastname(java.lang.String value) {
      validate(fields()[19], value);
      this.activatedByLastname = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'activatedByLastname' field has been set.
      * @return True if the 'activatedByLastname' field has been set, false otherwise.
      */
    public boolean hasActivatedByLastname() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'activatedByLastname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder clearActivatedByLastname() {
      activatedByLastname = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'closedOnDate' field.
      * @return The value.
      */
    public java.lang.String getClosedOnDate() {
      return closedOnDate;
    }


    /**
      * Sets the value of the 'closedOnDate' field.
      * @param value The value of 'closedOnDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder setClosedOnDate(java.lang.String value) {
      validate(fields()[20], value);
      this.closedOnDate = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'closedOnDate' field has been set.
      * @return True if the 'closedOnDate' field has been set, false otherwise.
      */
    public boolean hasClosedOnDate() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'closedOnDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder clearClosedOnDate() {
      closedOnDate = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'closedByUsername' field.
      * @return The value.
      */
    public java.lang.String getClosedByUsername() {
      return closedByUsername;
    }


    /**
      * Sets the value of the 'closedByUsername' field.
      * @param value The value of 'closedByUsername'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder setClosedByUsername(java.lang.String value) {
      validate(fields()[21], value);
      this.closedByUsername = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'closedByUsername' field has been set.
      * @return True if the 'closedByUsername' field has been set, false otherwise.
      */
    public boolean hasClosedByUsername() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'closedByUsername' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder clearClosedByUsername() {
      closedByUsername = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'closedByFirstname' field.
      * @return The value.
      */
    public java.lang.String getClosedByFirstname() {
      return closedByFirstname;
    }


    /**
      * Sets the value of the 'closedByFirstname' field.
      * @param value The value of 'closedByFirstname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder setClosedByFirstname(java.lang.String value) {
      validate(fields()[22], value);
      this.closedByFirstname = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'closedByFirstname' field has been set.
      * @return True if the 'closedByFirstname' field has been set, false otherwise.
      */
    public boolean hasClosedByFirstname() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'closedByFirstname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder clearClosedByFirstname() {
      closedByFirstname = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'closedByLastname' field.
      * @return The value.
      */
    public java.lang.String getClosedByLastname() {
      return closedByLastname;
    }


    /**
      * Sets the value of the 'closedByLastname' field.
      * @param value The value of 'closedByLastname'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder setClosedByLastname(java.lang.String value) {
      validate(fields()[23], value);
      this.closedByLastname = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'closedByLastname' field has been set.
      * @return True if the 'closedByLastname' field has been set, false otherwise.
      */
    public boolean hasClosedByLastname() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'closedByLastname' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountApplicationTimelineDataV1.Builder clearClosedByLastname() {
      closedByLastname = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SavingsAccountApplicationTimelineDataV1 build() {
      try {
        SavingsAccountApplicationTimelineDataV1 record = new SavingsAccountApplicationTimelineDataV1();
        record.submittedOnDate = fieldSetFlags()[0] ? this.submittedOnDate : (java.lang.String) defaultValue(fields()[0]);
        record.submittedByUsername = fieldSetFlags()[1] ? this.submittedByUsername : (java.lang.String) defaultValue(fields()[1]);
        record.submittedByFirstname = fieldSetFlags()[2] ? this.submittedByFirstname : (java.lang.String) defaultValue(fields()[2]);
        record.submittedByLastname = fieldSetFlags()[3] ? this.submittedByLastname : (java.lang.String) defaultValue(fields()[3]);
        record.rejectedOnDate = fieldSetFlags()[4] ? this.rejectedOnDate : (java.lang.String) defaultValue(fields()[4]);
        record.rejectedByUsername = fieldSetFlags()[5] ? this.rejectedByUsername : (java.lang.String) defaultValue(fields()[5]);
        record.rejectedByFirstname = fieldSetFlags()[6] ? this.rejectedByFirstname : (java.lang.String) defaultValue(fields()[6]);
        record.rejectedByLastname = fieldSetFlags()[7] ? this.rejectedByLastname : (java.lang.String) defaultValue(fields()[7]);
        record.withdrawnOnDate = fieldSetFlags()[8] ? this.withdrawnOnDate : (java.lang.String) defaultValue(fields()[8]);
        record.withdrawnByUsername = fieldSetFlags()[9] ? this.withdrawnByUsername : (java.lang.String) defaultValue(fields()[9]);
        record.withdrawnByFirstname = fieldSetFlags()[10] ? this.withdrawnByFirstname : (java.lang.String) defaultValue(fields()[10]);
        record.withdrawnByLastname = fieldSetFlags()[11] ? this.withdrawnByLastname : (java.lang.String) defaultValue(fields()[11]);
        record.approvedOnDate = fieldSetFlags()[12] ? this.approvedOnDate : (java.lang.String) defaultValue(fields()[12]);
        record.approvedByUsername = fieldSetFlags()[13] ? this.approvedByUsername : (java.lang.String) defaultValue(fields()[13]);
        record.approvedByFirstname = fieldSetFlags()[14] ? this.approvedByFirstname : (java.lang.String) defaultValue(fields()[14]);
        record.approvedByLastname = fieldSetFlags()[15] ? this.approvedByLastname : (java.lang.String) defaultValue(fields()[15]);
        record.activatedOnDate = fieldSetFlags()[16] ? this.activatedOnDate : (java.lang.String) defaultValue(fields()[16]);
        record.activatedByUsername = fieldSetFlags()[17] ? this.activatedByUsername : (java.lang.String) defaultValue(fields()[17]);
        record.activatedByFirstname = fieldSetFlags()[18] ? this.activatedByFirstname : (java.lang.String) defaultValue(fields()[18]);
        record.activatedByLastname = fieldSetFlags()[19] ? this.activatedByLastname : (java.lang.String) defaultValue(fields()[19]);
        record.closedOnDate = fieldSetFlags()[20] ? this.closedOnDate : (java.lang.String) defaultValue(fields()[20]);
        record.closedByUsername = fieldSetFlags()[21] ? this.closedByUsername : (java.lang.String) defaultValue(fields()[21]);
        record.closedByFirstname = fieldSetFlags()[22] ? this.closedByFirstname : (java.lang.String) defaultValue(fields()[22]);
        record.closedByLastname = fieldSetFlags()[23] ? this.closedByLastname : (java.lang.String) defaultValue(fields()[23]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SavingsAccountApplicationTimelineDataV1>
    WRITER$ = (org.apache.avro.io.DatumWriter<SavingsAccountApplicationTimelineDataV1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SavingsAccountApplicationTimelineDataV1>
    READER$ = (org.apache.avro.io.DatumReader<SavingsAccountApplicationTimelineDataV1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.submittedOnDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.submittedOnDate);
    }

    if (this.submittedByUsername == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.submittedByUsername);
    }

    if (this.submittedByFirstname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.submittedByFirstname);
    }

    if (this.submittedByLastname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.submittedByLastname);
    }

    if (this.rejectedOnDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.rejectedOnDate);
    }

    if (this.rejectedByUsername == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.rejectedByUsername);
    }

    if (this.rejectedByFirstname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.rejectedByFirstname);
    }

    if (this.rejectedByLastname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.rejectedByLastname);
    }

    if (this.withdrawnOnDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.withdrawnOnDate);
    }

    if (this.withdrawnByUsername == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.withdrawnByUsername);
    }

    if (this.withdrawnByFirstname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.withdrawnByFirstname);
    }

    if (this.withdrawnByLastname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.withdrawnByLastname);
    }

    if (this.approvedOnDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.approvedOnDate);
    }

    if (this.approvedByUsername == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.approvedByUsername);
    }

    if (this.approvedByFirstname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.approvedByFirstname);
    }

    if (this.approvedByLastname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.approvedByLastname);
    }

    if (this.activatedOnDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.activatedOnDate);
    }

    if (this.activatedByUsername == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.activatedByUsername);
    }

    if (this.activatedByFirstname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.activatedByFirstname);
    }

    if (this.activatedByLastname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.activatedByLastname);
    }

    if (this.closedOnDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.closedOnDate);
    }

    if (this.closedByUsername == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.closedByUsername);
    }

    if (this.closedByFirstname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.closedByFirstname);
    }

    if (this.closedByLastname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.closedByLastname);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.submittedOnDate = null;
      } else {
        this.submittedOnDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.submittedByUsername = null;
      } else {
        this.submittedByUsername = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.submittedByFirstname = null;
      } else {
        this.submittedByFirstname = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.submittedByLastname = null;
      } else {
        this.submittedByLastname = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.rejectedOnDate = null;
      } else {
        this.rejectedOnDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.rejectedByUsername = null;
      } else {
        this.rejectedByUsername = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.rejectedByFirstname = null;
      } else {
        this.rejectedByFirstname = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.rejectedByLastname = null;
      } else {
        this.rejectedByLastname = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.withdrawnOnDate = null;
      } else {
        this.withdrawnOnDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.withdrawnByUsername = null;
      } else {
        this.withdrawnByUsername = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.withdrawnByFirstname = null;
      } else {
        this.withdrawnByFirstname = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.withdrawnByLastname = null;
      } else {
        this.withdrawnByLastname = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.approvedOnDate = null;
      } else {
        this.approvedOnDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.approvedByUsername = null;
      } else {
        this.approvedByUsername = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.approvedByFirstname = null;
      } else {
        this.approvedByFirstname = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.approvedByLastname = null;
      } else {
        this.approvedByLastname = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.activatedOnDate = null;
      } else {
        this.activatedOnDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.activatedByUsername = null;
      } else {
        this.activatedByUsername = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.activatedByFirstname = null;
      } else {
        this.activatedByFirstname = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.activatedByLastname = null;
      } else {
        this.activatedByLastname = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.closedOnDate = null;
      } else {
        this.closedOnDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.closedByUsername = null;
      } else {
        this.closedByUsername = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.closedByFirstname = null;
      } else {
        this.closedByFirstname = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.closedByLastname = null;
      } else {
        this.closedByLastname = in.readString();
      }

    } else {
      for (int i = 0; i < 24; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.submittedOnDate = null;
          } else {
            this.submittedOnDate = in.readString();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.submittedByUsername = null;
          } else {
            this.submittedByUsername = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.submittedByFirstname = null;
          } else {
            this.submittedByFirstname = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.submittedByLastname = null;
          } else {
            this.submittedByLastname = in.readString();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.rejectedOnDate = null;
          } else {
            this.rejectedOnDate = in.readString();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.rejectedByUsername = null;
          } else {
            this.rejectedByUsername = in.readString();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.rejectedByFirstname = null;
          } else {
            this.rejectedByFirstname = in.readString();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.rejectedByLastname = null;
          } else {
            this.rejectedByLastname = in.readString();
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.withdrawnOnDate = null;
          } else {
            this.withdrawnOnDate = in.readString();
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.withdrawnByUsername = null;
          } else {
            this.withdrawnByUsername = in.readString();
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.withdrawnByFirstname = null;
          } else {
            this.withdrawnByFirstname = in.readString();
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.withdrawnByLastname = null;
          } else {
            this.withdrawnByLastname = in.readString();
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.approvedOnDate = null;
          } else {
            this.approvedOnDate = in.readString();
          }
          break;

        case 13:
          if (in.readIndex() != 1) {
            in.readNull();
            this.approvedByUsername = null;
          } else {
            this.approvedByUsername = in.readString();
          }
          break;

        case 14:
          if (in.readIndex() != 1) {
            in.readNull();
            this.approvedByFirstname = null;
          } else {
            this.approvedByFirstname = in.readString();
          }
          break;

        case 15:
          if (in.readIndex() != 1) {
            in.readNull();
            this.approvedByLastname = null;
          } else {
            this.approvedByLastname = in.readString();
          }
          break;

        case 16:
          if (in.readIndex() != 1) {
            in.readNull();
            this.activatedOnDate = null;
          } else {
            this.activatedOnDate = in.readString();
          }
          break;

        case 17:
          if (in.readIndex() != 1) {
            in.readNull();
            this.activatedByUsername = null;
          } else {
            this.activatedByUsername = in.readString();
          }
          break;

        case 18:
          if (in.readIndex() != 1) {
            in.readNull();
            this.activatedByFirstname = null;
          } else {
            this.activatedByFirstname = in.readString();
          }
          break;

        case 19:
          if (in.readIndex() != 1) {
            in.readNull();
            this.activatedByLastname = null;
          } else {
            this.activatedByLastname = in.readString();
          }
          break;

        case 20:
          if (in.readIndex() != 1) {
            in.readNull();
            this.closedOnDate = null;
          } else {
            this.closedOnDate = in.readString();
          }
          break;

        case 21:
          if (in.readIndex() != 1) {
            in.readNull();
            this.closedByUsername = null;
          } else {
            this.closedByUsername = in.readString();
          }
          break;

        case 22:
          if (in.readIndex() != 1) {
            in.readNull();
            this.closedByFirstname = null;
          } else {
            this.closedByFirstname = in.readString();
          }
          break;

        case 23:
          if (in.readIndex() != 1) {
            in.readNull();
            this.closedByLastname = null;
          } else {
            this.closedByLastname = in.readString();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










