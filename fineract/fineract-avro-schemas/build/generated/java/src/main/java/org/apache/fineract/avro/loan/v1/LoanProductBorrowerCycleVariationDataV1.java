/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

package org.apache.fineract.avro.loan.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class LoanProductBorrowerCycleVariationDataV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, org.apache.fineract.avro.generator.ByteBufferSerializable {
  private static final long serialVersionUID = -6603166128683921400L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LoanProductBorrowerCycleVariationDataV1\",\"namespace\":\"org.apache.fineract.avro.loan.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"borrowerCycleNumber\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"paramType\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"EnumOptionDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"valueConditionType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"minValue\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"maxValue\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"defaultValue\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<LoanProductBorrowerCycleVariationDataV1> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<LoanProductBorrowerCycleVariationDataV1> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<LoanProductBorrowerCycleVariationDataV1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<LoanProductBorrowerCycleVariationDataV1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<LoanProductBorrowerCycleVariationDataV1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this LoanProductBorrowerCycleVariationDataV1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  @Override
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a LoanProductBorrowerCycleVariationDataV1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a LoanProductBorrowerCycleVariationDataV1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static LoanProductBorrowerCycleVariationDataV1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.Long id;
  private java.lang.Integer borrowerCycleNumber;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 paramType;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 valueConditionType;
  private java.math.BigDecimal minValue;
  private java.math.BigDecimal maxValue;
  private java.math.BigDecimal defaultValue;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LoanProductBorrowerCycleVariationDataV1() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param borrowerCycleNumber The new value for borrowerCycleNumber
   * @param paramType The new value for paramType
   * @param valueConditionType The new value for valueConditionType
   * @param minValue The new value for minValue
   * @param maxValue The new value for maxValue
   * @param defaultValue The new value for defaultValue
   */
  public LoanProductBorrowerCycleVariationDataV1(java.lang.Long id, java.lang.Integer borrowerCycleNumber, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 paramType, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 valueConditionType, java.math.BigDecimal minValue, java.math.BigDecimal maxValue, java.math.BigDecimal defaultValue) {
    this.id = id;
    this.borrowerCycleNumber = borrowerCycleNumber;
    this.paramType = paramType;
    this.valueConditionType = valueConditionType;
    this.minValue = minValue;
    this.maxValue = maxValue;
    this.defaultValue = defaultValue;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return borrowerCycleNumber;
    case 2: return paramType;
    case 3: return valueConditionType;
    case 4: return minValue;
    case 5: return maxValue;
    case 6: return defaultValue;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: borrowerCycleNumber = (java.lang.Integer)value$; break;
    case 2: paramType = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 3: valueConditionType = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 4: minValue = (java.math.BigDecimal)value$; break;
    case 5: maxValue = (java.math.BigDecimal)value$; break;
    case 6: defaultValue = (java.math.BigDecimal)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'borrowerCycleNumber' field.
   * @return The value of the 'borrowerCycleNumber' field.
   */
  public java.lang.Integer getBorrowerCycleNumber() {
    return borrowerCycleNumber;
  }


  /**
   * Sets the value of the 'borrowerCycleNumber' field.
   * @param value the value to set.
   */
  public void setBorrowerCycleNumber(java.lang.Integer value) {
    this.borrowerCycleNumber = value;
  }

  /**
   * Gets the value of the 'paramType' field.
   * @return The value of the 'paramType' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getParamType() {
    return paramType;
  }


  /**
   * Sets the value of the 'paramType' field.
   * @param value the value to set.
   */
  public void setParamType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.paramType = value;
  }

  /**
   * Gets the value of the 'valueConditionType' field.
   * @return The value of the 'valueConditionType' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getValueConditionType() {
    return valueConditionType;
  }


  /**
   * Sets the value of the 'valueConditionType' field.
   * @param value the value to set.
   */
  public void setValueConditionType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.valueConditionType = value;
  }

  /**
   * Gets the value of the 'minValue' field.
   * @return The value of the 'minValue' field.
   */
  public java.math.BigDecimal getMinValue() {
    return minValue;
  }


  /**
   * Sets the value of the 'minValue' field.
   * @param value the value to set.
   */
  public void setMinValue(java.math.BigDecimal value) {
    this.minValue = value;
  }

  /**
   * Gets the value of the 'maxValue' field.
   * @return The value of the 'maxValue' field.
   */
  public java.math.BigDecimal getMaxValue() {
    return maxValue;
  }


  /**
   * Sets the value of the 'maxValue' field.
   * @param value the value to set.
   */
  public void setMaxValue(java.math.BigDecimal value) {
    this.maxValue = value;
  }

  /**
   * Gets the value of the 'defaultValue' field.
   * @return The value of the 'defaultValue' field.
   */
  public java.math.BigDecimal getDefaultValue() {
    return defaultValue;
  }


  /**
   * Sets the value of the 'defaultValue' field.
   * @param value the value to set.
   */
  public void setDefaultValue(java.math.BigDecimal value) {
    this.defaultValue = value;
  }

  /**
   * Creates a new LoanProductBorrowerCycleVariationDataV1 RecordBuilder.
   * @return A new LoanProductBorrowerCycleVariationDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder newBuilder() {
    return new org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder();
  }

  /**
   * Creates a new LoanProductBorrowerCycleVariationDataV1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LoanProductBorrowerCycleVariationDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder newBuilder(org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder other) {
    if (other == null) {
      return new org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder(other);
    }
  }

  /**
   * Creates a new LoanProductBorrowerCycleVariationDataV1 RecordBuilder by copying an existing LoanProductBorrowerCycleVariationDataV1 instance.
   * @param other The existing instance to copy.
   * @return A new LoanProductBorrowerCycleVariationDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder newBuilder(org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1 other) {
    if (other == null) {
      return new org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder(other);
    }
  }

  /**
   * RecordBuilder for LoanProductBorrowerCycleVariationDataV1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LoanProductBorrowerCycleVariationDataV1>
    implements org.apache.avro.data.RecordBuilder<LoanProductBorrowerCycleVariationDataV1> {

    private java.lang.Long id;
    private java.lang.Integer borrowerCycleNumber;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 paramType;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder paramTypeBuilder;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 valueConditionType;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder valueConditionTypeBuilder;
    private java.math.BigDecimal minValue;
    private java.math.BigDecimal maxValue;
    private java.math.BigDecimal defaultValue;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.borrowerCycleNumber)) {
        this.borrowerCycleNumber = data().deepCopy(fields()[1].schema(), other.borrowerCycleNumber);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.paramType)) {
        this.paramType = data().deepCopy(fields()[2].schema(), other.paramType);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasParamTypeBuilder()) {
        this.paramTypeBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getParamTypeBuilder());
      }
      if (isValidValue(fields()[3], other.valueConditionType)) {
        this.valueConditionType = data().deepCopy(fields()[3].schema(), other.valueConditionType);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (other.hasValueConditionTypeBuilder()) {
        this.valueConditionTypeBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getValueConditionTypeBuilder());
      }
      if (isValidValue(fields()[4], other.minValue)) {
        this.minValue = data().deepCopy(fields()[4].schema(), other.minValue);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.maxValue)) {
        this.maxValue = data().deepCopy(fields()[5].schema(), other.maxValue);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.defaultValue)) {
        this.defaultValue = data().deepCopy(fields()[6].schema(), other.defaultValue);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing LoanProductBorrowerCycleVariationDataV1 instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.borrowerCycleNumber)) {
        this.borrowerCycleNumber = data().deepCopy(fields()[1].schema(), other.borrowerCycleNumber);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.paramType)) {
        this.paramType = data().deepCopy(fields()[2].schema(), other.paramType);
        fieldSetFlags()[2] = true;
      }
      this.paramTypeBuilder = null;
      if (isValidValue(fields()[3], other.valueConditionType)) {
        this.valueConditionType = data().deepCopy(fields()[3].schema(), other.valueConditionType);
        fieldSetFlags()[3] = true;
      }
      this.valueConditionTypeBuilder = null;
      if (isValidValue(fields()[4], other.minValue)) {
        this.minValue = data().deepCopy(fields()[4].schema(), other.minValue);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.maxValue)) {
        this.maxValue = data().deepCopy(fields()[5].schema(), other.maxValue);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.defaultValue)) {
        this.defaultValue = data().deepCopy(fields()[6].schema(), other.defaultValue);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder setId(java.lang.Long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'borrowerCycleNumber' field.
      * @return The value.
      */
    public java.lang.Integer getBorrowerCycleNumber() {
      return borrowerCycleNumber;
    }


    /**
      * Sets the value of the 'borrowerCycleNumber' field.
      * @param value The value of 'borrowerCycleNumber'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder setBorrowerCycleNumber(java.lang.Integer value) {
      validate(fields()[1], value);
      this.borrowerCycleNumber = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'borrowerCycleNumber' field has been set.
      * @return True if the 'borrowerCycleNumber' field has been set, false otherwise.
      */
    public boolean hasBorrowerCycleNumber() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'borrowerCycleNumber' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder clearBorrowerCycleNumber() {
      borrowerCycleNumber = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'paramType' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getParamType() {
      return paramType;
    }


    /**
      * Sets the value of the 'paramType' field.
      * @param value The value of 'paramType'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder setParamType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[2], value);
      this.paramTypeBuilder = null;
      this.paramType = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'paramType' field has been set.
      * @return True if the 'paramType' field has been set, false otherwise.
      */
    public boolean hasParamType() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'paramType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getParamTypeBuilder() {
      if (paramTypeBuilder == null) {
        if (hasParamType()) {
          setParamTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(paramType));
        } else {
          setParamTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return paramTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'paramType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder setParamTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearParamType();
      paramTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'paramType' field has an active Builder instance
     * @return True if the 'paramType' field has an active Builder instance
     */
    public boolean hasParamTypeBuilder() {
      return paramTypeBuilder != null;
    }

    /**
      * Clears the value of the 'paramType' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder clearParamType() {
      paramType = null;
      paramTypeBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'valueConditionType' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getValueConditionType() {
      return valueConditionType;
    }


    /**
      * Sets the value of the 'valueConditionType' field.
      * @param value The value of 'valueConditionType'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder setValueConditionType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[3], value);
      this.valueConditionTypeBuilder = null;
      this.valueConditionType = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'valueConditionType' field has been set.
      * @return True if the 'valueConditionType' field has been set, false otherwise.
      */
    public boolean hasValueConditionType() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'valueConditionType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getValueConditionTypeBuilder() {
      if (valueConditionTypeBuilder == null) {
        if (hasValueConditionType()) {
          setValueConditionTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(valueConditionType));
        } else {
          setValueConditionTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return valueConditionTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'valueConditionType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder setValueConditionTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearValueConditionType();
      valueConditionTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'valueConditionType' field has an active Builder instance
     * @return True if the 'valueConditionType' field has an active Builder instance
     */
    public boolean hasValueConditionTypeBuilder() {
      return valueConditionTypeBuilder != null;
    }

    /**
      * Clears the value of the 'valueConditionType' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder clearValueConditionType() {
      valueConditionType = null;
      valueConditionTypeBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'minValue' field.
      * @return The value.
      */
    public java.math.BigDecimal getMinValue() {
      return minValue;
    }


    /**
      * Sets the value of the 'minValue' field.
      * @param value The value of 'minValue'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder setMinValue(java.math.BigDecimal value) {
      validate(fields()[4], value);
      this.minValue = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'minValue' field has been set.
      * @return True if the 'minValue' field has been set, false otherwise.
      */
    public boolean hasMinValue() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'minValue' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder clearMinValue() {
      minValue = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'maxValue' field.
      * @return The value.
      */
    public java.math.BigDecimal getMaxValue() {
      return maxValue;
    }


    /**
      * Sets the value of the 'maxValue' field.
      * @param value The value of 'maxValue'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder setMaxValue(java.math.BigDecimal value) {
      validate(fields()[5], value);
      this.maxValue = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'maxValue' field has been set.
      * @return True if the 'maxValue' field has been set, false otherwise.
      */
    public boolean hasMaxValue() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'maxValue' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder clearMaxValue() {
      maxValue = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'defaultValue' field.
      * @return The value.
      */
    public java.math.BigDecimal getDefaultValue() {
      return defaultValue;
    }


    /**
      * Sets the value of the 'defaultValue' field.
      * @param value The value of 'defaultValue'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder setDefaultValue(java.math.BigDecimal value) {
      validate(fields()[6], value);
      this.defaultValue = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'defaultValue' field has been set.
      * @return True if the 'defaultValue' field has been set, false otherwise.
      */
    public boolean hasDefaultValue() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'defaultValue' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1.Builder clearDefaultValue() {
      defaultValue = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public LoanProductBorrowerCycleVariationDataV1 build() {
      try {
        LoanProductBorrowerCycleVariationDataV1 record = new LoanProductBorrowerCycleVariationDataV1();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.borrowerCycleNumber = fieldSetFlags()[1] ? this.borrowerCycleNumber : (java.lang.Integer) defaultValue(fields()[1]);
        if (paramTypeBuilder != null) {
          try {
            record.paramType = this.paramTypeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("paramType"));
            throw e;
          }
        } else {
          record.paramType = fieldSetFlags()[2] ? this.paramType : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[2]);
        }
        if (valueConditionTypeBuilder != null) {
          try {
            record.valueConditionType = this.valueConditionTypeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("valueConditionType"));
            throw e;
          }
        } else {
          record.valueConditionType = fieldSetFlags()[3] ? this.valueConditionType : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[3]);
        }
        record.minValue = fieldSetFlags()[4] ? this.minValue : (java.math.BigDecimal) defaultValue(fields()[4]);
        record.maxValue = fieldSetFlags()[5] ? this.maxValue : (java.math.BigDecimal) defaultValue(fields()[5]);
        record.defaultValue = fieldSetFlags()[6] ? this.defaultValue : (java.math.BigDecimal) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<LoanProductBorrowerCycleVariationDataV1>
    WRITER$ = (org.apache.avro.io.DatumWriter<LoanProductBorrowerCycleVariationDataV1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<LoanProductBorrowerCycleVariationDataV1>
    READER$ = (org.apache.avro.io.DatumReader<LoanProductBorrowerCycleVariationDataV1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










