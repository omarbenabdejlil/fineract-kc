/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

package org.apache.fineract.avro.loan.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class LoanProductDataV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, org.apache.fineract.avro.generator.ByteBufferSerializable {
  private static final long serialVersionUID = 4833009455433230927L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LoanProductDataV1\",\"namespace\":\"org.apache.fineract.avro.loan.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"shortName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fundId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"fundName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"includeInBorrowerCycle\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"useBorrowerCycle\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"startDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"closeDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"currency\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CurrencyDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"decimalPlaces\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"inMultiplesOf\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"displaySymbol\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nameCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"displayLabel\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"principal\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"minPrincipal\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"maxPrincipal\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"numberOfRepayments\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"minNumberOfRepayments\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"maxNumberOfRepayments\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"repaymentEvery\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"repaymentFrequencyType\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"EnumOptionDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"interestRatePerPeriod\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"minInterestRatePerPeriod\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"maxInterestRatePerPeriod\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"interestRateFrequencyType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"annualInterestRate\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"isLinkedToFloatingInterestRates\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"floatingRateId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"floatingRateName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"interestRateDifferential\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"minDifferentialLendingRate\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"defaultDifferentialLendingRate\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"maxDifferentialLendingRate\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"isFloatingInterestRateCalculationAllowed\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"allowVariableInstallments\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"minimumGap\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"maximumGap\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"amortizationType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"interestType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"interestCalculationPeriodType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"allowPartialPeriodInterestCalculation\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"inArrearsTolerance\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"transactionProcessingStrategyCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"transactionProcessingStrategyName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"graceOnPrincipalPayment\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"recurringMoratoriumOnPrincipalPeriods\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"graceOnInterestPayment\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"graceOnInterestCharged\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"graceOnArrearsAgeing\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"overdueDaysForNPA\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"daysInMonthType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"daysInYearType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"isInterestRecalculationEnabled\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"interestRecalculationData\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LoanProductInterestRecalculationDataV1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"productId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"interestRecalculationCompoundingType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"rescheduleStrategyType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"recalculationRestFrequencyType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"recalculationRestFrequencyInterval\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"recalculationRestFrequencyNthDay\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"recalculationRestFrequencyWeekday\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"recalculationRestFrequencyOnDay\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"recalculationCompoundingFrequencyType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"recalculationCompoundingFrequencyInterval\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"recalculationCompoundingFrequencyNthDay\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"recalculationCompoundingFrequencyWeekday\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"recalculationCompoundingFrequencyOnDay\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"isArrearsBasedOnOriginalSchedule\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"isCompoundingToBePostedAsTransaction\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"preClosureInterestCalculationStrategy\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"allowCompoundingOnEod\",\"ty","pe\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"minimumDaysBetweenDisbursalAndFirstRepayment\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"canDefineInstallmentAmount\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"installmentAmountInMultiplesOf\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"charges\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ChargeDataV1\",\"namespace\":\"org.apache.fineract.avro.portfolio.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"active\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"penalty\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"freeWithdrawal\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"freeWithdrawalChargeFrequency\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"restartFrequency\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"restartFrequencyEnum\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"isPaymentType\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"paymentTypeOptions\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PaymentTypeDataV1\",\"namespace\":\"org.apache.fineract.avro.payment.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isCashPayment\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"position\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"codeName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isSystemDefined\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"currency\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.CurrencyDataV1\"],\"default\":null},{\"name\":\"amount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"chargeTimeType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"chargeAppliesTo\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"chargeCalculationType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"chargePaymentMode\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"feeOnMonthDay\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"feeInterval\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"minCap\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"maxCap\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"feeFrequency\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"incomeOrLiabilityAccount\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GLAccountDataV1\",\"namespace\":\"org.apache.fineract.avro.gl.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"parentId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"glCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"disabled\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"manualEntriesAllowed\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"usage\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nameDecorated\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"tagId\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CodeValueDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"position\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"active\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"mandatory\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"organizationRunningBalance\",\"type\":[\"null\",\"long\"],\"default\":null}]}],\"default\":null}]}}],\"default\":null},{\"name\":\"principalVariationsForBorrowerCycle\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"LoanProductBorrowerCycleVariationDataV1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"borrowerCycleNumber\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"paramType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"valueConditionType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"minValue\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"maxValue\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"defaultValue\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null}]}}],\"default\":null},{\"name\":\"interestRateVariationsForBorrowerCycle\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"LoanProductBorrowerCycleVariationDataV1\"}],\"default\":null},{\"name\":\"numberOfRepaymentVariationsForBorrowerCycle\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"LoanProductBorrowerCycleVariationDataV1\"}],\"default\":null},{\"name\":\"isRatesEnabled\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"rates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"RateDataV1\",\"namespace\":\"org.apache.fineract.avro.portfolio.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"percentage\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"productApply\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"active\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}}],\"default\":null},{\"name\":\"multiDisburseLoan\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"maxTrancheCount\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"outstandingLoanBalance\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"disallowExpectedDisbursements\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"allowApprovedDisbursedAmountsOverApplied\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"overAppliedCalculationType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"overAppliedNumber\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"principalThresholdForLastInstallment\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"holdGuaranteeFunds\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"productGuaranteeData\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LoanProductGuaranteeDataV1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"productId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"mandatoryGuarantee\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"minimumGuaranteeFromOwnFunds\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"minimumGuaranteeFromGuarantor\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null}]}],\"default\":null},{\"name\":\"accountMovesOutOfNPAOnlyOnArrearsCompletion\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"syncExpectedWithDisbursementDate\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"isEqualAmortization\",\"type\":[\"null\",\"","boolean\"],\"default\":null},{\"name\":\"fixedPrincipalPercentagePerInstallment\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"delinquencyBucket\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DelinquencyBucketDataV1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"ranges\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"DelinquencyRangeDataV1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"classification\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"minimumAgeDays\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"maximumAgeDays\",\"type\":[\"null\",\"int\"],\"default\":null}]}}],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<LoanProductDataV1> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<LoanProductDataV1> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<LoanProductDataV1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<LoanProductDataV1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<LoanProductDataV1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this LoanProductDataV1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  @Override
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a LoanProductDataV1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a LoanProductDataV1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static LoanProductDataV1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.Long id;
  private java.lang.String name;
  private java.lang.String shortName;
  private java.lang.String description;
  private java.lang.Long fundId;
  private java.lang.String fundName;
  private java.lang.Boolean includeInBorrowerCycle;
  private java.lang.Boolean useBorrowerCycle;
  private java.lang.String startDate;
  private java.lang.String closeDate;
  private java.lang.String status;
  private java.lang.String externalId;
  private org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency;
  private java.math.BigDecimal principal;
  private java.math.BigDecimal minPrincipal;
  private java.math.BigDecimal maxPrincipal;
  private java.lang.Integer numberOfRepayments;
  private java.lang.Integer minNumberOfRepayments;
  private java.lang.Integer maxNumberOfRepayments;
  private java.lang.Integer repaymentEvery;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 repaymentFrequencyType;
  private java.math.BigDecimal interestRatePerPeriod;
  private java.math.BigDecimal minInterestRatePerPeriod;
  private java.math.BigDecimal maxInterestRatePerPeriod;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 interestRateFrequencyType;
  private java.math.BigDecimal annualInterestRate;
  private java.lang.Boolean isLinkedToFloatingInterestRates;
  private java.lang.Long floatingRateId;
  private java.lang.String floatingRateName;
  private java.math.BigDecimal interestRateDifferential;
  private java.math.BigDecimal minDifferentialLendingRate;
  private java.math.BigDecimal defaultDifferentialLendingRate;
  private java.math.BigDecimal maxDifferentialLendingRate;
  private java.lang.Boolean isFloatingInterestRateCalculationAllowed;
  private java.lang.Boolean allowVariableInstallments;
  private java.lang.Integer minimumGap;
  private java.lang.Integer maximumGap;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 amortizationType;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 interestType;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 interestCalculationPeriodType;
  private java.lang.Boolean allowPartialPeriodInterestCalculation;
  private java.math.BigDecimal inArrearsTolerance;
  private java.lang.String transactionProcessingStrategyCode;
  private java.lang.String transactionProcessingStrategyName;
  private java.lang.Integer graceOnPrincipalPayment;
  private java.lang.Integer recurringMoratoriumOnPrincipalPeriods;
  private java.lang.Integer graceOnInterestPayment;
  private java.lang.Integer graceOnInterestCharged;
  private java.lang.Integer graceOnArrearsAgeing;
  private java.lang.Integer overdueDaysForNPA;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 daysInMonthType;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 daysInYearType;
  private java.lang.Boolean isInterestRecalculationEnabled;
  private org.apache.fineract.avro.loan.v1.LoanProductInterestRecalculationDataV1 interestRecalculationData;
  private java.lang.Integer minimumDaysBetweenDisbursalAndFirstRepayment;
  private java.lang.Boolean canDefineInstallmentAmount;
  private java.lang.Integer installmentAmountInMultiplesOf;
  private java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1> charges;
  private java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1> principalVariationsForBorrowerCycle;
  private java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1> interestRateVariationsForBorrowerCycle;
  private java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1> numberOfRepaymentVariationsForBorrowerCycle;
  private java.lang.Boolean isRatesEnabled;
  private java.util.List<org.apache.fineract.avro.portfolio.v1.RateDataV1> rates;
  private java.lang.Boolean multiDisburseLoan;
  private java.lang.Integer maxTrancheCount;
  private java.math.BigDecimal outstandingLoanBalance;
  private java.lang.Boolean disallowExpectedDisbursements;
  private java.lang.Boolean allowApprovedDisbursedAmountsOverApplied;
  private java.lang.String overAppliedCalculationType;
  private java.lang.Integer overAppliedNumber;
  private java.math.BigDecimal principalThresholdForLastInstallment;
  private java.lang.Boolean holdGuaranteeFunds;
  private org.apache.fineract.avro.loan.v1.LoanProductGuaranteeDataV1 productGuaranteeData;
  private java.lang.Boolean accountMovesOutOfNPAOnlyOnArrearsCompletion;
  private java.lang.Boolean syncExpectedWithDisbursementDate;
  private java.lang.Boolean isEqualAmortization;
  private java.math.BigDecimal fixedPrincipalPercentagePerInstallment;
  private org.apache.fineract.avro.loan.v1.DelinquencyBucketDataV1 delinquencyBucket;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LoanProductDataV1() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param name The new value for name
   * @param shortName The new value for shortName
   * @param description The new value for description
   * @param fundId The new value for fundId
   * @param fundName The new value for fundName
   * @param includeInBorrowerCycle The new value for includeInBorrowerCycle
   * @param useBorrowerCycle The new value for useBorrowerCycle
   * @param startDate The new value for startDate
   * @param closeDate The new value for closeDate
   * @param status The new value for status
   * @param externalId The new value for externalId
   * @param currency The new value for currency
   * @param principal The new value for principal
   * @param minPrincipal The new value for minPrincipal
   * @param maxPrincipal The new value for maxPrincipal
   * @param numberOfRepayments The new value for numberOfRepayments
   * @param minNumberOfRepayments The new value for minNumberOfRepayments
   * @param maxNumberOfRepayments The new value for maxNumberOfRepayments
   * @param repaymentEvery The new value for repaymentEvery
   * @param repaymentFrequencyType The new value for repaymentFrequencyType
   * @param interestRatePerPeriod The new value for interestRatePerPeriod
   * @param minInterestRatePerPeriod The new value for minInterestRatePerPeriod
   * @param maxInterestRatePerPeriod The new value for maxInterestRatePerPeriod
   * @param interestRateFrequencyType The new value for interestRateFrequencyType
   * @param annualInterestRate The new value for annualInterestRate
   * @param isLinkedToFloatingInterestRates The new value for isLinkedToFloatingInterestRates
   * @param floatingRateId The new value for floatingRateId
   * @param floatingRateName The new value for floatingRateName
   * @param interestRateDifferential The new value for interestRateDifferential
   * @param minDifferentialLendingRate The new value for minDifferentialLendingRate
   * @param defaultDifferentialLendingRate The new value for defaultDifferentialLendingRate
   * @param maxDifferentialLendingRate The new value for maxDifferentialLendingRate
   * @param isFloatingInterestRateCalculationAllowed The new value for isFloatingInterestRateCalculationAllowed
   * @param allowVariableInstallments The new value for allowVariableInstallments
   * @param minimumGap The new value for minimumGap
   * @param maximumGap The new value for maximumGap
   * @param amortizationType The new value for amortizationType
   * @param interestType The new value for interestType
   * @param interestCalculationPeriodType The new value for interestCalculationPeriodType
   * @param allowPartialPeriodInterestCalculation The new value for allowPartialPeriodInterestCalculation
   * @param inArrearsTolerance The new value for inArrearsTolerance
   * @param transactionProcessingStrategyCode The new value for transactionProcessingStrategyCode
   * @param transactionProcessingStrategyName The new value for transactionProcessingStrategyName
   * @param graceOnPrincipalPayment The new value for graceOnPrincipalPayment
   * @param recurringMoratoriumOnPrincipalPeriods The new value for recurringMoratoriumOnPrincipalPeriods
   * @param graceOnInterestPayment The new value for graceOnInterestPayment
   * @param graceOnInterestCharged The new value for graceOnInterestCharged
   * @param graceOnArrearsAgeing The new value for graceOnArrearsAgeing
   * @param overdueDaysForNPA The new value for overdueDaysForNPA
   * @param daysInMonthType The new value for daysInMonthType
   * @param daysInYearType The new value for daysInYearType
   * @param isInterestRecalculationEnabled The new value for isInterestRecalculationEnabled
   * @param interestRecalculationData The new value for interestRecalculationData
   * @param minimumDaysBetweenDisbursalAndFirstRepayment The new value for minimumDaysBetweenDisbursalAndFirstRepayment
   * @param canDefineInstallmentAmount The new value for canDefineInstallmentAmount
   * @param installmentAmountInMultiplesOf The new value for installmentAmountInMultiplesOf
   * @param charges The new value for charges
   * @param principalVariationsForBorrowerCycle The new value for principalVariationsForBorrowerCycle
   * @param interestRateVariationsForBorrowerCycle The new value for interestRateVariationsForBorrowerCycle
   * @param numberOfRepaymentVariationsForBorrowerCycle The new value for numberOfRepaymentVariationsForBorrowerCycle
   * @param isRatesEnabled The new value for isRatesEnabled
   * @param rates The new value for rates
   * @param multiDisburseLoan The new value for multiDisburseLoan
   * @param maxTrancheCount The new value for maxTrancheCount
   * @param outstandingLoanBalance The new value for outstandingLoanBalance
   * @param disallowExpectedDisbursements The new value for disallowExpectedDisbursements
   * @param allowApprovedDisbursedAmountsOverApplied The new value for allowApprovedDisbursedAmountsOverApplied
   * @param overAppliedCalculationType The new value for overAppliedCalculationType
   * @param overAppliedNumber The new value for overAppliedNumber
   * @param principalThresholdForLastInstallment The new value for principalThresholdForLastInstallment
   * @param holdGuaranteeFunds The new value for holdGuaranteeFunds
   * @param productGuaranteeData The new value for productGuaranteeData
   * @param accountMovesOutOfNPAOnlyOnArrearsCompletion The new value for accountMovesOutOfNPAOnlyOnArrearsCompletion
   * @param syncExpectedWithDisbursementDate The new value for syncExpectedWithDisbursementDate
   * @param isEqualAmortization The new value for isEqualAmortization
   * @param fixedPrincipalPercentagePerInstallment The new value for fixedPrincipalPercentagePerInstallment
   * @param delinquencyBucket The new value for delinquencyBucket
   */
  public LoanProductDataV1(java.lang.Long id, java.lang.String name, java.lang.String shortName, java.lang.String description, java.lang.Long fundId, java.lang.String fundName, java.lang.Boolean includeInBorrowerCycle, java.lang.Boolean useBorrowerCycle, java.lang.String startDate, java.lang.String closeDate, java.lang.String status, java.lang.String externalId, org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency, java.math.BigDecimal principal, java.math.BigDecimal minPrincipal, java.math.BigDecimal maxPrincipal, java.lang.Integer numberOfRepayments, java.lang.Integer minNumberOfRepayments, java.lang.Integer maxNumberOfRepayments, java.lang.Integer repaymentEvery, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 repaymentFrequencyType, java.math.BigDecimal interestRatePerPeriod, java.math.BigDecimal minInterestRatePerPeriod, java.math.BigDecimal maxInterestRatePerPeriod, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 interestRateFrequencyType, java.math.BigDecimal annualInterestRate, java.lang.Boolean isLinkedToFloatingInterestRates, java.lang.Long floatingRateId, java.lang.String floatingRateName, java.math.BigDecimal interestRateDifferential, java.math.BigDecimal minDifferentialLendingRate, java.math.BigDecimal defaultDifferentialLendingRate, java.math.BigDecimal maxDifferentialLendingRate, java.lang.Boolean isFloatingInterestRateCalculationAllowed, java.lang.Boolean allowVariableInstallments, java.lang.Integer minimumGap, java.lang.Integer maximumGap, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 amortizationType, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 interestType, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 interestCalculationPeriodType, java.lang.Boolean allowPartialPeriodInterestCalculation, java.math.BigDecimal inArrearsTolerance, java.lang.String transactionProcessingStrategyCode, java.lang.String transactionProcessingStrategyName, java.lang.Integer graceOnPrincipalPayment, java.lang.Integer recurringMoratoriumOnPrincipalPeriods, java.lang.Integer graceOnInterestPayment, java.lang.Integer graceOnInterestCharged, java.lang.Integer graceOnArrearsAgeing, java.lang.Integer overdueDaysForNPA, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 daysInMonthType, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 daysInYearType, java.lang.Boolean isInterestRecalculationEnabled, org.apache.fineract.avro.loan.v1.LoanProductInterestRecalculationDataV1 interestRecalculationData, java.lang.Integer minimumDaysBetweenDisbursalAndFirstRepayment, java.lang.Boolean canDefineInstallmentAmount, java.lang.Integer installmentAmountInMultiplesOf, java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1> charges, java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1> principalVariationsForBorrowerCycle, java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1> interestRateVariationsForBorrowerCycle, java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1> numberOfRepaymentVariationsForBorrowerCycle, java.lang.Boolean isRatesEnabled, java.util.List<org.apache.fineract.avro.portfolio.v1.RateDataV1> rates, java.lang.Boolean multiDisburseLoan, java.lang.Integer maxTrancheCount, java.math.BigDecimal outstandingLoanBalance, java.lang.Boolean disallowExpectedDisbursements, java.lang.Boolean allowApprovedDisbursedAmountsOverApplied, java.lang.String overAppliedCalculationType, java.lang.Integer overAppliedNumber, java.math.BigDecimal principalThresholdForLastInstallment, java.lang.Boolean holdGuaranteeFunds, org.apache.fineract.avro.loan.v1.LoanProductGuaranteeDataV1 productGuaranteeData, java.lang.Boolean accountMovesOutOfNPAOnlyOnArrearsCompletion, java.lang.Boolean syncExpectedWithDisbursementDate, java.lang.Boolean isEqualAmortization, java.math.BigDecimal fixedPrincipalPercentagePerInstallment, org.apache.fineract.avro.loan.v1.DelinquencyBucketDataV1 delinquencyBucket) {
    this.id = id;
    this.name = name;
    this.shortName = shortName;
    this.description = description;
    this.fundId = fundId;
    this.fundName = fundName;
    this.includeInBorrowerCycle = includeInBorrowerCycle;
    this.useBorrowerCycle = useBorrowerCycle;
    this.startDate = startDate;
    this.closeDate = closeDate;
    this.status = status;
    this.externalId = externalId;
    this.currency = currency;
    this.principal = principal;
    this.minPrincipal = minPrincipal;
    this.maxPrincipal = maxPrincipal;
    this.numberOfRepayments = numberOfRepayments;
    this.minNumberOfRepayments = minNumberOfRepayments;
    this.maxNumberOfRepayments = maxNumberOfRepayments;
    this.repaymentEvery = repaymentEvery;
    this.repaymentFrequencyType = repaymentFrequencyType;
    this.interestRatePerPeriod = interestRatePerPeriod;
    this.minInterestRatePerPeriod = minInterestRatePerPeriod;
    this.maxInterestRatePerPeriod = maxInterestRatePerPeriod;
    this.interestRateFrequencyType = interestRateFrequencyType;
    this.annualInterestRate = annualInterestRate;
    this.isLinkedToFloatingInterestRates = isLinkedToFloatingInterestRates;
    this.floatingRateId = floatingRateId;
    this.floatingRateName = floatingRateName;
    this.interestRateDifferential = interestRateDifferential;
    this.minDifferentialLendingRate = minDifferentialLendingRate;
    this.defaultDifferentialLendingRate = defaultDifferentialLendingRate;
    this.maxDifferentialLendingRate = maxDifferentialLendingRate;
    this.isFloatingInterestRateCalculationAllowed = isFloatingInterestRateCalculationAllowed;
    this.allowVariableInstallments = allowVariableInstallments;
    this.minimumGap = minimumGap;
    this.maximumGap = maximumGap;
    this.amortizationType = amortizationType;
    this.interestType = interestType;
    this.interestCalculationPeriodType = interestCalculationPeriodType;
    this.allowPartialPeriodInterestCalculation = allowPartialPeriodInterestCalculation;
    this.inArrearsTolerance = inArrearsTolerance;
    this.transactionProcessingStrategyCode = transactionProcessingStrategyCode;
    this.transactionProcessingStrategyName = transactionProcessingStrategyName;
    this.graceOnPrincipalPayment = graceOnPrincipalPayment;
    this.recurringMoratoriumOnPrincipalPeriods = recurringMoratoriumOnPrincipalPeriods;
    this.graceOnInterestPayment = graceOnInterestPayment;
    this.graceOnInterestCharged = graceOnInterestCharged;
    this.graceOnArrearsAgeing = graceOnArrearsAgeing;
    this.overdueDaysForNPA = overdueDaysForNPA;
    this.daysInMonthType = daysInMonthType;
    this.daysInYearType = daysInYearType;
    this.isInterestRecalculationEnabled = isInterestRecalculationEnabled;
    this.interestRecalculationData = interestRecalculationData;
    this.minimumDaysBetweenDisbursalAndFirstRepayment = minimumDaysBetweenDisbursalAndFirstRepayment;
    this.canDefineInstallmentAmount = canDefineInstallmentAmount;
    this.installmentAmountInMultiplesOf = installmentAmountInMultiplesOf;
    this.charges = charges;
    this.principalVariationsForBorrowerCycle = principalVariationsForBorrowerCycle;
    this.interestRateVariationsForBorrowerCycle = interestRateVariationsForBorrowerCycle;
    this.numberOfRepaymentVariationsForBorrowerCycle = numberOfRepaymentVariationsForBorrowerCycle;
    this.isRatesEnabled = isRatesEnabled;
    this.rates = rates;
    this.multiDisburseLoan = multiDisburseLoan;
    this.maxTrancheCount = maxTrancheCount;
    this.outstandingLoanBalance = outstandingLoanBalance;
    this.disallowExpectedDisbursements = disallowExpectedDisbursements;
    this.allowApprovedDisbursedAmountsOverApplied = allowApprovedDisbursedAmountsOverApplied;
    this.overAppliedCalculationType = overAppliedCalculationType;
    this.overAppliedNumber = overAppliedNumber;
    this.principalThresholdForLastInstallment = principalThresholdForLastInstallment;
    this.holdGuaranteeFunds = holdGuaranteeFunds;
    this.productGuaranteeData = productGuaranteeData;
    this.accountMovesOutOfNPAOnlyOnArrearsCompletion = accountMovesOutOfNPAOnlyOnArrearsCompletion;
    this.syncExpectedWithDisbursementDate = syncExpectedWithDisbursementDate;
    this.isEqualAmortization = isEqualAmortization;
    this.fixedPrincipalPercentagePerInstallment = fixedPrincipalPercentagePerInstallment;
    this.delinquencyBucket = delinquencyBucket;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return name;
    case 2: return shortName;
    case 3: return description;
    case 4: return fundId;
    case 5: return fundName;
    case 6: return includeInBorrowerCycle;
    case 7: return useBorrowerCycle;
    case 8: return startDate;
    case 9: return closeDate;
    case 10: return status;
    case 11: return externalId;
    case 12: return currency;
    case 13: return principal;
    case 14: return minPrincipal;
    case 15: return maxPrincipal;
    case 16: return numberOfRepayments;
    case 17: return minNumberOfRepayments;
    case 18: return maxNumberOfRepayments;
    case 19: return repaymentEvery;
    case 20: return repaymentFrequencyType;
    case 21: return interestRatePerPeriod;
    case 22: return minInterestRatePerPeriod;
    case 23: return maxInterestRatePerPeriod;
    case 24: return interestRateFrequencyType;
    case 25: return annualInterestRate;
    case 26: return isLinkedToFloatingInterestRates;
    case 27: return floatingRateId;
    case 28: return floatingRateName;
    case 29: return interestRateDifferential;
    case 30: return minDifferentialLendingRate;
    case 31: return defaultDifferentialLendingRate;
    case 32: return maxDifferentialLendingRate;
    case 33: return isFloatingInterestRateCalculationAllowed;
    case 34: return allowVariableInstallments;
    case 35: return minimumGap;
    case 36: return maximumGap;
    case 37: return amortizationType;
    case 38: return interestType;
    case 39: return interestCalculationPeriodType;
    case 40: return allowPartialPeriodInterestCalculation;
    case 41: return inArrearsTolerance;
    case 42: return transactionProcessingStrategyCode;
    case 43: return transactionProcessingStrategyName;
    case 44: return graceOnPrincipalPayment;
    case 45: return recurringMoratoriumOnPrincipalPeriods;
    case 46: return graceOnInterestPayment;
    case 47: return graceOnInterestCharged;
    case 48: return graceOnArrearsAgeing;
    case 49: return overdueDaysForNPA;
    case 50: return daysInMonthType;
    case 51: return daysInYearType;
    case 52: return isInterestRecalculationEnabled;
    case 53: return interestRecalculationData;
    case 54: return minimumDaysBetweenDisbursalAndFirstRepayment;
    case 55: return canDefineInstallmentAmount;
    case 56: return installmentAmountInMultiplesOf;
    case 57: return charges;
    case 58: return principalVariationsForBorrowerCycle;
    case 59: return interestRateVariationsForBorrowerCycle;
    case 60: return numberOfRepaymentVariationsForBorrowerCycle;
    case 61: return isRatesEnabled;
    case 62: return rates;
    case 63: return multiDisburseLoan;
    case 64: return maxTrancheCount;
    case 65: return outstandingLoanBalance;
    case 66: return disallowExpectedDisbursements;
    case 67: return allowApprovedDisbursedAmountsOverApplied;
    case 68: return overAppliedCalculationType;
    case 69: return overAppliedNumber;
    case 70: return principalThresholdForLastInstallment;
    case 71: return holdGuaranteeFunds;
    case 72: return productGuaranteeData;
    case 73: return accountMovesOutOfNPAOnlyOnArrearsCompletion;
    case 74: return syncExpectedWithDisbursementDate;
    case 75: return isEqualAmortization;
    case 76: return fixedPrincipalPercentagePerInstallment;
    case 77: return delinquencyBucket;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: name = value$ != null ? value$.toString() : null; break;
    case 2: shortName = value$ != null ? value$.toString() : null; break;
    case 3: description = value$ != null ? value$.toString() : null; break;
    case 4: fundId = (java.lang.Long)value$; break;
    case 5: fundName = value$ != null ? value$.toString() : null; break;
    case 6: includeInBorrowerCycle = (java.lang.Boolean)value$; break;
    case 7: useBorrowerCycle = (java.lang.Boolean)value$; break;
    case 8: startDate = value$ != null ? value$.toString() : null; break;
    case 9: closeDate = value$ != null ? value$.toString() : null; break;
    case 10: status = value$ != null ? value$.toString() : null; break;
    case 11: externalId = value$ != null ? value$.toString() : null; break;
    case 12: currency = (org.apache.fineract.avro.generic.v1.CurrencyDataV1)value$; break;
    case 13: principal = (java.math.BigDecimal)value$; break;
    case 14: minPrincipal = (java.math.BigDecimal)value$; break;
    case 15: maxPrincipal = (java.math.BigDecimal)value$; break;
    case 16: numberOfRepayments = (java.lang.Integer)value$; break;
    case 17: minNumberOfRepayments = (java.lang.Integer)value$; break;
    case 18: maxNumberOfRepayments = (java.lang.Integer)value$; break;
    case 19: repaymentEvery = (java.lang.Integer)value$; break;
    case 20: repaymentFrequencyType = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 21: interestRatePerPeriod = (java.math.BigDecimal)value$; break;
    case 22: minInterestRatePerPeriod = (java.math.BigDecimal)value$; break;
    case 23: maxInterestRatePerPeriod = (java.math.BigDecimal)value$; break;
    case 24: interestRateFrequencyType = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 25: annualInterestRate = (java.math.BigDecimal)value$; break;
    case 26: isLinkedToFloatingInterestRates = (java.lang.Boolean)value$; break;
    case 27: floatingRateId = (java.lang.Long)value$; break;
    case 28: floatingRateName = value$ != null ? value$.toString() : null; break;
    case 29: interestRateDifferential = (java.math.BigDecimal)value$; break;
    case 30: minDifferentialLendingRate = (java.math.BigDecimal)value$; break;
    case 31: defaultDifferentialLendingRate = (java.math.BigDecimal)value$; break;
    case 32: maxDifferentialLendingRate = (java.math.BigDecimal)value$; break;
    case 33: isFloatingInterestRateCalculationAllowed = (java.lang.Boolean)value$; break;
    case 34: allowVariableInstallments = (java.lang.Boolean)value$; break;
    case 35: minimumGap = (java.lang.Integer)value$; break;
    case 36: maximumGap = (java.lang.Integer)value$; break;
    case 37: amortizationType = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 38: interestType = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 39: interestCalculationPeriodType = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 40: allowPartialPeriodInterestCalculation = (java.lang.Boolean)value$; break;
    case 41: inArrearsTolerance = (java.math.BigDecimal)value$; break;
    case 42: transactionProcessingStrategyCode = value$ != null ? value$.toString() : null; break;
    case 43: transactionProcessingStrategyName = value$ != null ? value$.toString() : null; break;
    case 44: graceOnPrincipalPayment = (java.lang.Integer)value$; break;
    case 45: recurringMoratoriumOnPrincipalPeriods = (java.lang.Integer)value$; break;
    case 46: graceOnInterestPayment = (java.lang.Integer)value$; break;
    case 47: graceOnInterestCharged = (java.lang.Integer)value$; break;
    case 48: graceOnArrearsAgeing = (java.lang.Integer)value$; break;
    case 49: overdueDaysForNPA = (java.lang.Integer)value$; break;
    case 50: daysInMonthType = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 51: daysInYearType = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 52: isInterestRecalculationEnabled = (java.lang.Boolean)value$; break;
    case 53: interestRecalculationData = (org.apache.fineract.avro.loan.v1.LoanProductInterestRecalculationDataV1)value$; break;
    case 54: minimumDaysBetweenDisbursalAndFirstRepayment = (java.lang.Integer)value$; break;
    case 55: canDefineInstallmentAmount = (java.lang.Boolean)value$; break;
    case 56: installmentAmountInMultiplesOf = (java.lang.Integer)value$; break;
    case 57: charges = (java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1>)value$; break;
    case 58: principalVariationsForBorrowerCycle = (java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1>)value$; break;
    case 59: interestRateVariationsForBorrowerCycle = (java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1>)value$; break;
    case 60: numberOfRepaymentVariationsForBorrowerCycle = (java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1>)value$; break;
    case 61: isRatesEnabled = (java.lang.Boolean)value$; break;
    case 62: rates = (java.util.List<org.apache.fineract.avro.portfolio.v1.RateDataV1>)value$; break;
    case 63: multiDisburseLoan = (java.lang.Boolean)value$; break;
    case 64: maxTrancheCount = (java.lang.Integer)value$; break;
    case 65: outstandingLoanBalance = (java.math.BigDecimal)value$; break;
    case 66: disallowExpectedDisbursements = (java.lang.Boolean)value$; break;
    case 67: allowApprovedDisbursedAmountsOverApplied = (java.lang.Boolean)value$; break;
    case 68: overAppliedCalculationType = value$ != null ? value$.toString() : null; break;
    case 69: overAppliedNumber = (java.lang.Integer)value$; break;
    case 70: principalThresholdForLastInstallment = (java.math.BigDecimal)value$; break;
    case 71: holdGuaranteeFunds = (java.lang.Boolean)value$; break;
    case 72: productGuaranteeData = (org.apache.fineract.avro.loan.v1.LoanProductGuaranteeDataV1)value$; break;
    case 73: accountMovesOutOfNPAOnlyOnArrearsCompletion = (java.lang.Boolean)value$; break;
    case 74: syncExpectedWithDisbursementDate = (java.lang.Boolean)value$; break;
    case 75: isEqualAmortization = (java.lang.Boolean)value$; break;
    case 76: fixedPrincipalPercentagePerInstallment = (java.math.BigDecimal)value$; break;
    case 77: delinquencyBucket = (org.apache.fineract.avro.loan.v1.DelinquencyBucketDataV1)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'shortName' field.
   * @return The value of the 'shortName' field.
   */
  public java.lang.String getShortName() {
    return shortName;
  }


  /**
   * Sets the value of the 'shortName' field.
   * @param value the value to set.
   */
  public void setShortName(java.lang.String value) {
    this.shortName = value;
  }

  /**
   * Gets the value of the 'description' field.
   * @return The value of the 'description' field.
   */
  public java.lang.String getDescription() {
    return description;
  }


  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'fundId' field.
   * @return The value of the 'fundId' field.
   */
  public java.lang.Long getFundId() {
    return fundId;
  }


  /**
   * Sets the value of the 'fundId' field.
   * @param value the value to set.
   */
  public void setFundId(java.lang.Long value) {
    this.fundId = value;
  }

  /**
   * Gets the value of the 'fundName' field.
   * @return The value of the 'fundName' field.
   */
  public java.lang.String getFundName() {
    return fundName;
  }


  /**
   * Sets the value of the 'fundName' field.
   * @param value the value to set.
   */
  public void setFundName(java.lang.String value) {
    this.fundName = value;
  }

  /**
   * Gets the value of the 'includeInBorrowerCycle' field.
   * @return The value of the 'includeInBorrowerCycle' field.
   */
  public java.lang.Boolean getIncludeInBorrowerCycle() {
    return includeInBorrowerCycle;
  }


  /**
   * Sets the value of the 'includeInBorrowerCycle' field.
   * @param value the value to set.
   */
  public void setIncludeInBorrowerCycle(java.lang.Boolean value) {
    this.includeInBorrowerCycle = value;
  }

  /**
   * Gets the value of the 'useBorrowerCycle' field.
   * @return The value of the 'useBorrowerCycle' field.
   */
  public java.lang.Boolean getUseBorrowerCycle() {
    return useBorrowerCycle;
  }


  /**
   * Sets the value of the 'useBorrowerCycle' field.
   * @param value the value to set.
   */
  public void setUseBorrowerCycle(java.lang.Boolean value) {
    this.useBorrowerCycle = value;
  }

  /**
   * Gets the value of the 'startDate' field.
   * @return The value of the 'startDate' field.
   */
  public java.lang.String getStartDate() {
    return startDate;
  }


  /**
   * Sets the value of the 'startDate' field.
   * @param value the value to set.
   */
  public void setStartDate(java.lang.String value) {
    this.startDate = value;
  }

  /**
   * Gets the value of the 'closeDate' field.
   * @return The value of the 'closeDate' field.
   */
  public java.lang.String getCloseDate() {
    return closeDate;
  }


  /**
   * Sets the value of the 'closeDate' field.
   * @param value the value to set.
   */
  public void setCloseDate(java.lang.String value) {
    this.closeDate = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.String getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.String value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'externalId' field.
   * @return The value of the 'externalId' field.
   */
  public java.lang.String getExternalId() {
    return externalId;
  }


  /**
   * Sets the value of the 'externalId' field.
   * @param value the value to set.
   */
  public void setExternalId(java.lang.String value) {
    this.externalId = value;
  }

  /**
   * Gets the value of the 'currency' field.
   * @return The value of the 'currency' field.
   */
  public org.apache.fineract.avro.generic.v1.CurrencyDataV1 getCurrency() {
    return currency;
  }


  /**
   * Sets the value of the 'currency' field.
   * @param value the value to set.
   */
  public void setCurrency(org.apache.fineract.avro.generic.v1.CurrencyDataV1 value) {
    this.currency = value;
  }

  /**
   * Gets the value of the 'principal' field.
   * @return The value of the 'principal' field.
   */
  public java.math.BigDecimal getPrincipal() {
    return principal;
  }


  /**
   * Sets the value of the 'principal' field.
   * @param value the value to set.
   */
  public void setPrincipal(java.math.BigDecimal value) {
    this.principal = value;
  }

  /**
   * Gets the value of the 'minPrincipal' field.
   * @return The value of the 'minPrincipal' field.
   */
  public java.math.BigDecimal getMinPrincipal() {
    return minPrincipal;
  }


  /**
   * Sets the value of the 'minPrincipal' field.
   * @param value the value to set.
   */
  public void setMinPrincipal(java.math.BigDecimal value) {
    this.minPrincipal = value;
  }

  /**
   * Gets the value of the 'maxPrincipal' field.
   * @return The value of the 'maxPrincipal' field.
   */
  public java.math.BigDecimal getMaxPrincipal() {
    return maxPrincipal;
  }


  /**
   * Sets the value of the 'maxPrincipal' field.
   * @param value the value to set.
   */
  public void setMaxPrincipal(java.math.BigDecimal value) {
    this.maxPrincipal = value;
  }

  /**
   * Gets the value of the 'numberOfRepayments' field.
   * @return The value of the 'numberOfRepayments' field.
   */
  public java.lang.Integer getNumberOfRepayments() {
    return numberOfRepayments;
  }


  /**
   * Sets the value of the 'numberOfRepayments' field.
   * @param value the value to set.
   */
  public void setNumberOfRepayments(java.lang.Integer value) {
    this.numberOfRepayments = value;
  }

  /**
   * Gets the value of the 'minNumberOfRepayments' field.
   * @return The value of the 'minNumberOfRepayments' field.
   */
  public java.lang.Integer getMinNumberOfRepayments() {
    return minNumberOfRepayments;
  }


  /**
   * Sets the value of the 'minNumberOfRepayments' field.
   * @param value the value to set.
   */
  public void setMinNumberOfRepayments(java.lang.Integer value) {
    this.minNumberOfRepayments = value;
  }

  /**
   * Gets the value of the 'maxNumberOfRepayments' field.
   * @return The value of the 'maxNumberOfRepayments' field.
   */
  public java.lang.Integer getMaxNumberOfRepayments() {
    return maxNumberOfRepayments;
  }


  /**
   * Sets the value of the 'maxNumberOfRepayments' field.
   * @param value the value to set.
   */
  public void setMaxNumberOfRepayments(java.lang.Integer value) {
    this.maxNumberOfRepayments = value;
  }

  /**
   * Gets the value of the 'repaymentEvery' field.
   * @return The value of the 'repaymentEvery' field.
   */
  public java.lang.Integer getRepaymentEvery() {
    return repaymentEvery;
  }


  /**
   * Sets the value of the 'repaymentEvery' field.
   * @param value the value to set.
   */
  public void setRepaymentEvery(java.lang.Integer value) {
    this.repaymentEvery = value;
  }

  /**
   * Gets the value of the 'repaymentFrequencyType' field.
   * @return The value of the 'repaymentFrequencyType' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getRepaymentFrequencyType() {
    return repaymentFrequencyType;
  }


  /**
   * Sets the value of the 'repaymentFrequencyType' field.
   * @param value the value to set.
   */
  public void setRepaymentFrequencyType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.repaymentFrequencyType = value;
  }

  /**
   * Gets the value of the 'interestRatePerPeriod' field.
   * @return The value of the 'interestRatePerPeriod' field.
   */
  public java.math.BigDecimal getInterestRatePerPeriod() {
    return interestRatePerPeriod;
  }


  /**
   * Sets the value of the 'interestRatePerPeriod' field.
   * @param value the value to set.
   */
  public void setInterestRatePerPeriod(java.math.BigDecimal value) {
    this.interestRatePerPeriod = value;
  }

  /**
   * Gets the value of the 'minInterestRatePerPeriod' field.
   * @return The value of the 'minInterestRatePerPeriod' field.
   */
  public java.math.BigDecimal getMinInterestRatePerPeriod() {
    return minInterestRatePerPeriod;
  }


  /**
   * Sets the value of the 'minInterestRatePerPeriod' field.
   * @param value the value to set.
   */
  public void setMinInterestRatePerPeriod(java.math.BigDecimal value) {
    this.minInterestRatePerPeriod = value;
  }

  /**
   * Gets the value of the 'maxInterestRatePerPeriod' field.
   * @return The value of the 'maxInterestRatePerPeriod' field.
   */
  public java.math.BigDecimal getMaxInterestRatePerPeriod() {
    return maxInterestRatePerPeriod;
  }


  /**
   * Sets the value of the 'maxInterestRatePerPeriod' field.
   * @param value the value to set.
   */
  public void setMaxInterestRatePerPeriod(java.math.BigDecimal value) {
    this.maxInterestRatePerPeriod = value;
  }

  /**
   * Gets the value of the 'interestRateFrequencyType' field.
   * @return The value of the 'interestRateFrequencyType' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getInterestRateFrequencyType() {
    return interestRateFrequencyType;
  }


  /**
   * Sets the value of the 'interestRateFrequencyType' field.
   * @param value the value to set.
   */
  public void setInterestRateFrequencyType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.interestRateFrequencyType = value;
  }

  /**
   * Gets the value of the 'annualInterestRate' field.
   * @return The value of the 'annualInterestRate' field.
   */
  public java.math.BigDecimal getAnnualInterestRate() {
    return annualInterestRate;
  }


  /**
   * Sets the value of the 'annualInterestRate' field.
   * @param value the value to set.
   */
  public void setAnnualInterestRate(java.math.BigDecimal value) {
    this.annualInterestRate = value;
  }

  /**
   * Gets the value of the 'isLinkedToFloatingInterestRates' field.
   * @return The value of the 'isLinkedToFloatingInterestRates' field.
   */
  public java.lang.Boolean getIsLinkedToFloatingInterestRates() {
    return isLinkedToFloatingInterestRates;
  }


  /**
   * Sets the value of the 'isLinkedToFloatingInterestRates' field.
   * @param value the value to set.
   */
  public void setIsLinkedToFloatingInterestRates(java.lang.Boolean value) {
    this.isLinkedToFloatingInterestRates = value;
  }

  /**
   * Gets the value of the 'floatingRateId' field.
   * @return The value of the 'floatingRateId' field.
   */
  public java.lang.Long getFloatingRateId() {
    return floatingRateId;
  }


  /**
   * Sets the value of the 'floatingRateId' field.
   * @param value the value to set.
   */
  public void setFloatingRateId(java.lang.Long value) {
    this.floatingRateId = value;
  }

  /**
   * Gets the value of the 'floatingRateName' field.
   * @return The value of the 'floatingRateName' field.
   */
  public java.lang.String getFloatingRateName() {
    return floatingRateName;
  }


  /**
   * Sets the value of the 'floatingRateName' field.
   * @param value the value to set.
   */
  public void setFloatingRateName(java.lang.String value) {
    this.floatingRateName = value;
  }

  /**
   * Gets the value of the 'interestRateDifferential' field.
   * @return The value of the 'interestRateDifferential' field.
   */
  public java.math.BigDecimal getInterestRateDifferential() {
    return interestRateDifferential;
  }


  /**
   * Sets the value of the 'interestRateDifferential' field.
   * @param value the value to set.
   */
  public void setInterestRateDifferential(java.math.BigDecimal value) {
    this.interestRateDifferential = value;
  }

  /**
   * Gets the value of the 'minDifferentialLendingRate' field.
   * @return The value of the 'minDifferentialLendingRate' field.
   */
  public java.math.BigDecimal getMinDifferentialLendingRate() {
    return minDifferentialLendingRate;
  }


  /**
   * Sets the value of the 'minDifferentialLendingRate' field.
   * @param value the value to set.
   */
  public void setMinDifferentialLendingRate(java.math.BigDecimal value) {
    this.minDifferentialLendingRate = value;
  }

  /**
   * Gets the value of the 'defaultDifferentialLendingRate' field.
   * @return The value of the 'defaultDifferentialLendingRate' field.
   */
  public java.math.BigDecimal getDefaultDifferentialLendingRate() {
    return defaultDifferentialLendingRate;
  }


  /**
   * Sets the value of the 'defaultDifferentialLendingRate' field.
   * @param value the value to set.
   */
  public void setDefaultDifferentialLendingRate(java.math.BigDecimal value) {
    this.defaultDifferentialLendingRate = value;
  }

  /**
   * Gets the value of the 'maxDifferentialLendingRate' field.
   * @return The value of the 'maxDifferentialLendingRate' field.
   */
  public java.math.BigDecimal getMaxDifferentialLendingRate() {
    return maxDifferentialLendingRate;
  }


  /**
   * Sets the value of the 'maxDifferentialLendingRate' field.
   * @param value the value to set.
   */
  public void setMaxDifferentialLendingRate(java.math.BigDecimal value) {
    this.maxDifferentialLendingRate = value;
  }

  /**
   * Gets the value of the 'isFloatingInterestRateCalculationAllowed' field.
   * @return The value of the 'isFloatingInterestRateCalculationAllowed' field.
   */
  public java.lang.Boolean getIsFloatingInterestRateCalculationAllowed() {
    return isFloatingInterestRateCalculationAllowed;
  }


  /**
   * Sets the value of the 'isFloatingInterestRateCalculationAllowed' field.
   * @param value the value to set.
   */
  public void setIsFloatingInterestRateCalculationAllowed(java.lang.Boolean value) {
    this.isFloatingInterestRateCalculationAllowed = value;
  }

  /**
   * Gets the value of the 'allowVariableInstallments' field.
   * @return The value of the 'allowVariableInstallments' field.
   */
  public java.lang.Boolean getAllowVariableInstallments() {
    return allowVariableInstallments;
  }


  /**
   * Sets the value of the 'allowVariableInstallments' field.
   * @param value the value to set.
   */
  public void setAllowVariableInstallments(java.lang.Boolean value) {
    this.allowVariableInstallments = value;
  }

  /**
   * Gets the value of the 'minimumGap' field.
   * @return The value of the 'minimumGap' field.
   */
  public java.lang.Integer getMinimumGap() {
    return minimumGap;
  }


  /**
   * Sets the value of the 'minimumGap' field.
   * @param value the value to set.
   */
  public void setMinimumGap(java.lang.Integer value) {
    this.minimumGap = value;
  }

  /**
   * Gets the value of the 'maximumGap' field.
   * @return The value of the 'maximumGap' field.
   */
  public java.lang.Integer getMaximumGap() {
    return maximumGap;
  }


  /**
   * Sets the value of the 'maximumGap' field.
   * @param value the value to set.
   */
  public void setMaximumGap(java.lang.Integer value) {
    this.maximumGap = value;
  }

  /**
   * Gets the value of the 'amortizationType' field.
   * @return The value of the 'amortizationType' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getAmortizationType() {
    return amortizationType;
  }


  /**
   * Sets the value of the 'amortizationType' field.
   * @param value the value to set.
   */
  public void setAmortizationType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.amortizationType = value;
  }

  /**
   * Gets the value of the 'interestType' field.
   * @return The value of the 'interestType' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getInterestType() {
    return interestType;
  }


  /**
   * Sets the value of the 'interestType' field.
   * @param value the value to set.
   */
  public void setInterestType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.interestType = value;
  }

  /**
   * Gets the value of the 'interestCalculationPeriodType' field.
   * @return The value of the 'interestCalculationPeriodType' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getInterestCalculationPeriodType() {
    return interestCalculationPeriodType;
  }


  /**
   * Sets the value of the 'interestCalculationPeriodType' field.
   * @param value the value to set.
   */
  public void setInterestCalculationPeriodType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.interestCalculationPeriodType = value;
  }

  /**
   * Gets the value of the 'allowPartialPeriodInterestCalculation' field.
   * @return The value of the 'allowPartialPeriodInterestCalculation' field.
   */
  public java.lang.Boolean getAllowPartialPeriodInterestCalculation() {
    return allowPartialPeriodInterestCalculation;
  }


  /**
   * Sets the value of the 'allowPartialPeriodInterestCalculation' field.
   * @param value the value to set.
   */
  public void setAllowPartialPeriodInterestCalculation(java.lang.Boolean value) {
    this.allowPartialPeriodInterestCalculation = value;
  }

  /**
   * Gets the value of the 'inArrearsTolerance' field.
   * @return The value of the 'inArrearsTolerance' field.
   */
  public java.math.BigDecimal getInArrearsTolerance() {
    return inArrearsTolerance;
  }


  /**
   * Sets the value of the 'inArrearsTolerance' field.
   * @param value the value to set.
   */
  public void setInArrearsTolerance(java.math.BigDecimal value) {
    this.inArrearsTolerance = value;
  }

  /**
   * Gets the value of the 'transactionProcessingStrategyCode' field.
   * @return The value of the 'transactionProcessingStrategyCode' field.
   */
  public java.lang.String getTransactionProcessingStrategyCode() {
    return transactionProcessingStrategyCode;
  }


  /**
   * Sets the value of the 'transactionProcessingStrategyCode' field.
   * @param value the value to set.
   */
  public void setTransactionProcessingStrategyCode(java.lang.String value) {
    this.transactionProcessingStrategyCode = value;
  }

  /**
   * Gets the value of the 'transactionProcessingStrategyName' field.
   * @return The value of the 'transactionProcessingStrategyName' field.
   */
  public java.lang.String getTransactionProcessingStrategyName() {
    return transactionProcessingStrategyName;
  }


  /**
   * Sets the value of the 'transactionProcessingStrategyName' field.
   * @param value the value to set.
   */
  public void setTransactionProcessingStrategyName(java.lang.String value) {
    this.transactionProcessingStrategyName = value;
  }

  /**
   * Gets the value of the 'graceOnPrincipalPayment' field.
   * @return The value of the 'graceOnPrincipalPayment' field.
   */
  public java.lang.Integer getGraceOnPrincipalPayment() {
    return graceOnPrincipalPayment;
  }


  /**
   * Sets the value of the 'graceOnPrincipalPayment' field.
   * @param value the value to set.
   */
  public void setGraceOnPrincipalPayment(java.lang.Integer value) {
    this.graceOnPrincipalPayment = value;
  }

  /**
   * Gets the value of the 'recurringMoratoriumOnPrincipalPeriods' field.
   * @return The value of the 'recurringMoratoriumOnPrincipalPeriods' field.
   */
  public java.lang.Integer getRecurringMoratoriumOnPrincipalPeriods() {
    return recurringMoratoriumOnPrincipalPeriods;
  }


  /**
   * Sets the value of the 'recurringMoratoriumOnPrincipalPeriods' field.
   * @param value the value to set.
   */
  public void setRecurringMoratoriumOnPrincipalPeriods(java.lang.Integer value) {
    this.recurringMoratoriumOnPrincipalPeriods = value;
  }

  /**
   * Gets the value of the 'graceOnInterestPayment' field.
   * @return The value of the 'graceOnInterestPayment' field.
   */
  public java.lang.Integer getGraceOnInterestPayment() {
    return graceOnInterestPayment;
  }


  /**
   * Sets the value of the 'graceOnInterestPayment' field.
   * @param value the value to set.
   */
  public void setGraceOnInterestPayment(java.lang.Integer value) {
    this.graceOnInterestPayment = value;
  }

  /**
   * Gets the value of the 'graceOnInterestCharged' field.
   * @return The value of the 'graceOnInterestCharged' field.
   */
  public java.lang.Integer getGraceOnInterestCharged() {
    return graceOnInterestCharged;
  }


  /**
   * Sets the value of the 'graceOnInterestCharged' field.
   * @param value the value to set.
   */
  public void setGraceOnInterestCharged(java.lang.Integer value) {
    this.graceOnInterestCharged = value;
  }

  /**
   * Gets the value of the 'graceOnArrearsAgeing' field.
   * @return The value of the 'graceOnArrearsAgeing' field.
   */
  public java.lang.Integer getGraceOnArrearsAgeing() {
    return graceOnArrearsAgeing;
  }


  /**
   * Sets the value of the 'graceOnArrearsAgeing' field.
   * @param value the value to set.
   */
  public void setGraceOnArrearsAgeing(java.lang.Integer value) {
    this.graceOnArrearsAgeing = value;
  }

  /**
   * Gets the value of the 'overdueDaysForNPA' field.
   * @return The value of the 'overdueDaysForNPA' field.
   */
  public java.lang.Integer getOverdueDaysForNPA() {
    return overdueDaysForNPA;
  }


  /**
   * Sets the value of the 'overdueDaysForNPA' field.
   * @param value the value to set.
   */
  public void setOverdueDaysForNPA(java.lang.Integer value) {
    this.overdueDaysForNPA = value;
  }

  /**
   * Gets the value of the 'daysInMonthType' field.
   * @return The value of the 'daysInMonthType' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getDaysInMonthType() {
    return daysInMonthType;
  }


  /**
   * Sets the value of the 'daysInMonthType' field.
   * @param value the value to set.
   */
  public void setDaysInMonthType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.daysInMonthType = value;
  }

  /**
   * Gets the value of the 'daysInYearType' field.
   * @return The value of the 'daysInYearType' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getDaysInYearType() {
    return daysInYearType;
  }


  /**
   * Sets the value of the 'daysInYearType' field.
   * @param value the value to set.
   */
  public void setDaysInYearType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.daysInYearType = value;
  }

  /**
   * Gets the value of the 'isInterestRecalculationEnabled' field.
   * @return The value of the 'isInterestRecalculationEnabled' field.
   */
  public java.lang.Boolean getIsInterestRecalculationEnabled() {
    return isInterestRecalculationEnabled;
  }


  /**
   * Sets the value of the 'isInterestRecalculationEnabled' field.
   * @param value the value to set.
   */
  public void setIsInterestRecalculationEnabled(java.lang.Boolean value) {
    this.isInterestRecalculationEnabled = value;
  }

  /**
   * Gets the value of the 'interestRecalculationData' field.
   * @return The value of the 'interestRecalculationData' field.
   */
  public org.apache.fineract.avro.loan.v1.LoanProductInterestRecalculationDataV1 getInterestRecalculationData() {
    return interestRecalculationData;
  }


  /**
   * Sets the value of the 'interestRecalculationData' field.
   * @param value the value to set.
   */
  public void setInterestRecalculationData(org.apache.fineract.avro.loan.v1.LoanProductInterestRecalculationDataV1 value) {
    this.interestRecalculationData = value;
  }

  /**
   * Gets the value of the 'minimumDaysBetweenDisbursalAndFirstRepayment' field.
   * @return The value of the 'minimumDaysBetweenDisbursalAndFirstRepayment' field.
   */
  public java.lang.Integer getMinimumDaysBetweenDisbursalAndFirstRepayment() {
    return minimumDaysBetweenDisbursalAndFirstRepayment;
  }


  /**
   * Sets the value of the 'minimumDaysBetweenDisbursalAndFirstRepayment' field.
   * @param value the value to set.
   */
  public void setMinimumDaysBetweenDisbursalAndFirstRepayment(java.lang.Integer value) {
    this.minimumDaysBetweenDisbursalAndFirstRepayment = value;
  }

  /**
   * Gets the value of the 'canDefineInstallmentAmount' field.
   * @return The value of the 'canDefineInstallmentAmount' field.
   */
  public java.lang.Boolean getCanDefineInstallmentAmount() {
    return canDefineInstallmentAmount;
  }


  /**
   * Sets the value of the 'canDefineInstallmentAmount' field.
   * @param value the value to set.
   */
  public void setCanDefineInstallmentAmount(java.lang.Boolean value) {
    this.canDefineInstallmentAmount = value;
  }

  /**
   * Gets the value of the 'installmentAmountInMultiplesOf' field.
   * @return The value of the 'installmentAmountInMultiplesOf' field.
   */
  public java.lang.Integer getInstallmentAmountInMultiplesOf() {
    return installmentAmountInMultiplesOf;
  }


  /**
   * Sets the value of the 'installmentAmountInMultiplesOf' field.
   * @param value the value to set.
   */
  public void setInstallmentAmountInMultiplesOf(java.lang.Integer value) {
    this.installmentAmountInMultiplesOf = value;
  }

  /**
   * Gets the value of the 'charges' field.
   * @return The value of the 'charges' field.
   */
  public java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1> getCharges() {
    return charges;
  }


  /**
   * Sets the value of the 'charges' field.
   * @param value the value to set.
   */
  public void setCharges(java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1> value) {
    this.charges = value;
  }

  /**
   * Gets the value of the 'principalVariationsForBorrowerCycle' field.
   * @return The value of the 'principalVariationsForBorrowerCycle' field.
   */
  public java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1> getPrincipalVariationsForBorrowerCycle() {
    return principalVariationsForBorrowerCycle;
  }


  /**
   * Sets the value of the 'principalVariationsForBorrowerCycle' field.
   * @param value the value to set.
   */
  public void setPrincipalVariationsForBorrowerCycle(java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1> value) {
    this.principalVariationsForBorrowerCycle = value;
  }

  /**
   * Gets the value of the 'interestRateVariationsForBorrowerCycle' field.
   * @return The value of the 'interestRateVariationsForBorrowerCycle' field.
   */
  public java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1> getInterestRateVariationsForBorrowerCycle() {
    return interestRateVariationsForBorrowerCycle;
  }


  /**
   * Sets the value of the 'interestRateVariationsForBorrowerCycle' field.
   * @param value the value to set.
   */
  public void setInterestRateVariationsForBorrowerCycle(java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1> value) {
    this.interestRateVariationsForBorrowerCycle = value;
  }

  /**
   * Gets the value of the 'numberOfRepaymentVariationsForBorrowerCycle' field.
   * @return The value of the 'numberOfRepaymentVariationsForBorrowerCycle' field.
   */
  public java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1> getNumberOfRepaymentVariationsForBorrowerCycle() {
    return numberOfRepaymentVariationsForBorrowerCycle;
  }


  /**
   * Sets the value of the 'numberOfRepaymentVariationsForBorrowerCycle' field.
   * @param value the value to set.
   */
  public void setNumberOfRepaymentVariationsForBorrowerCycle(java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1> value) {
    this.numberOfRepaymentVariationsForBorrowerCycle = value;
  }

  /**
   * Gets the value of the 'isRatesEnabled' field.
   * @return The value of the 'isRatesEnabled' field.
   */
  public java.lang.Boolean getIsRatesEnabled() {
    return isRatesEnabled;
  }


  /**
   * Sets the value of the 'isRatesEnabled' field.
   * @param value the value to set.
   */
  public void setIsRatesEnabled(java.lang.Boolean value) {
    this.isRatesEnabled = value;
  }

  /**
   * Gets the value of the 'rates' field.
   * @return The value of the 'rates' field.
   */
  public java.util.List<org.apache.fineract.avro.portfolio.v1.RateDataV1> getRates() {
    return rates;
  }


  /**
   * Sets the value of the 'rates' field.
   * @param value the value to set.
   */
  public void setRates(java.util.List<org.apache.fineract.avro.portfolio.v1.RateDataV1> value) {
    this.rates = value;
  }

  /**
   * Gets the value of the 'multiDisburseLoan' field.
   * @return The value of the 'multiDisburseLoan' field.
   */
  public java.lang.Boolean getMultiDisburseLoan() {
    return multiDisburseLoan;
  }


  /**
   * Sets the value of the 'multiDisburseLoan' field.
   * @param value the value to set.
   */
  public void setMultiDisburseLoan(java.lang.Boolean value) {
    this.multiDisburseLoan = value;
  }

  /**
   * Gets the value of the 'maxTrancheCount' field.
   * @return The value of the 'maxTrancheCount' field.
   */
  public java.lang.Integer getMaxTrancheCount() {
    return maxTrancheCount;
  }


  /**
   * Sets the value of the 'maxTrancheCount' field.
   * @param value the value to set.
   */
  public void setMaxTrancheCount(java.lang.Integer value) {
    this.maxTrancheCount = value;
  }

  /**
   * Gets the value of the 'outstandingLoanBalance' field.
   * @return The value of the 'outstandingLoanBalance' field.
   */
  public java.math.BigDecimal getOutstandingLoanBalance() {
    return outstandingLoanBalance;
  }


  /**
   * Sets the value of the 'outstandingLoanBalance' field.
   * @param value the value to set.
   */
  public void setOutstandingLoanBalance(java.math.BigDecimal value) {
    this.outstandingLoanBalance = value;
  }

  /**
   * Gets the value of the 'disallowExpectedDisbursements' field.
   * @return The value of the 'disallowExpectedDisbursements' field.
   */
  public java.lang.Boolean getDisallowExpectedDisbursements() {
    return disallowExpectedDisbursements;
  }


  /**
   * Sets the value of the 'disallowExpectedDisbursements' field.
   * @param value the value to set.
   */
  public void setDisallowExpectedDisbursements(java.lang.Boolean value) {
    this.disallowExpectedDisbursements = value;
  }

  /**
   * Gets the value of the 'allowApprovedDisbursedAmountsOverApplied' field.
   * @return The value of the 'allowApprovedDisbursedAmountsOverApplied' field.
   */
  public java.lang.Boolean getAllowApprovedDisbursedAmountsOverApplied() {
    return allowApprovedDisbursedAmountsOverApplied;
  }


  /**
   * Sets the value of the 'allowApprovedDisbursedAmountsOverApplied' field.
   * @param value the value to set.
   */
  public void setAllowApprovedDisbursedAmountsOverApplied(java.lang.Boolean value) {
    this.allowApprovedDisbursedAmountsOverApplied = value;
  }

  /**
   * Gets the value of the 'overAppliedCalculationType' field.
   * @return The value of the 'overAppliedCalculationType' field.
   */
  public java.lang.String getOverAppliedCalculationType() {
    return overAppliedCalculationType;
  }


  /**
   * Sets the value of the 'overAppliedCalculationType' field.
   * @param value the value to set.
   */
  public void setOverAppliedCalculationType(java.lang.String value) {
    this.overAppliedCalculationType = value;
  }

  /**
   * Gets the value of the 'overAppliedNumber' field.
   * @return The value of the 'overAppliedNumber' field.
   */
  public java.lang.Integer getOverAppliedNumber() {
    return overAppliedNumber;
  }


  /**
   * Sets the value of the 'overAppliedNumber' field.
   * @param value the value to set.
   */
  public void setOverAppliedNumber(java.lang.Integer value) {
    this.overAppliedNumber = value;
  }

  /**
   * Gets the value of the 'principalThresholdForLastInstallment' field.
   * @return The value of the 'principalThresholdForLastInstallment' field.
   */
  public java.math.BigDecimal getPrincipalThresholdForLastInstallment() {
    return principalThresholdForLastInstallment;
  }


  /**
   * Sets the value of the 'principalThresholdForLastInstallment' field.
   * @param value the value to set.
   */
  public void setPrincipalThresholdForLastInstallment(java.math.BigDecimal value) {
    this.principalThresholdForLastInstallment = value;
  }

  /**
   * Gets the value of the 'holdGuaranteeFunds' field.
   * @return The value of the 'holdGuaranteeFunds' field.
   */
  public java.lang.Boolean getHoldGuaranteeFunds() {
    return holdGuaranteeFunds;
  }


  /**
   * Sets the value of the 'holdGuaranteeFunds' field.
   * @param value the value to set.
   */
  public void setHoldGuaranteeFunds(java.lang.Boolean value) {
    this.holdGuaranteeFunds = value;
  }

  /**
   * Gets the value of the 'productGuaranteeData' field.
   * @return The value of the 'productGuaranteeData' field.
   */
  public org.apache.fineract.avro.loan.v1.LoanProductGuaranteeDataV1 getProductGuaranteeData() {
    return productGuaranteeData;
  }


  /**
   * Sets the value of the 'productGuaranteeData' field.
   * @param value the value to set.
   */
  public void setProductGuaranteeData(org.apache.fineract.avro.loan.v1.LoanProductGuaranteeDataV1 value) {
    this.productGuaranteeData = value;
  }

  /**
   * Gets the value of the 'accountMovesOutOfNPAOnlyOnArrearsCompletion' field.
   * @return The value of the 'accountMovesOutOfNPAOnlyOnArrearsCompletion' field.
   */
  public java.lang.Boolean getAccountMovesOutOfNPAOnlyOnArrearsCompletion() {
    return accountMovesOutOfNPAOnlyOnArrearsCompletion;
  }


  /**
   * Sets the value of the 'accountMovesOutOfNPAOnlyOnArrearsCompletion' field.
   * @param value the value to set.
   */
  public void setAccountMovesOutOfNPAOnlyOnArrearsCompletion(java.lang.Boolean value) {
    this.accountMovesOutOfNPAOnlyOnArrearsCompletion = value;
  }

  /**
   * Gets the value of the 'syncExpectedWithDisbursementDate' field.
   * @return The value of the 'syncExpectedWithDisbursementDate' field.
   */
  public java.lang.Boolean getSyncExpectedWithDisbursementDate() {
    return syncExpectedWithDisbursementDate;
  }


  /**
   * Sets the value of the 'syncExpectedWithDisbursementDate' field.
   * @param value the value to set.
   */
  public void setSyncExpectedWithDisbursementDate(java.lang.Boolean value) {
    this.syncExpectedWithDisbursementDate = value;
  }

  /**
   * Gets the value of the 'isEqualAmortization' field.
   * @return The value of the 'isEqualAmortization' field.
   */
  public java.lang.Boolean getIsEqualAmortization() {
    return isEqualAmortization;
  }


  /**
   * Sets the value of the 'isEqualAmortization' field.
   * @param value the value to set.
   */
  public void setIsEqualAmortization(java.lang.Boolean value) {
    this.isEqualAmortization = value;
  }

  /**
   * Gets the value of the 'fixedPrincipalPercentagePerInstallment' field.
   * @return The value of the 'fixedPrincipalPercentagePerInstallment' field.
   */
  public java.math.BigDecimal getFixedPrincipalPercentagePerInstallment() {
    return fixedPrincipalPercentagePerInstallment;
  }


  /**
   * Sets the value of the 'fixedPrincipalPercentagePerInstallment' field.
   * @param value the value to set.
   */
  public void setFixedPrincipalPercentagePerInstallment(java.math.BigDecimal value) {
    this.fixedPrincipalPercentagePerInstallment = value;
  }

  /**
   * Gets the value of the 'delinquencyBucket' field.
   * @return The value of the 'delinquencyBucket' field.
   */
  public org.apache.fineract.avro.loan.v1.DelinquencyBucketDataV1 getDelinquencyBucket() {
    return delinquencyBucket;
  }


  /**
   * Sets the value of the 'delinquencyBucket' field.
   * @param value the value to set.
   */
  public void setDelinquencyBucket(org.apache.fineract.avro.loan.v1.DelinquencyBucketDataV1 value) {
    this.delinquencyBucket = value;
  }

  /**
   * Creates a new LoanProductDataV1 RecordBuilder.
   * @return A new LoanProductDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder newBuilder() {
    return new org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder();
  }

  /**
   * Creates a new LoanProductDataV1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LoanProductDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder newBuilder(org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder other) {
    if (other == null) {
      return new org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder(other);
    }
  }

  /**
   * Creates a new LoanProductDataV1 RecordBuilder by copying an existing LoanProductDataV1 instance.
   * @param other The existing instance to copy.
   * @return A new LoanProductDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder newBuilder(org.apache.fineract.avro.loan.v1.LoanProductDataV1 other) {
    if (other == null) {
      return new org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder(other);
    }
  }

  /**
   * RecordBuilder for LoanProductDataV1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LoanProductDataV1>
    implements org.apache.avro.data.RecordBuilder<LoanProductDataV1> {

    private java.lang.Long id;
    private java.lang.String name;
    private java.lang.String shortName;
    private java.lang.String description;
    private java.lang.Long fundId;
    private java.lang.String fundName;
    private java.lang.Boolean includeInBorrowerCycle;
    private java.lang.Boolean useBorrowerCycle;
    private java.lang.String startDate;
    private java.lang.String closeDate;
    private java.lang.String status;
    private java.lang.String externalId;
    private org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency;
    private org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder currencyBuilder;
    private java.math.BigDecimal principal;
    private java.math.BigDecimal minPrincipal;
    private java.math.BigDecimal maxPrincipal;
    private java.lang.Integer numberOfRepayments;
    private java.lang.Integer minNumberOfRepayments;
    private java.lang.Integer maxNumberOfRepayments;
    private java.lang.Integer repaymentEvery;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 repaymentFrequencyType;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder repaymentFrequencyTypeBuilder;
    private java.math.BigDecimal interestRatePerPeriod;
    private java.math.BigDecimal minInterestRatePerPeriod;
    private java.math.BigDecimal maxInterestRatePerPeriod;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 interestRateFrequencyType;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder interestRateFrequencyTypeBuilder;
    private java.math.BigDecimal annualInterestRate;
    private java.lang.Boolean isLinkedToFloatingInterestRates;
    private java.lang.Long floatingRateId;
    private java.lang.String floatingRateName;
    private java.math.BigDecimal interestRateDifferential;
    private java.math.BigDecimal minDifferentialLendingRate;
    private java.math.BigDecimal defaultDifferentialLendingRate;
    private java.math.BigDecimal maxDifferentialLendingRate;
    private java.lang.Boolean isFloatingInterestRateCalculationAllowed;
    private java.lang.Boolean allowVariableInstallments;
    private java.lang.Integer minimumGap;
    private java.lang.Integer maximumGap;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 amortizationType;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder amortizationTypeBuilder;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 interestType;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder interestTypeBuilder;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 interestCalculationPeriodType;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder interestCalculationPeriodTypeBuilder;
    private java.lang.Boolean allowPartialPeriodInterestCalculation;
    private java.math.BigDecimal inArrearsTolerance;
    private java.lang.String transactionProcessingStrategyCode;
    private java.lang.String transactionProcessingStrategyName;
    private java.lang.Integer graceOnPrincipalPayment;
    private java.lang.Integer recurringMoratoriumOnPrincipalPeriods;
    private java.lang.Integer graceOnInterestPayment;
    private java.lang.Integer graceOnInterestCharged;
    private java.lang.Integer graceOnArrearsAgeing;
    private java.lang.Integer overdueDaysForNPA;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 daysInMonthType;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder daysInMonthTypeBuilder;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 daysInYearType;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder daysInYearTypeBuilder;
    private java.lang.Boolean isInterestRecalculationEnabled;
    private org.apache.fineract.avro.loan.v1.LoanProductInterestRecalculationDataV1 interestRecalculationData;
    private org.apache.fineract.avro.loan.v1.LoanProductInterestRecalculationDataV1.Builder interestRecalculationDataBuilder;
    private java.lang.Integer minimumDaysBetweenDisbursalAndFirstRepayment;
    private java.lang.Boolean canDefineInstallmentAmount;
    private java.lang.Integer installmentAmountInMultiplesOf;
    private java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1> charges;
    private java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1> principalVariationsForBorrowerCycle;
    private java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1> interestRateVariationsForBorrowerCycle;
    private java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1> numberOfRepaymentVariationsForBorrowerCycle;
    private java.lang.Boolean isRatesEnabled;
    private java.util.List<org.apache.fineract.avro.portfolio.v1.RateDataV1> rates;
    private java.lang.Boolean multiDisburseLoan;
    private java.lang.Integer maxTrancheCount;
    private java.math.BigDecimal outstandingLoanBalance;
    private java.lang.Boolean disallowExpectedDisbursements;
    private java.lang.Boolean allowApprovedDisbursedAmountsOverApplied;
    private java.lang.String overAppliedCalculationType;
    private java.lang.Integer overAppliedNumber;
    private java.math.BigDecimal principalThresholdForLastInstallment;
    private java.lang.Boolean holdGuaranteeFunds;
    private org.apache.fineract.avro.loan.v1.LoanProductGuaranteeDataV1 productGuaranteeData;
    private org.apache.fineract.avro.loan.v1.LoanProductGuaranteeDataV1.Builder productGuaranteeDataBuilder;
    private java.lang.Boolean accountMovesOutOfNPAOnlyOnArrearsCompletion;
    private java.lang.Boolean syncExpectedWithDisbursementDate;
    private java.lang.Boolean isEqualAmortization;
    private java.math.BigDecimal fixedPrincipalPercentagePerInstallment;
    private org.apache.fineract.avro.loan.v1.DelinquencyBucketDataV1 delinquencyBucket;
    private org.apache.fineract.avro.loan.v1.DelinquencyBucketDataV1.Builder delinquencyBucketBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.shortName)) {
        this.shortName = data().deepCopy(fields()[2].schema(), other.shortName);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.description)) {
        this.description = data().deepCopy(fields()[3].schema(), other.description);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.fundId)) {
        this.fundId = data().deepCopy(fields()[4].schema(), other.fundId);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.fundName)) {
        this.fundName = data().deepCopy(fields()[5].schema(), other.fundName);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.includeInBorrowerCycle)) {
        this.includeInBorrowerCycle = data().deepCopy(fields()[6].schema(), other.includeInBorrowerCycle);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.useBorrowerCycle)) {
        this.useBorrowerCycle = data().deepCopy(fields()[7].schema(), other.useBorrowerCycle);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.startDate)) {
        this.startDate = data().deepCopy(fields()[8].schema(), other.startDate);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.closeDate)) {
        this.closeDate = data().deepCopy(fields()[9].schema(), other.closeDate);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.status)) {
        this.status = data().deepCopy(fields()[10].schema(), other.status);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.externalId)) {
        this.externalId = data().deepCopy(fields()[11].schema(), other.externalId);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.currency)) {
        this.currency = data().deepCopy(fields()[12].schema(), other.currency);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (other.hasCurrencyBuilder()) {
        this.currencyBuilder = org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder(other.getCurrencyBuilder());
      }
      if (isValidValue(fields()[13], other.principal)) {
        this.principal = data().deepCopy(fields()[13].schema(), other.principal);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.minPrincipal)) {
        this.minPrincipal = data().deepCopy(fields()[14].schema(), other.minPrincipal);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.maxPrincipal)) {
        this.maxPrincipal = data().deepCopy(fields()[15].schema(), other.maxPrincipal);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.numberOfRepayments)) {
        this.numberOfRepayments = data().deepCopy(fields()[16].schema(), other.numberOfRepayments);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.minNumberOfRepayments)) {
        this.minNumberOfRepayments = data().deepCopy(fields()[17].schema(), other.minNumberOfRepayments);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.maxNumberOfRepayments)) {
        this.maxNumberOfRepayments = data().deepCopy(fields()[18].schema(), other.maxNumberOfRepayments);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.repaymentEvery)) {
        this.repaymentEvery = data().deepCopy(fields()[19].schema(), other.repaymentEvery);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.repaymentFrequencyType)) {
        this.repaymentFrequencyType = data().deepCopy(fields()[20].schema(), other.repaymentFrequencyType);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (other.hasRepaymentFrequencyTypeBuilder()) {
        this.repaymentFrequencyTypeBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getRepaymentFrequencyTypeBuilder());
      }
      if (isValidValue(fields()[21], other.interestRatePerPeriod)) {
        this.interestRatePerPeriod = data().deepCopy(fields()[21].schema(), other.interestRatePerPeriod);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.minInterestRatePerPeriod)) {
        this.minInterestRatePerPeriod = data().deepCopy(fields()[22].schema(), other.minInterestRatePerPeriod);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.maxInterestRatePerPeriod)) {
        this.maxInterestRatePerPeriod = data().deepCopy(fields()[23].schema(), other.maxInterestRatePerPeriod);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.interestRateFrequencyType)) {
        this.interestRateFrequencyType = data().deepCopy(fields()[24].schema(), other.interestRateFrequencyType);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
      if (other.hasInterestRateFrequencyTypeBuilder()) {
        this.interestRateFrequencyTypeBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getInterestRateFrequencyTypeBuilder());
      }
      if (isValidValue(fields()[25], other.annualInterestRate)) {
        this.annualInterestRate = data().deepCopy(fields()[25].schema(), other.annualInterestRate);
        fieldSetFlags()[25] = other.fieldSetFlags()[25];
      }
      if (isValidValue(fields()[26], other.isLinkedToFloatingInterestRates)) {
        this.isLinkedToFloatingInterestRates = data().deepCopy(fields()[26].schema(), other.isLinkedToFloatingInterestRates);
        fieldSetFlags()[26] = other.fieldSetFlags()[26];
      }
      if (isValidValue(fields()[27], other.floatingRateId)) {
        this.floatingRateId = data().deepCopy(fields()[27].schema(), other.floatingRateId);
        fieldSetFlags()[27] = other.fieldSetFlags()[27];
      }
      if (isValidValue(fields()[28], other.floatingRateName)) {
        this.floatingRateName = data().deepCopy(fields()[28].schema(), other.floatingRateName);
        fieldSetFlags()[28] = other.fieldSetFlags()[28];
      }
      if (isValidValue(fields()[29], other.interestRateDifferential)) {
        this.interestRateDifferential = data().deepCopy(fields()[29].schema(), other.interestRateDifferential);
        fieldSetFlags()[29] = other.fieldSetFlags()[29];
      }
      if (isValidValue(fields()[30], other.minDifferentialLendingRate)) {
        this.minDifferentialLendingRate = data().deepCopy(fields()[30].schema(), other.minDifferentialLendingRate);
        fieldSetFlags()[30] = other.fieldSetFlags()[30];
      }
      if (isValidValue(fields()[31], other.defaultDifferentialLendingRate)) {
        this.defaultDifferentialLendingRate = data().deepCopy(fields()[31].schema(), other.defaultDifferentialLendingRate);
        fieldSetFlags()[31] = other.fieldSetFlags()[31];
      }
      if (isValidValue(fields()[32], other.maxDifferentialLendingRate)) {
        this.maxDifferentialLendingRate = data().deepCopy(fields()[32].schema(), other.maxDifferentialLendingRate);
        fieldSetFlags()[32] = other.fieldSetFlags()[32];
      }
      if (isValidValue(fields()[33], other.isFloatingInterestRateCalculationAllowed)) {
        this.isFloatingInterestRateCalculationAllowed = data().deepCopy(fields()[33].schema(), other.isFloatingInterestRateCalculationAllowed);
        fieldSetFlags()[33] = other.fieldSetFlags()[33];
      }
      if (isValidValue(fields()[34], other.allowVariableInstallments)) {
        this.allowVariableInstallments = data().deepCopy(fields()[34].schema(), other.allowVariableInstallments);
        fieldSetFlags()[34] = other.fieldSetFlags()[34];
      }
      if (isValidValue(fields()[35], other.minimumGap)) {
        this.minimumGap = data().deepCopy(fields()[35].schema(), other.minimumGap);
        fieldSetFlags()[35] = other.fieldSetFlags()[35];
      }
      if (isValidValue(fields()[36], other.maximumGap)) {
        this.maximumGap = data().deepCopy(fields()[36].schema(), other.maximumGap);
        fieldSetFlags()[36] = other.fieldSetFlags()[36];
      }
      if (isValidValue(fields()[37], other.amortizationType)) {
        this.amortizationType = data().deepCopy(fields()[37].schema(), other.amortizationType);
        fieldSetFlags()[37] = other.fieldSetFlags()[37];
      }
      if (other.hasAmortizationTypeBuilder()) {
        this.amortizationTypeBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getAmortizationTypeBuilder());
      }
      if (isValidValue(fields()[38], other.interestType)) {
        this.interestType = data().deepCopy(fields()[38].schema(), other.interestType);
        fieldSetFlags()[38] = other.fieldSetFlags()[38];
      }
      if (other.hasInterestTypeBuilder()) {
        this.interestTypeBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getInterestTypeBuilder());
      }
      if (isValidValue(fields()[39], other.interestCalculationPeriodType)) {
        this.interestCalculationPeriodType = data().deepCopy(fields()[39].schema(), other.interestCalculationPeriodType);
        fieldSetFlags()[39] = other.fieldSetFlags()[39];
      }
      if (other.hasInterestCalculationPeriodTypeBuilder()) {
        this.interestCalculationPeriodTypeBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getInterestCalculationPeriodTypeBuilder());
      }
      if (isValidValue(fields()[40], other.allowPartialPeriodInterestCalculation)) {
        this.allowPartialPeriodInterestCalculation = data().deepCopy(fields()[40].schema(), other.allowPartialPeriodInterestCalculation);
        fieldSetFlags()[40] = other.fieldSetFlags()[40];
      }
      if (isValidValue(fields()[41], other.inArrearsTolerance)) {
        this.inArrearsTolerance = data().deepCopy(fields()[41].schema(), other.inArrearsTolerance);
        fieldSetFlags()[41] = other.fieldSetFlags()[41];
      }
      if (isValidValue(fields()[42], other.transactionProcessingStrategyCode)) {
        this.transactionProcessingStrategyCode = data().deepCopy(fields()[42].schema(), other.transactionProcessingStrategyCode);
        fieldSetFlags()[42] = other.fieldSetFlags()[42];
      }
      if (isValidValue(fields()[43], other.transactionProcessingStrategyName)) {
        this.transactionProcessingStrategyName = data().deepCopy(fields()[43].schema(), other.transactionProcessingStrategyName);
        fieldSetFlags()[43] = other.fieldSetFlags()[43];
      }
      if (isValidValue(fields()[44], other.graceOnPrincipalPayment)) {
        this.graceOnPrincipalPayment = data().deepCopy(fields()[44].schema(), other.graceOnPrincipalPayment);
        fieldSetFlags()[44] = other.fieldSetFlags()[44];
      }
      if (isValidValue(fields()[45], other.recurringMoratoriumOnPrincipalPeriods)) {
        this.recurringMoratoriumOnPrincipalPeriods = data().deepCopy(fields()[45].schema(), other.recurringMoratoriumOnPrincipalPeriods);
        fieldSetFlags()[45] = other.fieldSetFlags()[45];
      }
      if (isValidValue(fields()[46], other.graceOnInterestPayment)) {
        this.graceOnInterestPayment = data().deepCopy(fields()[46].schema(), other.graceOnInterestPayment);
        fieldSetFlags()[46] = other.fieldSetFlags()[46];
      }
      if (isValidValue(fields()[47], other.graceOnInterestCharged)) {
        this.graceOnInterestCharged = data().deepCopy(fields()[47].schema(), other.graceOnInterestCharged);
        fieldSetFlags()[47] = other.fieldSetFlags()[47];
      }
      if (isValidValue(fields()[48], other.graceOnArrearsAgeing)) {
        this.graceOnArrearsAgeing = data().deepCopy(fields()[48].schema(), other.graceOnArrearsAgeing);
        fieldSetFlags()[48] = other.fieldSetFlags()[48];
      }
      if (isValidValue(fields()[49], other.overdueDaysForNPA)) {
        this.overdueDaysForNPA = data().deepCopy(fields()[49].schema(), other.overdueDaysForNPA);
        fieldSetFlags()[49] = other.fieldSetFlags()[49];
      }
      if (isValidValue(fields()[50], other.daysInMonthType)) {
        this.daysInMonthType = data().deepCopy(fields()[50].schema(), other.daysInMonthType);
        fieldSetFlags()[50] = other.fieldSetFlags()[50];
      }
      if (other.hasDaysInMonthTypeBuilder()) {
        this.daysInMonthTypeBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getDaysInMonthTypeBuilder());
      }
      if (isValidValue(fields()[51], other.daysInYearType)) {
        this.daysInYearType = data().deepCopy(fields()[51].schema(), other.daysInYearType);
        fieldSetFlags()[51] = other.fieldSetFlags()[51];
      }
      if (other.hasDaysInYearTypeBuilder()) {
        this.daysInYearTypeBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getDaysInYearTypeBuilder());
      }
      if (isValidValue(fields()[52], other.isInterestRecalculationEnabled)) {
        this.isInterestRecalculationEnabled = data().deepCopy(fields()[52].schema(), other.isInterestRecalculationEnabled);
        fieldSetFlags()[52] = other.fieldSetFlags()[52];
      }
      if (isValidValue(fields()[53], other.interestRecalculationData)) {
        this.interestRecalculationData = data().deepCopy(fields()[53].schema(), other.interestRecalculationData);
        fieldSetFlags()[53] = other.fieldSetFlags()[53];
      }
      if (other.hasInterestRecalculationDataBuilder()) {
        this.interestRecalculationDataBuilder = org.apache.fineract.avro.loan.v1.LoanProductInterestRecalculationDataV1.newBuilder(other.getInterestRecalculationDataBuilder());
      }
      if (isValidValue(fields()[54], other.minimumDaysBetweenDisbursalAndFirstRepayment)) {
        this.minimumDaysBetweenDisbursalAndFirstRepayment = data().deepCopy(fields()[54].schema(), other.minimumDaysBetweenDisbursalAndFirstRepayment);
        fieldSetFlags()[54] = other.fieldSetFlags()[54];
      }
      if (isValidValue(fields()[55], other.canDefineInstallmentAmount)) {
        this.canDefineInstallmentAmount = data().deepCopy(fields()[55].schema(), other.canDefineInstallmentAmount);
        fieldSetFlags()[55] = other.fieldSetFlags()[55];
      }
      if (isValidValue(fields()[56], other.installmentAmountInMultiplesOf)) {
        this.installmentAmountInMultiplesOf = data().deepCopy(fields()[56].schema(), other.installmentAmountInMultiplesOf);
        fieldSetFlags()[56] = other.fieldSetFlags()[56];
      }
      if (isValidValue(fields()[57], other.charges)) {
        this.charges = data().deepCopy(fields()[57].schema(), other.charges);
        fieldSetFlags()[57] = other.fieldSetFlags()[57];
      }
      if (isValidValue(fields()[58], other.principalVariationsForBorrowerCycle)) {
        this.principalVariationsForBorrowerCycle = data().deepCopy(fields()[58].schema(), other.principalVariationsForBorrowerCycle);
        fieldSetFlags()[58] = other.fieldSetFlags()[58];
      }
      if (isValidValue(fields()[59], other.interestRateVariationsForBorrowerCycle)) {
        this.interestRateVariationsForBorrowerCycle = data().deepCopy(fields()[59].schema(), other.interestRateVariationsForBorrowerCycle);
        fieldSetFlags()[59] = other.fieldSetFlags()[59];
      }
      if (isValidValue(fields()[60], other.numberOfRepaymentVariationsForBorrowerCycle)) {
        this.numberOfRepaymentVariationsForBorrowerCycle = data().deepCopy(fields()[60].schema(), other.numberOfRepaymentVariationsForBorrowerCycle);
        fieldSetFlags()[60] = other.fieldSetFlags()[60];
      }
      if (isValidValue(fields()[61], other.isRatesEnabled)) {
        this.isRatesEnabled = data().deepCopy(fields()[61].schema(), other.isRatesEnabled);
        fieldSetFlags()[61] = other.fieldSetFlags()[61];
      }
      if (isValidValue(fields()[62], other.rates)) {
        this.rates = data().deepCopy(fields()[62].schema(), other.rates);
        fieldSetFlags()[62] = other.fieldSetFlags()[62];
      }
      if (isValidValue(fields()[63], other.multiDisburseLoan)) {
        this.multiDisburseLoan = data().deepCopy(fields()[63].schema(), other.multiDisburseLoan);
        fieldSetFlags()[63] = other.fieldSetFlags()[63];
      }
      if (isValidValue(fields()[64], other.maxTrancheCount)) {
        this.maxTrancheCount = data().deepCopy(fields()[64].schema(), other.maxTrancheCount);
        fieldSetFlags()[64] = other.fieldSetFlags()[64];
      }
      if (isValidValue(fields()[65], other.outstandingLoanBalance)) {
        this.outstandingLoanBalance = data().deepCopy(fields()[65].schema(), other.outstandingLoanBalance);
        fieldSetFlags()[65] = other.fieldSetFlags()[65];
      }
      if (isValidValue(fields()[66], other.disallowExpectedDisbursements)) {
        this.disallowExpectedDisbursements = data().deepCopy(fields()[66].schema(), other.disallowExpectedDisbursements);
        fieldSetFlags()[66] = other.fieldSetFlags()[66];
      }
      if (isValidValue(fields()[67], other.allowApprovedDisbursedAmountsOverApplied)) {
        this.allowApprovedDisbursedAmountsOverApplied = data().deepCopy(fields()[67].schema(), other.allowApprovedDisbursedAmountsOverApplied);
        fieldSetFlags()[67] = other.fieldSetFlags()[67];
      }
      if (isValidValue(fields()[68], other.overAppliedCalculationType)) {
        this.overAppliedCalculationType = data().deepCopy(fields()[68].schema(), other.overAppliedCalculationType);
        fieldSetFlags()[68] = other.fieldSetFlags()[68];
      }
      if (isValidValue(fields()[69], other.overAppliedNumber)) {
        this.overAppliedNumber = data().deepCopy(fields()[69].schema(), other.overAppliedNumber);
        fieldSetFlags()[69] = other.fieldSetFlags()[69];
      }
      if (isValidValue(fields()[70], other.principalThresholdForLastInstallment)) {
        this.principalThresholdForLastInstallment = data().deepCopy(fields()[70].schema(), other.principalThresholdForLastInstallment);
        fieldSetFlags()[70] = other.fieldSetFlags()[70];
      }
      if (isValidValue(fields()[71], other.holdGuaranteeFunds)) {
        this.holdGuaranteeFunds = data().deepCopy(fields()[71].schema(), other.holdGuaranteeFunds);
        fieldSetFlags()[71] = other.fieldSetFlags()[71];
      }
      if (isValidValue(fields()[72], other.productGuaranteeData)) {
        this.productGuaranteeData = data().deepCopy(fields()[72].schema(), other.productGuaranteeData);
        fieldSetFlags()[72] = other.fieldSetFlags()[72];
      }
      if (other.hasProductGuaranteeDataBuilder()) {
        this.productGuaranteeDataBuilder = org.apache.fineract.avro.loan.v1.LoanProductGuaranteeDataV1.newBuilder(other.getProductGuaranteeDataBuilder());
      }
      if (isValidValue(fields()[73], other.accountMovesOutOfNPAOnlyOnArrearsCompletion)) {
        this.accountMovesOutOfNPAOnlyOnArrearsCompletion = data().deepCopy(fields()[73].schema(), other.accountMovesOutOfNPAOnlyOnArrearsCompletion);
        fieldSetFlags()[73] = other.fieldSetFlags()[73];
      }
      if (isValidValue(fields()[74], other.syncExpectedWithDisbursementDate)) {
        this.syncExpectedWithDisbursementDate = data().deepCopy(fields()[74].schema(), other.syncExpectedWithDisbursementDate);
        fieldSetFlags()[74] = other.fieldSetFlags()[74];
      }
      if (isValidValue(fields()[75], other.isEqualAmortization)) {
        this.isEqualAmortization = data().deepCopy(fields()[75].schema(), other.isEqualAmortization);
        fieldSetFlags()[75] = other.fieldSetFlags()[75];
      }
      if (isValidValue(fields()[76], other.fixedPrincipalPercentagePerInstallment)) {
        this.fixedPrincipalPercentagePerInstallment = data().deepCopy(fields()[76].schema(), other.fixedPrincipalPercentagePerInstallment);
        fieldSetFlags()[76] = other.fieldSetFlags()[76];
      }
      if (isValidValue(fields()[77], other.delinquencyBucket)) {
        this.delinquencyBucket = data().deepCopy(fields()[77].schema(), other.delinquencyBucket);
        fieldSetFlags()[77] = other.fieldSetFlags()[77];
      }
      if (other.hasDelinquencyBucketBuilder()) {
        this.delinquencyBucketBuilder = org.apache.fineract.avro.loan.v1.DelinquencyBucketDataV1.newBuilder(other.getDelinquencyBucketBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing LoanProductDataV1 instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.fineract.avro.loan.v1.LoanProductDataV1 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.shortName)) {
        this.shortName = data().deepCopy(fields()[2].schema(), other.shortName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.description)) {
        this.description = data().deepCopy(fields()[3].schema(), other.description);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.fundId)) {
        this.fundId = data().deepCopy(fields()[4].schema(), other.fundId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.fundName)) {
        this.fundName = data().deepCopy(fields()[5].schema(), other.fundName);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.includeInBorrowerCycle)) {
        this.includeInBorrowerCycle = data().deepCopy(fields()[6].schema(), other.includeInBorrowerCycle);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.useBorrowerCycle)) {
        this.useBorrowerCycle = data().deepCopy(fields()[7].schema(), other.useBorrowerCycle);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.startDate)) {
        this.startDate = data().deepCopy(fields()[8].schema(), other.startDate);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.closeDate)) {
        this.closeDate = data().deepCopy(fields()[9].schema(), other.closeDate);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.status)) {
        this.status = data().deepCopy(fields()[10].schema(), other.status);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.externalId)) {
        this.externalId = data().deepCopy(fields()[11].schema(), other.externalId);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.currency)) {
        this.currency = data().deepCopy(fields()[12].schema(), other.currency);
        fieldSetFlags()[12] = true;
      }
      this.currencyBuilder = null;
      if (isValidValue(fields()[13], other.principal)) {
        this.principal = data().deepCopy(fields()[13].schema(), other.principal);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.minPrincipal)) {
        this.minPrincipal = data().deepCopy(fields()[14].schema(), other.minPrincipal);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.maxPrincipal)) {
        this.maxPrincipal = data().deepCopy(fields()[15].schema(), other.maxPrincipal);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.numberOfRepayments)) {
        this.numberOfRepayments = data().deepCopy(fields()[16].schema(), other.numberOfRepayments);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.minNumberOfRepayments)) {
        this.minNumberOfRepayments = data().deepCopy(fields()[17].schema(), other.minNumberOfRepayments);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.maxNumberOfRepayments)) {
        this.maxNumberOfRepayments = data().deepCopy(fields()[18].schema(), other.maxNumberOfRepayments);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.repaymentEvery)) {
        this.repaymentEvery = data().deepCopy(fields()[19].schema(), other.repaymentEvery);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.repaymentFrequencyType)) {
        this.repaymentFrequencyType = data().deepCopy(fields()[20].schema(), other.repaymentFrequencyType);
        fieldSetFlags()[20] = true;
      }
      this.repaymentFrequencyTypeBuilder = null;
      if (isValidValue(fields()[21], other.interestRatePerPeriod)) {
        this.interestRatePerPeriod = data().deepCopy(fields()[21].schema(), other.interestRatePerPeriod);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.minInterestRatePerPeriod)) {
        this.minInterestRatePerPeriod = data().deepCopy(fields()[22].schema(), other.minInterestRatePerPeriod);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.maxInterestRatePerPeriod)) {
        this.maxInterestRatePerPeriod = data().deepCopy(fields()[23].schema(), other.maxInterestRatePerPeriod);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.interestRateFrequencyType)) {
        this.interestRateFrequencyType = data().deepCopy(fields()[24].schema(), other.interestRateFrequencyType);
        fieldSetFlags()[24] = true;
      }
      this.interestRateFrequencyTypeBuilder = null;
      if (isValidValue(fields()[25], other.annualInterestRate)) {
        this.annualInterestRate = data().deepCopy(fields()[25].schema(), other.annualInterestRate);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.isLinkedToFloatingInterestRates)) {
        this.isLinkedToFloatingInterestRates = data().deepCopy(fields()[26].schema(), other.isLinkedToFloatingInterestRates);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.floatingRateId)) {
        this.floatingRateId = data().deepCopy(fields()[27].schema(), other.floatingRateId);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.floatingRateName)) {
        this.floatingRateName = data().deepCopy(fields()[28].schema(), other.floatingRateName);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.interestRateDifferential)) {
        this.interestRateDifferential = data().deepCopy(fields()[29].schema(), other.interestRateDifferential);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.minDifferentialLendingRate)) {
        this.minDifferentialLendingRate = data().deepCopy(fields()[30].schema(), other.minDifferentialLendingRate);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.defaultDifferentialLendingRate)) {
        this.defaultDifferentialLendingRate = data().deepCopy(fields()[31].schema(), other.defaultDifferentialLendingRate);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.maxDifferentialLendingRate)) {
        this.maxDifferentialLendingRate = data().deepCopy(fields()[32].schema(), other.maxDifferentialLendingRate);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.isFloatingInterestRateCalculationAllowed)) {
        this.isFloatingInterestRateCalculationAllowed = data().deepCopy(fields()[33].schema(), other.isFloatingInterestRateCalculationAllowed);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.allowVariableInstallments)) {
        this.allowVariableInstallments = data().deepCopy(fields()[34].schema(), other.allowVariableInstallments);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.minimumGap)) {
        this.minimumGap = data().deepCopy(fields()[35].schema(), other.minimumGap);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.maximumGap)) {
        this.maximumGap = data().deepCopy(fields()[36].schema(), other.maximumGap);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.amortizationType)) {
        this.amortizationType = data().deepCopy(fields()[37].schema(), other.amortizationType);
        fieldSetFlags()[37] = true;
      }
      this.amortizationTypeBuilder = null;
      if (isValidValue(fields()[38], other.interestType)) {
        this.interestType = data().deepCopy(fields()[38].schema(), other.interestType);
        fieldSetFlags()[38] = true;
      }
      this.interestTypeBuilder = null;
      if (isValidValue(fields()[39], other.interestCalculationPeriodType)) {
        this.interestCalculationPeriodType = data().deepCopy(fields()[39].schema(), other.interestCalculationPeriodType);
        fieldSetFlags()[39] = true;
      }
      this.interestCalculationPeriodTypeBuilder = null;
      if (isValidValue(fields()[40], other.allowPartialPeriodInterestCalculation)) {
        this.allowPartialPeriodInterestCalculation = data().deepCopy(fields()[40].schema(), other.allowPartialPeriodInterestCalculation);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.inArrearsTolerance)) {
        this.inArrearsTolerance = data().deepCopy(fields()[41].schema(), other.inArrearsTolerance);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.transactionProcessingStrategyCode)) {
        this.transactionProcessingStrategyCode = data().deepCopy(fields()[42].schema(), other.transactionProcessingStrategyCode);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.transactionProcessingStrategyName)) {
        this.transactionProcessingStrategyName = data().deepCopy(fields()[43].schema(), other.transactionProcessingStrategyName);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.graceOnPrincipalPayment)) {
        this.graceOnPrincipalPayment = data().deepCopy(fields()[44].schema(), other.graceOnPrincipalPayment);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.recurringMoratoriumOnPrincipalPeriods)) {
        this.recurringMoratoriumOnPrincipalPeriods = data().deepCopy(fields()[45].schema(), other.recurringMoratoriumOnPrincipalPeriods);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.graceOnInterestPayment)) {
        this.graceOnInterestPayment = data().deepCopy(fields()[46].schema(), other.graceOnInterestPayment);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.graceOnInterestCharged)) {
        this.graceOnInterestCharged = data().deepCopy(fields()[47].schema(), other.graceOnInterestCharged);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.graceOnArrearsAgeing)) {
        this.graceOnArrearsAgeing = data().deepCopy(fields()[48].schema(), other.graceOnArrearsAgeing);
        fieldSetFlags()[48] = true;
      }
      if (isValidValue(fields()[49], other.overdueDaysForNPA)) {
        this.overdueDaysForNPA = data().deepCopy(fields()[49].schema(), other.overdueDaysForNPA);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.daysInMonthType)) {
        this.daysInMonthType = data().deepCopy(fields()[50].schema(), other.daysInMonthType);
        fieldSetFlags()[50] = true;
      }
      this.daysInMonthTypeBuilder = null;
      if (isValidValue(fields()[51], other.daysInYearType)) {
        this.daysInYearType = data().deepCopy(fields()[51].schema(), other.daysInYearType);
        fieldSetFlags()[51] = true;
      }
      this.daysInYearTypeBuilder = null;
      if (isValidValue(fields()[52], other.isInterestRecalculationEnabled)) {
        this.isInterestRecalculationEnabled = data().deepCopy(fields()[52].schema(), other.isInterestRecalculationEnabled);
        fieldSetFlags()[52] = true;
      }
      if (isValidValue(fields()[53], other.interestRecalculationData)) {
        this.interestRecalculationData = data().deepCopy(fields()[53].schema(), other.interestRecalculationData);
        fieldSetFlags()[53] = true;
      }
      this.interestRecalculationDataBuilder = null;
      if (isValidValue(fields()[54], other.minimumDaysBetweenDisbursalAndFirstRepayment)) {
        this.minimumDaysBetweenDisbursalAndFirstRepayment = data().deepCopy(fields()[54].schema(), other.minimumDaysBetweenDisbursalAndFirstRepayment);
        fieldSetFlags()[54] = true;
      }
      if (isValidValue(fields()[55], other.canDefineInstallmentAmount)) {
        this.canDefineInstallmentAmount = data().deepCopy(fields()[55].schema(), other.canDefineInstallmentAmount);
        fieldSetFlags()[55] = true;
      }
      if (isValidValue(fields()[56], other.installmentAmountInMultiplesOf)) {
        this.installmentAmountInMultiplesOf = data().deepCopy(fields()[56].schema(), other.installmentAmountInMultiplesOf);
        fieldSetFlags()[56] = true;
      }
      if (isValidValue(fields()[57], other.charges)) {
        this.charges = data().deepCopy(fields()[57].schema(), other.charges);
        fieldSetFlags()[57] = true;
      }
      if (isValidValue(fields()[58], other.principalVariationsForBorrowerCycle)) {
        this.principalVariationsForBorrowerCycle = data().deepCopy(fields()[58].schema(), other.principalVariationsForBorrowerCycle);
        fieldSetFlags()[58] = true;
      }
      if (isValidValue(fields()[59], other.interestRateVariationsForBorrowerCycle)) {
        this.interestRateVariationsForBorrowerCycle = data().deepCopy(fields()[59].schema(), other.interestRateVariationsForBorrowerCycle);
        fieldSetFlags()[59] = true;
      }
      if (isValidValue(fields()[60], other.numberOfRepaymentVariationsForBorrowerCycle)) {
        this.numberOfRepaymentVariationsForBorrowerCycle = data().deepCopy(fields()[60].schema(), other.numberOfRepaymentVariationsForBorrowerCycle);
        fieldSetFlags()[60] = true;
      }
      if (isValidValue(fields()[61], other.isRatesEnabled)) {
        this.isRatesEnabled = data().deepCopy(fields()[61].schema(), other.isRatesEnabled);
        fieldSetFlags()[61] = true;
      }
      if (isValidValue(fields()[62], other.rates)) {
        this.rates = data().deepCopy(fields()[62].schema(), other.rates);
        fieldSetFlags()[62] = true;
      }
      if (isValidValue(fields()[63], other.multiDisburseLoan)) {
        this.multiDisburseLoan = data().deepCopy(fields()[63].schema(), other.multiDisburseLoan);
        fieldSetFlags()[63] = true;
      }
      if (isValidValue(fields()[64], other.maxTrancheCount)) {
        this.maxTrancheCount = data().deepCopy(fields()[64].schema(), other.maxTrancheCount);
        fieldSetFlags()[64] = true;
      }
      if (isValidValue(fields()[65], other.outstandingLoanBalance)) {
        this.outstandingLoanBalance = data().deepCopy(fields()[65].schema(), other.outstandingLoanBalance);
        fieldSetFlags()[65] = true;
      }
      if (isValidValue(fields()[66], other.disallowExpectedDisbursements)) {
        this.disallowExpectedDisbursements = data().deepCopy(fields()[66].schema(), other.disallowExpectedDisbursements);
        fieldSetFlags()[66] = true;
      }
      if (isValidValue(fields()[67], other.allowApprovedDisbursedAmountsOverApplied)) {
        this.allowApprovedDisbursedAmountsOverApplied = data().deepCopy(fields()[67].schema(), other.allowApprovedDisbursedAmountsOverApplied);
        fieldSetFlags()[67] = true;
      }
      if (isValidValue(fields()[68], other.overAppliedCalculationType)) {
        this.overAppliedCalculationType = data().deepCopy(fields()[68].schema(), other.overAppliedCalculationType);
        fieldSetFlags()[68] = true;
      }
      if (isValidValue(fields()[69], other.overAppliedNumber)) {
        this.overAppliedNumber = data().deepCopy(fields()[69].schema(), other.overAppliedNumber);
        fieldSetFlags()[69] = true;
      }
      if (isValidValue(fields()[70], other.principalThresholdForLastInstallment)) {
        this.principalThresholdForLastInstallment = data().deepCopy(fields()[70].schema(), other.principalThresholdForLastInstallment);
        fieldSetFlags()[70] = true;
      }
      if (isValidValue(fields()[71], other.holdGuaranteeFunds)) {
        this.holdGuaranteeFunds = data().deepCopy(fields()[71].schema(), other.holdGuaranteeFunds);
        fieldSetFlags()[71] = true;
      }
      if (isValidValue(fields()[72], other.productGuaranteeData)) {
        this.productGuaranteeData = data().deepCopy(fields()[72].schema(), other.productGuaranteeData);
        fieldSetFlags()[72] = true;
      }
      this.productGuaranteeDataBuilder = null;
      if (isValidValue(fields()[73], other.accountMovesOutOfNPAOnlyOnArrearsCompletion)) {
        this.accountMovesOutOfNPAOnlyOnArrearsCompletion = data().deepCopy(fields()[73].schema(), other.accountMovesOutOfNPAOnlyOnArrearsCompletion);
        fieldSetFlags()[73] = true;
      }
      if (isValidValue(fields()[74], other.syncExpectedWithDisbursementDate)) {
        this.syncExpectedWithDisbursementDate = data().deepCopy(fields()[74].schema(), other.syncExpectedWithDisbursementDate);
        fieldSetFlags()[74] = true;
      }
      if (isValidValue(fields()[75], other.isEqualAmortization)) {
        this.isEqualAmortization = data().deepCopy(fields()[75].schema(), other.isEqualAmortization);
        fieldSetFlags()[75] = true;
      }
      if (isValidValue(fields()[76], other.fixedPrincipalPercentagePerInstallment)) {
        this.fixedPrincipalPercentagePerInstallment = data().deepCopy(fields()[76].schema(), other.fixedPrincipalPercentagePerInstallment);
        fieldSetFlags()[76] = true;
      }
      if (isValidValue(fields()[77], other.delinquencyBucket)) {
        this.delinquencyBucket = data().deepCopy(fields()[77].schema(), other.delinquencyBucket);
        fieldSetFlags()[77] = true;
      }
      this.delinquencyBucketBuilder = null;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setId(java.lang.Long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setName(java.lang.String value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'shortName' field.
      * @return The value.
      */
    public java.lang.String getShortName() {
      return shortName;
    }


    /**
      * Sets the value of the 'shortName' field.
      * @param value The value of 'shortName'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setShortName(java.lang.String value) {
      validate(fields()[2], value);
      this.shortName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'shortName' field has been set.
      * @return True if the 'shortName' field has been set, false otherwise.
      */
    public boolean hasShortName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'shortName' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearShortName() {
      shortName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public java.lang.String getDescription() {
      return description;
    }


    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setDescription(java.lang.String value) {
      validate(fields()[3], value);
      this.description = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearDescription() {
      description = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'fundId' field.
      * @return The value.
      */
    public java.lang.Long getFundId() {
      return fundId;
    }


    /**
      * Sets the value of the 'fundId' field.
      * @param value The value of 'fundId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setFundId(java.lang.Long value) {
      validate(fields()[4], value);
      this.fundId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'fundId' field has been set.
      * @return True if the 'fundId' field has been set, false otherwise.
      */
    public boolean hasFundId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'fundId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearFundId() {
      fundId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'fundName' field.
      * @return The value.
      */
    public java.lang.String getFundName() {
      return fundName;
    }


    /**
      * Sets the value of the 'fundName' field.
      * @param value The value of 'fundName'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setFundName(java.lang.String value) {
      validate(fields()[5], value);
      this.fundName = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'fundName' field has been set.
      * @return True if the 'fundName' field has been set, false otherwise.
      */
    public boolean hasFundName() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'fundName' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearFundName() {
      fundName = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'includeInBorrowerCycle' field.
      * @return The value.
      */
    public java.lang.Boolean getIncludeInBorrowerCycle() {
      return includeInBorrowerCycle;
    }


    /**
      * Sets the value of the 'includeInBorrowerCycle' field.
      * @param value The value of 'includeInBorrowerCycle'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setIncludeInBorrowerCycle(java.lang.Boolean value) {
      validate(fields()[6], value);
      this.includeInBorrowerCycle = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'includeInBorrowerCycle' field has been set.
      * @return True if the 'includeInBorrowerCycle' field has been set, false otherwise.
      */
    public boolean hasIncludeInBorrowerCycle() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'includeInBorrowerCycle' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearIncludeInBorrowerCycle() {
      includeInBorrowerCycle = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'useBorrowerCycle' field.
      * @return The value.
      */
    public java.lang.Boolean getUseBorrowerCycle() {
      return useBorrowerCycle;
    }


    /**
      * Sets the value of the 'useBorrowerCycle' field.
      * @param value The value of 'useBorrowerCycle'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setUseBorrowerCycle(java.lang.Boolean value) {
      validate(fields()[7], value);
      this.useBorrowerCycle = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'useBorrowerCycle' field has been set.
      * @return True if the 'useBorrowerCycle' field has been set, false otherwise.
      */
    public boolean hasUseBorrowerCycle() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'useBorrowerCycle' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearUseBorrowerCycle() {
      useBorrowerCycle = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'startDate' field.
      * @return The value.
      */
    public java.lang.String getStartDate() {
      return startDate;
    }


    /**
      * Sets the value of the 'startDate' field.
      * @param value The value of 'startDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setStartDate(java.lang.String value) {
      validate(fields()[8], value);
      this.startDate = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'startDate' field has been set.
      * @return True if the 'startDate' field has been set, false otherwise.
      */
    public boolean hasStartDate() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'startDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearStartDate() {
      startDate = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'closeDate' field.
      * @return The value.
      */
    public java.lang.String getCloseDate() {
      return closeDate;
    }


    /**
      * Sets the value of the 'closeDate' field.
      * @param value The value of 'closeDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setCloseDate(java.lang.String value) {
      validate(fields()[9], value);
      this.closeDate = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'closeDate' field has been set.
      * @return True if the 'closeDate' field has been set, false otherwise.
      */
    public boolean hasCloseDate() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'closeDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearCloseDate() {
      closeDate = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.String getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setStatus(java.lang.String value) {
      validate(fields()[10], value);
      this.status = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearStatus() {
      status = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'externalId' field.
      * @return The value.
      */
    public java.lang.String getExternalId() {
      return externalId;
    }


    /**
      * Sets the value of the 'externalId' field.
      * @param value The value of 'externalId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setExternalId(java.lang.String value) {
      validate(fields()[11], value);
      this.externalId = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'externalId' field has been set.
      * @return True if the 'externalId' field has been set, false otherwise.
      */
    public boolean hasExternalId() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'externalId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearExternalId() {
      externalId = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'currency' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.CurrencyDataV1 getCurrency() {
      return currency;
    }


    /**
      * Sets the value of the 'currency' field.
      * @param value The value of 'currency'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setCurrency(org.apache.fineract.avro.generic.v1.CurrencyDataV1 value) {
      validate(fields()[12], value);
      this.currencyBuilder = null;
      this.currency = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'currency' field has been set.
      * @return True if the 'currency' field has been set, false otherwise.
      */
    public boolean hasCurrency() {
      return fieldSetFlags()[12];
    }

    /**
     * Gets the Builder instance for the 'currency' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder getCurrencyBuilder() {
      if (currencyBuilder == null) {
        if (hasCurrency()) {
          setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder(currency));
        } else {
          setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder());
        }
      }
      return currencyBuilder;
    }

    /**
     * Sets the Builder instance for the 'currency' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder value) {
      clearCurrency();
      currencyBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'currency' field has an active Builder instance
     * @return True if the 'currency' field has an active Builder instance
     */
    public boolean hasCurrencyBuilder() {
      return currencyBuilder != null;
    }

    /**
      * Clears the value of the 'currency' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearCurrency() {
      currency = null;
      currencyBuilder = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'principal' field.
      * @return The value.
      */
    public java.math.BigDecimal getPrincipal() {
      return principal;
    }


    /**
      * Sets the value of the 'principal' field.
      * @param value The value of 'principal'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setPrincipal(java.math.BigDecimal value) {
      validate(fields()[13], value);
      this.principal = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'principal' field has been set.
      * @return True if the 'principal' field has been set, false otherwise.
      */
    public boolean hasPrincipal() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'principal' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearPrincipal() {
      principal = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'minPrincipal' field.
      * @return The value.
      */
    public java.math.BigDecimal getMinPrincipal() {
      return minPrincipal;
    }


    /**
      * Sets the value of the 'minPrincipal' field.
      * @param value The value of 'minPrincipal'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setMinPrincipal(java.math.BigDecimal value) {
      validate(fields()[14], value);
      this.minPrincipal = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'minPrincipal' field has been set.
      * @return True if the 'minPrincipal' field has been set, false otherwise.
      */
    public boolean hasMinPrincipal() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'minPrincipal' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearMinPrincipal() {
      minPrincipal = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'maxPrincipal' field.
      * @return The value.
      */
    public java.math.BigDecimal getMaxPrincipal() {
      return maxPrincipal;
    }


    /**
      * Sets the value of the 'maxPrincipal' field.
      * @param value The value of 'maxPrincipal'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setMaxPrincipal(java.math.BigDecimal value) {
      validate(fields()[15], value);
      this.maxPrincipal = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'maxPrincipal' field has been set.
      * @return True if the 'maxPrincipal' field has been set, false otherwise.
      */
    public boolean hasMaxPrincipal() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'maxPrincipal' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearMaxPrincipal() {
      maxPrincipal = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'numberOfRepayments' field.
      * @return The value.
      */
    public java.lang.Integer getNumberOfRepayments() {
      return numberOfRepayments;
    }


    /**
      * Sets the value of the 'numberOfRepayments' field.
      * @param value The value of 'numberOfRepayments'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setNumberOfRepayments(java.lang.Integer value) {
      validate(fields()[16], value);
      this.numberOfRepayments = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'numberOfRepayments' field has been set.
      * @return True if the 'numberOfRepayments' field has been set, false otherwise.
      */
    public boolean hasNumberOfRepayments() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'numberOfRepayments' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearNumberOfRepayments() {
      numberOfRepayments = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'minNumberOfRepayments' field.
      * @return The value.
      */
    public java.lang.Integer getMinNumberOfRepayments() {
      return minNumberOfRepayments;
    }


    /**
      * Sets the value of the 'minNumberOfRepayments' field.
      * @param value The value of 'minNumberOfRepayments'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setMinNumberOfRepayments(java.lang.Integer value) {
      validate(fields()[17], value);
      this.minNumberOfRepayments = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'minNumberOfRepayments' field has been set.
      * @return True if the 'minNumberOfRepayments' field has been set, false otherwise.
      */
    public boolean hasMinNumberOfRepayments() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'minNumberOfRepayments' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearMinNumberOfRepayments() {
      minNumberOfRepayments = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'maxNumberOfRepayments' field.
      * @return The value.
      */
    public java.lang.Integer getMaxNumberOfRepayments() {
      return maxNumberOfRepayments;
    }


    /**
      * Sets the value of the 'maxNumberOfRepayments' field.
      * @param value The value of 'maxNumberOfRepayments'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setMaxNumberOfRepayments(java.lang.Integer value) {
      validate(fields()[18], value);
      this.maxNumberOfRepayments = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'maxNumberOfRepayments' field has been set.
      * @return True if the 'maxNumberOfRepayments' field has been set, false otherwise.
      */
    public boolean hasMaxNumberOfRepayments() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'maxNumberOfRepayments' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearMaxNumberOfRepayments() {
      maxNumberOfRepayments = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'repaymentEvery' field.
      * @return The value.
      */
    public java.lang.Integer getRepaymentEvery() {
      return repaymentEvery;
    }


    /**
      * Sets the value of the 'repaymentEvery' field.
      * @param value The value of 'repaymentEvery'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setRepaymentEvery(java.lang.Integer value) {
      validate(fields()[19], value);
      this.repaymentEvery = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'repaymentEvery' field has been set.
      * @return True if the 'repaymentEvery' field has been set, false otherwise.
      */
    public boolean hasRepaymentEvery() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'repaymentEvery' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearRepaymentEvery() {
      repaymentEvery = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'repaymentFrequencyType' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getRepaymentFrequencyType() {
      return repaymentFrequencyType;
    }


    /**
      * Sets the value of the 'repaymentFrequencyType' field.
      * @param value The value of 'repaymentFrequencyType'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setRepaymentFrequencyType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[20], value);
      this.repaymentFrequencyTypeBuilder = null;
      this.repaymentFrequencyType = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'repaymentFrequencyType' field has been set.
      * @return True if the 'repaymentFrequencyType' field has been set, false otherwise.
      */
    public boolean hasRepaymentFrequencyType() {
      return fieldSetFlags()[20];
    }

    /**
     * Gets the Builder instance for the 'repaymentFrequencyType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getRepaymentFrequencyTypeBuilder() {
      if (repaymentFrequencyTypeBuilder == null) {
        if (hasRepaymentFrequencyType()) {
          setRepaymentFrequencyTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(repaymentFrequencyType));
        } else {
          setRepaymentFrequencyTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return repaymentFrequencyTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'repaymentFrequencyType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setRepaymentFrequencyTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearRepaymentFrequencyType();
      repaymentFrequencyTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'repaymentFrequencyType' field has an active Builder instance
     * @return True if the 'repaymentFrequencyType' field has an active Builder instance
     */
    public boolean hasRepaymentFrequencyTypeBuilder() {
      return repaymentFrequencyTypeBuilder != null;
    }

    /**
      * Clears the value of the 'repaymentFrequencyType' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearRepaymentFrequencyType() {
      repaymentFrequencyType = null;
      repaymentFrequencyTypeBuilder = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'interestRatePerPeriod' field.
      * @return The value.
      */
    public java.math.BigDecimal getInterestRatePerPeriod() {
      return interestRatePerPeriod;
    }


    /**
      * Sets the value of the 'interestRatePerPeriod' field.
      * @param value The value of 'interestRatePerPeriod'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setInterestRatePerPeriod(java.math.BigDecimal value) {
      validate(fields()[21], value);
      this.interestRatePerPeriod = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'interestRatePerPeriod' field has been set.
      * @return True if the 'interestRatePerPeriod' field has been set, false otherwise.
      */
    public boolean hasInterestRatePerPeriod() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'interestRatePerPeriod' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearInterestRatePerPeriod() {
      interestRatePerPeriod = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'minInterestRatePerPeriod' field.
      * @return The value.
      */
    public java.math.BigDecimal getMinInterestRatePerPeriod() {
      return minInterestRatePerPeriod;
    }


    /**
      * Sets the value of the 'minInterestRatePerPeriod' field.
      * @param value The value of 'minInterestRatePerPeriod'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setMinInterestRatePerPeriod(java.math.BigDecimal value) {
      validate(fields()[22], value);
      this.minInterestRatePerPeriod = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'minInterestRatePerPeriod' field has been set.
      * @return True if the 'minInterestRatePerPeriod' field has been set, false otherwise.
      */
    public boolean hasMinInterestRatePerPeriod() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'minInterestRatePerPeriod' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearMinInterestRatePerPeriod() {
      minInterestRatePerPeriod = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'maxInterestRatePerPeriod' field.
      * @return The value.
      */
    public java.math.BigDecimal getMaxInterestRatePerPeriod() {
      return maxInterestRatePerPeriod;
    }


    /**
      * Sets the value of the 'maxInterestRatePerPeriod' field.
      * @param value The value of 'maxInterestRatePerPeriod'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setMaxInterestRatePerPeriod(java.math.BigDecimal value) {
      validate(fields()[23], value);
      this.maxInterestRatePerPeriod = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'maxInterestRatePerPeriod' field has been set.
      * @return True if the 'maxInterestRatePerPeriod' field has been set, false otherwise.
      */
    public boolean hasMaxInterestRatePerPeriod() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'maxInterestRatePerPeriod' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearMaxInterestRatePerPeriod() {
      maxInterestRatePerPeriod = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'interestRateFrequencyType' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getInterestRateFrequencyType() {
      return interestRateFrequencyType;
    }


    /**
      * Sets the value of the 'interestRateFrequencyType' field.
      * @param value The value of 'interestRateFrequencyType'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setInterestRateFrequencyType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[24], value);
      this.interestRateFrequencyTypeBuilder = null;
      this.interestRateFrequencyType = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'interestRateFrequencyType' field has been set.
      * @return True if the 'interestRateFrequencyType' field has been set, false otherwise.
      */
    public boolean hasInterestRateFrequencyType() {
      return fieldSetFlags()[24];
    }

    /**
     * Gets the Builder instance for the 'interestRateFrequencyType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getInterestRateFrequencyTypeBuilder() {
      if (interestRateFrequencyTypeBuilder == null) {
        if (hasInterestRateFrequencyType()) {
          setInterestRateFrequencyTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(interestRateFrequencyType));
        } else {
          setInterestRateFrequencyTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return interestRateFrequencyTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'interestRateFrequencyType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setInterestRateFrequencyTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearInterestRateFrequencyType();
      interestRateFrequencyTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'interestRateFrequencyType' field has an active Builder instance
     * @return True if the 'interestRateFrequencyType' field has an active Builder instance
     */
    public boolean hasInterestRateFrequencyTypeBuilder() {
      return interestRateFrequencyTypeBuilder != null;
    }

    /**
      * Clears the value of the 'interestRateFrequencyType' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearInterestRateFrequencyType() {
      interestRateFrequencyType = null;
      interestRateFrequencyTypeBuilder = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'annualInterestRate' field.
      * @return The value.
      */
    public java.math.BigDecimal getAnnualInterestRate() {
      return annualInterestRate;
    }


    /**
      * Sets the value of the 'annualInterestRate' field.
      * @param value The value of 'annualInterestRate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setAnnualInterestRate(java.math.BigDecimal value) {
      validate(fields()[25], value);
      this.annualInterestRate = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'annualInterestRate' field has been set.
      * @return True if the 'annualInterestRate' field has been set, false otherwise.
      */
    public boolean hasAnnualInterestRate() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'annualInterestRate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearAnnualInterestRate() {
      annualInterestRate = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'isLinkedToFloatingInterestRates' field.
      * @return The value.
      */
    public java.lang.Boolean getIsLinkedToFloatingInterestRates() {
      return isLinkedToFloatingInterestRates;
    }


    /**
      * Sets the value of the 'isLinkedToFloatingInterestRates' field.
      * @param value The value of 'isLinkedToFloatingInterestRates'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setIsLinkedToFloatingInterestRates(java.lang.Boolean value) {
      validate(fields()[26], value);
      this.isLinkedToFloatingInterestRates = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'isLinkedToFloatingInterestRates' field has been set.
      * @return True if the 'isLinkedToFloatingInterestRates' field has been set, false otherwise.
      */
    public boolean hasIsLinkedToFloatingInterestRates() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'isLinkedToFloatingInterestRates' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearIsLinkedToFloatingInterestRates() {
      isLinkedToFloatingInterestRates = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'floatingRateId' field.
      * @return The value.
      */
    public java.lang.Long getFloatingRateId() {
      return floatingRateId;
    }


    /**
      * Sets the value of the 'floatingRateId' field.
      * @param value The value of 'floatingRateId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setFloatingRateId(java.lang.Long value) {
      validate(fields()[27], value);
      this.floatingRateId = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'floatingRateId' field has been set.
      * @return True if the 'floatingRateId' field has been set, false otherwise.
      */
    public boolean hasFloatingRateId() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'floatingRateId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearFloatingRateId() {
      floatingRateId = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'floatingRateName' field.
      * @return The value.
      */
    public java.lang.String getFloatingRateName() {
      return floatingRateName;
    }


    /**
      * Sets the value of the 'floatingRateName' field.
      * @param value The value of 'floatingRateName'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setFloatingRateName(java.lang.String value) {
      validate(fields()[28], value);
      this.floatingRateName = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'floatingRateName' field has been set.
      * @return True if the 'floatingRateName' field has been set, false otherwise.
      */
    public boolean hasFloatingRateName() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'floatingRateName' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearFloatingRateName() {
      floatingRateName = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'interestRateDifferential' field.
      * @return The value.
      */
    public java.math.BigDecimal getInterestRateDifferential() {
      return interestRateDifferential;
    }


    /**
      * Sets the value of the 'interestRateDifferential' field.
      * @param value The value of 'interestRateDifferential'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setInterestRateDifferential(java.math.BigDecimal value) {
      validate(fields()[29], value);
      this.interestRateDifferential = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'interestRateDifferential' field has been set.
      * @return True if the 'interestRateDifferential' field has been set, false otherwise.
      */
    public boolean hasInterestRateDifferential() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'interestRateDifferential' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearInterestRateDifferential() {
      interestRateDifferential = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'minDifferentialLendingRate' field.
      * @return The value.
      */
    public java.math.BigDecimal getMinDifferentialLendingRate() {
      return minDifferentialLendingRate;
    }


    /**
      * Sets the value of the 'minDifferentialLendingRate' field.
      * @param value The value of 'minDifferentialLendingRate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setMinDifferentialLendingRate(java.math.BigDecimal value) {
      validate(fields()[30], value);
      this.minDifferentialLendingRate = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'minDifferentialLendingRate' field has been set.
      * @return True if the 'minDifferentialLendingRate' field has been set, false otherwise.
      */
    public boolean hasMinDifferentialLendingRate() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'minDifferentialLendingRate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearMinDifferentialLendingRate() {
      minDifferentialLendingRate = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'defaultDifferentialLendingRate' field.
      * @return The value.
      */
    public java.math.BigDecimal getDefaultDifferentialLendingRate() {
      return defaultDifferentialLendingRate;
    }


    /**
      * Sets the value of the 'defaultDifferentialLendingRate' field.
      * @param value The value of 'defaultDifferentialLendingRate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setDefaultDifferentialLendingRate(java.math.BigDecimal value) {
      validate(fields()[31], value);
      this.defaultDifferentialLendingRate = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
      * Checks whether the 'defaultDifferentialLendingRate' field has been set.
      * @return True if the 'defaultDifferentialLendingRate' field has been set, false otherwise.
      */
    public boolean hasDefaultDifferentialLendingRate() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'defaultDifferentialLendingRate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearDefaultDifferentialLendingRate() {
      defaultDifferentialLendingRate = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'maxDifferentialLendingRate' field.
      * @return The value.
      */
    public java.math.BigDecimal getMaxDifferentialLendingRate() {
      return maxDifferentialLendingRate;
    }


    /**
      * Sets the value of the 'maxDifferentialLendingRate' field.
      * @param value The value of 'maxDifferentialLendingRate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setMaxDifferentialLendingRate(java.math.BigDecimal value) {
      validate(fields()[32], value);
      this.maxDifferentialLendingRate = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /**
      * Checks whether the 'maxDifferentialLendingRate' field has been set.
      * @return True if the 'maxDifferentialLendingRate' field has been set, false otherwise.
      */
    public boolean hasMaxDifferentialLendingRate() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'maxDifferentialLendingRate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearMaxDifferentialLendingRate() {
      maxDifferentialLendingRate = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /**
      * Gets the value of the 'isFloatingInterestRateCalculationAllowed' field.
      * @return The value.
      */
    public java.lang.Boolean getIsFloatingInterestRateCalculationAllowed() {
      return isFloatingInterestRateCalculationAllowed;
    }


    /**
      * Sets the value of the 'isFloatingInterestRateCalculationAllowed' field.
      * @param value The value of 'isFloatingInterestRateCalculationAllowed'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setIsFloatingInterestRateCalculationAllowed(java.lang.Boolean value) {
      validate(fields()[33], value);
      this.isFloatingInterestRateCalculationAllowed = value;
      fieldSetFlags()[33] = true;
      return this;
    }

    /**
      * Checks whether the 'isFloatingInterestRateCalculationAllowed' field has been set.
      * @return True if the 'isFloatingInterestRateCalculationAllowed' field has been set, false otherwise.
      */
    public boolean hasIsFloatingInterestRateCalculationAllowed() {
      return fieldSetFlags()[33];
    }


    /**
      * Clears the value of the 'isFloatingInterestRateCalculationAllowed' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearIsFloatingInterestRateCalculationAllowed() {
      isFloatingInterestRateCalculationAllowed = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /**
      * Gets the value of the 'allowVariableInstallments' field.
      * @return The value.
      */
    public java.lang.Boolean getAllowVariableInstallments() {
      return allowVariableInstallments;
    }


    /**
      * Sets the value of the 'allowVariableInstallments' field.
      * @param value The value of 'allowVariableInstallments'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setAllowVariableInstallments(java.lang.Boolean value) {
      validate(fields()[34], value);
      this.allowVariableInstallments = value;
      fieldSetFlags()[34] = true;
      return this;
    }

    /**
      * Checks whether the 'allowVariableInstallments' field has been set.
      * @return True if the 'allowVariableInstallments' field has been set, false otherwise.
      */
    public boolean hasAllowVariableInstallments() {
      return fieldSetFlags()[34];
    }


    /**
      * Clears the value of the 'allowVariableInstallments' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearAllowVariableInstallments() {
      allowVariableInstallments = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /**
      * Gets the value of the 'minimumGap' field.
      * @return The value.
      */
    public java.lang.Integer getMinimumGap() {
      return minimumGap;
    }


    /**
      * Sets the value of the 'minimumGap' field.
      * @param value The value of 'minimumGap'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setMinimumGap(java.lang.Integer value) {
      validate(fields()[35], value);
      this.minimumGap = value;
      fieldSetFlags()[35] = true;
      return this;
    }

    /**
      * Checks whether the 'minimumGap' field has been set.
      * @return True if the 'minimumGap' field has been set, false otherwise.
      */
    public boolean hasMinimumGap() {
      return fieldSetFlags()[35];
    }


    /**
      * Clears the value of the 'minimumGap' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearMinimumGap() {
      minimumGap = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /**
      * Gets the value of the 'maximumGap' field.
      * @return The value.
      */
    public java.lang.Integer getMaximumGap() {
      return maximumGap;
    }


    /**
      * Sets the value of the 'maximumGap' field.
      * @param value The value of 'maximumGap'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setMaximumGap(java.lang.Integer value) {
      validate(fields()[36], value);
      this.maximumGap = value;
      fieldSetFlags()[36] = true;
      return this;
    }

    /**
      * Checks whether the 'maximumGap' field has been set.
      * @return True if the 'maximumGap' field has been set, false otherwise.
      */
    public boolean hasMaximumGap() {
      return fieldSetFlags()[36];
    }


    /**
      * Clears the value of the 'maximumGap' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearMaximumGap() {
      maximumGap = null;
      fieldSetFlags()[36] = false;
      return this;
    }

    /**
      * Gets the value of the 'amortizationType' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getAmortizationType() {
      return amortizationType;
    }


    /**
      * Sets the value of the 'amortizationType' field.
      * @param value The value of 'amortizationType'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setAmortizationType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[37], value);
      this.amortizationTypeBuilder = null;
      this.amortizationType = value;
      fieldSetFlags()[37] = true;
      return this;
    }

    /**
      * Checks whether the 'amortizationType' field has been set.
      * @return True if the 'amortizationType' field has been set, false otherwise.
      */
    public boolean hasAmortizationType() {
      return fieldSetFlags()[37];
    }

    /**
     * Gets the Builder instance for the 'amortizationType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getAmortizationTypeBuilder() {
      if (amortizationTypeBuilder == null) {
        if (hasAmortizationType()) {
          setAmortizationTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(amortizationType));
        } else {
          setAmortizationTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return amortizationTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'amortizationType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setAmortizationTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearAmortizationType();
      amortizationTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'amortizationType' field has an active Builder instance
     * @return True if the 'amortizationType' field has an active Builder instance
     */
    public boolean hasAmortizationTypeBuilder() {
      return amortizationTypeBuilder != null;
    }

    /**
      * Clears the value of the 'amortizationType' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearAmortizationType() {
      amortizationType = null;
      amortizationTypeBuilder = null;
      fieldSetFlags()[37] = false;
      return this;
    }

    /**
      * Gets the value of the 'interestType' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getInterestType() {
      return interestType;
    }


    /**
      * Sets the value of the 'interestType' field.
      * @param value The value of 'interestType'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setInterestType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[38], value);
      this.interestTypeBuilder = null;
      this.interestType = value;
      fieldSetFlags()[38] = true;
      return this;
    }

    /**
      * Checks whether the 'interestType' field has been set.
      * @return True if the 'interestType' field has been set, false otherwise.
      */
    public boolean hasInterestType() {
      return fieldSetFlags()[38];
    }

    /**
     * Gets the Builder instance for the 'interestType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getInterestTypeBuilder() {
      if (interestTypeBuilder == null) {
        if (hasInterestType()) {
          setInterestTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(interestType));
        } else {
          setInterestTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return interestTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'interestType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setInterestTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearInterestType();
      interestTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'interestType' field has an active Builder instance
     * @return True if the 'interestType' field has an active Builder instance
     */
    public boolean hasInterestTypeBuilder() {
      return interestTypeBuilder != null;
    }

    /**
      * Clears the value of the 'interestType' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearInterestType() {
      interestType = null;
      interestTypeBuilder = null;
      fieldSetFlags()[38] = false;
      return this;
    }

    /**
      * Gets the value of the 'interestCalculationPeriodType' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getInterestCalculationPeriodType() {
      return interestCalculationPeriodType;
    }


    /**
      * Sets the value of the 'interestCalculationPeriodType' field.
      * @param value The value of 'interestCalculationPeriodType'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setInterestCalculationPeriodType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[39], value);
      this.interestCalculationPeriodTypeBuilder = null;
      this.interestCalculationPeriodType = value;
      fieldSetFlags()[39] = true;
      return this;
    }

    /**
      * Checks whether the 'interestCalculationPeriodType' field has been set.
      * @return True if the 'interestCalculationPeriodType' field has been set, false otherwise.
      */
    public boolean hasInterestCalculationPeriodType() {
      return fieldSetFlags()[39];
    }

    /**
     * Gets the Builder instance for the 'interestCalculationPeriodType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getInterestCalculationPeriodTypeBuilder() {
      if (interestCalculationPeriodTypeBuilder == null) {
        if (hasInterestCalculationPeriodType()) {
          setInterestCalculationPeriodTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(interestCalculationPeriodType));
        } else {
          setInterestCalculationPeriodTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return interestCalculationPeriodTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'interestCalculationPeriodType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setInterestCalculationPeriodTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearInterestCalculationPeriodType();
      interestCalculationPeriodTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'interestCalculationPeriodType' field has an active Builder instance
     * @return True if the 'interestCalculationPeriodType' field has an active Builder instance
     */
    public boolean hasInterestCalculationPeriodTypeBuilder() {
      return interestCalculationPeriodTypeBuilder != null;
    }

    /**
      * Clears the value of the 'interestCalculationPeriodType' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearInterestCalculationPeriodType() {
      interestCalculationPeriodType = null;
      interestCalculationPeriodTypeBuilder = null;
      fieldSetFlags()[39] = false;
      return this;
    }

    /**
      * Gets the value of the 'allowPartialPeriodInterestCalculation' field.
      * @return The value.
      */
    public java.lang.Boolean getAllowPartialPeriodInterestCalculation() {
      return allowPartialPeriodInterestCalculation;
    }


    /**
      * Sets the value of the 'allowPartialPeriodInterestCalculation' field.
      * @param value The value of 'allowPartialPeriodInterestCalculation'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setAllowPartialPeriodInterestCalculation(java.lang.Boolean value) {
      validate(fields()[40], value);
      this.allowPartialPeriodInterestCalculation = value;
      fieldSetFlags()[40] = true;
      return this;
    }

    /**
      * Checks whether the 'allowPartialPeriodInterestCalculation' field has been set.
      * @return True if the 'allowPartialPeriodInterestCalculation' field has been set, false otherwise.
      */
    public boolean hasAllowPartialPeriodInterestCalculation() {
      return fieldSetFlags()[40];
    }


    /**
      * Clears the value of the 'allowPartialPeriodInterestCalculation' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearAllowPartialPeriodInterestCalculation() {
      allowPartialPeriodInterestCalculation = null;
      fieldSetFlags()[40] = false;
      return this;
    }

    /**
      * Gets the value of the 'inArrearsTolerance' field.
      * @return The value.
      */
    public java.math.BigDecimal getInArrearsTolerance() {
      return inArrearsTolerance;
    }


    /**
      * Sets the value of the 'inArrearsTolerance' field.
      * @param value The value of 'inArrearsTolerance'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setInArrearsTolerance(java.math.BigDecimal value) {
      validate(fields()[41], value);
      this.inArrearsTolerance = value;
      fieldSetFlags()[41] = true;
      return this;
    }

    /**
      * Checks whether the 'inArrearsTolerance' field has been set.
      * @return True if the 'inArrearsTolerance' field has been set, false otherwise.
      */
    public boolean hasInArrearsTolerance() {
      return fieldSetFlags()[41];
    }


    /**
      * Clears the value of the 'inArrearsTolerance' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearInArrearsTolerance() {
      inArrearsTolerance = null;
      fieldSetFlags()[41] = false;
      return this;
    }

    /**
      * Gets the value of the 'transactionProcessingStrategyCode' field.
      * @return The value.
      */
    public java.lang.String getTransactionProcessingStrategyCode() {
      return transactionProcessingStrategyCode;
    }


    /**
      * Sets the value of the 'transactionProcessingStrategyCode' field.
      * @param value The value of 'transactionProcessingStrategyCode'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setTransactionProcessingStrategyCode(java.lang.String value) {
      validate(fields()[42], value);
      this.transactionProcessingStrategyCode = value;
      fieldSetFlags()[42] = true;
      return this;
    }

    /**
      * Checks whether the 'transactionProcessingStrategyCode' field has been set.
      * @return True if the 'transactionProcessingStrategyCode' field has been set, false otherwise.
      */
    public boolean hasTransactionProcessingStrategyCode() {
      return fieldSetFlags()[42];
    }


    /**
      * Clears the value of the 'transactionProcessingStrategyCode' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearTransactionProcessingStrategyCode() {
      transactionProcessingStrategyCode = null;
      fieldSetFlags()[42] = false;
      return this;
    }

    /**
      * Gets the value of the 'transactionProcessingStrategyName' field.
      * @return The value.
      */
    public java.lang.String getTransactionProcessingStrategyName() {
      return transactionProcessingStrategyName;
    }


    /**
      * Sets the value of the 'transactionProcessingStrategyName' field.
      * @param value The value of 'transactionProcessingStrategyName'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setTransactionProcessingStrategyName(java.lang.String value) {
      validate(fields()[43], value);
      this.transactionProcessingStrategyName = value;
      fieldSetFlags()[43] = true;
      return this;
    }

    /**
      * Checks whether the 'transactionProcessingStrategyName' field has been set.
      * @return True if the 'transactionProcessingStrategyName' field has been set, false otherwise.
      */
    public boolean hasTransactionProcessingStrategyName() {
      return fieldSetFlags()[43];
    }


    /**
      * Clears the value of the 'transactionProcessingStrategyName' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearTransactionProcessingStrategyName() {
      transactionProcessingStrategyName = null;
      fieldSetFlags()[43] = false;
      return this;
    }

    /**
      * Gets the value of the 'graceOnPrincipalPayment' field.
      * @return The value.
      */
    public java.lang.Integer getGraceOnPrincipalPayment() {
      return graceOnPrincipalPayment;
    }


    /**
      * Sets the value of the 'graceOnPrincipalPayment' field.
      * @param value The value of 'graceOnPrincipalPayment'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setGraceOnPrincipalPayment(java.lang.Integer value) {
      validate(fields()[44], value);
      this.graceOnPrincipalPayment = value;
      fieldSetFlags()[44] = true;
      return this;
    }

    /**
      * Checks whether the 'graceOnPrincipalPayment' field has been set.
      * @return True if the 'graceOnPrincipalPayment' field has been set, false otherwise.
      */
    public boolean hasGraceOnPrincipalPayment() {
      return fieldSetFlags()[44];
    }


    /**
      * Clears the value of the 'graceOnPrincipalPayment' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearGraceOnPrincipalPayment() {
      graceOnPrincipalPayment = null;
      fieldSetFlags()[44] = false;
      return this;
    }

    /**
      * Gets the value of the 'recurringMoratoriumOnPrincipalPeriods' field.
      * @return The value.
      */
    public java.lang.Integer getRecurringMoratoriumOnPrincipalPeriods() {
      return recurringMoratoriumOnPrincipalPeriods;
    }


    /**
      * Sets the value of the 'recurringMoratoriumOnPrincipalPeriods' field.
      * @param value The value of 'recurringMoratoriumOnPrincipalPeriods'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setRecurringMoratoriumOnPrincipalPeriods(java.lang.Integer value) {
      validate(fields()[45], value);
      this.recurringMoratoriumOnPrincipalPeriods = value;
      fieldSetFlags()[45] = true;
      return this;
    }

    /**
      * Checks whether the 'recurringMoratoriumOnPrincipalPeriods' field has been set.
      * @return True if the 'recurringMoratoriumOnPrincipalPeriods' field has been set, false otherwise.
      */
    public boolean hasRecurringMoratoriumOnPrincipalPeriods() {
      return fieldSetFlags()[45];
    }


    /**
      * Clears the value of the 'recurringMoratoriumOnPrincipalPeriods' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearRecurringMoratoriumOnPrincipalPeriods() {
      recurringMoratoriumOnPrincipalPeriods = null;
      fieldSetFlags()[45] = false;
      return this;
    }

    /**
      * Gets the value of the 'graceOnInterestPayment' field.
      * @return The value.
      */
    public java.lang.Integer getGraceOnInterestPayment() {
      return graceOnInterestPayment;
    }


    /**
      * Sets the value of the 'graceOnInterestPayment' field.
      * @param value The value of 'graceOnInterestPayment'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setGraceOnInterestPayment(java.lang.Integer value) {
      validate(fields()[46], value);
      this.graceOnInterestPayment = value;
      fieldSetFlags()[46] = true;
      return this;
    }

    /**
      * Checks whether the 'graceOnInterestPayment' field has been set.
      * @return True if the 'graceOnInterestPayment' field has been set, false otherwise.
      */
    public boolean hasGraceOnInterestPayment() {
      return fieldSetFlags()[46];
    }


    /**
      * Clears the value of the 'graceOnInterestPayment' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearGraceOnInterestPayment() {
      graceOnInterestPayment = null;
      fieldSetFlags()[46] = false;
      return this;
    }

    /**
      * Gets the value of the 'graceOnInterestCharged' field.
      * @return The value.
      */
    public java.lang.Integer getGraceOnInterestCharged() {
      return graceOnInterestCharged;
    }


    /**
      * Sets the value of the 'graceOnInterestCharged' field.
      * @param value The value of 'graceOnInterestCharged'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setGraceOnInterestCharged(java.lang.Integer value) {
      validate(fields()[47], value);
      this.graceOnInterestCharged = value;
      fieldSetFlags()[47] = true;
      return this;
    }

    /**
      * Checks whether the 'graceOnInterestCharged' field has been set.
      * @return True if the 'graceOnInterestCharged' field has been set, false otherwise.
      */
    public boolean hasGraceOnInterestCharged() {
      return fieldSetFlags()[47];
    }


    /**
      * Clears the value of the 'graceOnInterestCharged' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearGraceOnInterestCharged() {
      graceOnInterestCharged = null;
      fieldSetFlags()[47] = false;
      return this;
    }

    /**
      * Gets the value of the 'graceOnArrearsAgeing' field.
      * @return The value.
      */
    public java.lang.Integer getGraceOnArrearsAgeing() {
      return graceOnArrearsAgeing;
    }


    /**
      * Sets the value of the 'graceOnArrearsAgeing' field.
      * @param value The value of 'graceOnArrearsAgeing'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setGraceOnArrearsAgeing(java.lang.Integer value) {
      validate(fields()[48], value);
      this.graceOnArrearsAgeing = value;
      fieldSetFlags()[48] = true;
      return this;
    }

    /**
      * Checks whether the 'graceOnArrearsAgeing' field has been set.
      * @return True if the 'graceOnArrearsAgeing' field has been set, false otherwise.
      */
    public boolean hasGraceOnArrearsAgeing() {
      return fieldSetFlags()[48];
    }


    /**
      * Clears the value of the 'graceOnArrearsAgeing' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearGraceOnArrearsAgeing() {
      graceOnArrearsAgeing = null;
      fieldSetFlags()[48] = false;
      return this;
    }

    /**
      * Gets the value of the 'overdueDaysForNPA' field.
      * @return The value.
      */
    public java.lang.Integer getOverdueDaysForNPA() {
      return overdueDaysForNPA;
    }


    /**
      * Sets the value of the 'overdueDaysForNPA' field.
      * @param value The value of 'overdueDaysForNPA'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setOverdueDaysForNPA(java.lang.Integer value) {
      validate(fields()[49], value);
      this.overdueDaysForNPA = value;
      fieldSetFlags()[49] = true;
      return this;
    }

    /**
      * Checks whether the 'overdueDaysForNPA' field has been set.
      * @return True if the 'overdueDaysForNPA' field has been set, false otherwise.
      */
    public boolean hasOverdueDaysForNPA() {
      return fieldSetFlags()[49];
    }


    /**
      * Clears the value of the 'overdueDaysForNPA' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearOverdueDaysForNPA() {
      overdueDaysForNPA = null;
      fieldSetFlags()[49] = false;
      return this;
    }

    /**
      * Gets the value of the 'daysInMonthType' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getDaysInMonthType() {
      return daysInMonthType;
    }


    /**
      * Sets the value of the 'daysInMonthType' field.
      * @param value The value of 'daysInMonthType'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setDaysInMonthType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[50], value);
      this.daysInMonthTypeBuilder = null;
      this.daysInMonthType = value;
      fieldSetFlags()[50] = true;
      return this;
    }

    /**
      * Checks whether the 'daysInMonthType' field has been set.
      * @return True if the 'daysInMonthType' field has been set, false otherwise.
      */
    public boolean hasDaysInMonthType() {
      return fieldSetFlags()[50];
    }

    /**
     * Gets the Builder instance for the 'daysInMonthType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getDaysInMonthTypeBuilder() {
      if (daysInMonthTypeBuilder == null) {
        if (hasDaysInMonthType()) {
          setDaysInMonthTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(daysInMonthType));
        } else {
          setDaysInMonthTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return daysInMonthTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'daysInMonthType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setDaysInMonthTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearDaysInMonthType();
      daysInMonthTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'daysInMonthType' field has an active Builder instance
     * @return True if the 'daysInMonthType' field has an active Builder instance
     */
    public boolean hasDaysInMonthTypeBuilder() {
      return daysInMonthTypeBuilder != null;
    }

    /**
      * Clears the value of the 'daysInMonthType' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearDaysInMonthType() {
      daysInMonthType = null;
      daysInMonthTypeBuilder = null;
      fieldSetFlags()[50] = false;
      return this;
    }

    /**
      * Gets the value of the 'daysInYearType' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getDaysInYearType() {
      return daysInYearType;
    }


    /**
      * Sets the value of the 'daysInYearType' field.
      * @param value The value of 'daysInYearType'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setDaysInYearType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[51], value);
      this.daysInYearTypeBuilder = null;
      this.daysInYearType = value;
      fieldSetFlags()[51] = true;
      return this;
    }

    /**
      * Checks whether the 'daysInYearType' field has been set.
      * @return True if the 'daysInYearType' field has been set, false otherwise.
      */
    public boolean hasDaysInYearType() {
      return fieldSetFlags()[51];
    }

    /**
     * Gets the Builder instance for the 'daysInYearType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getDaysInYearTypeBuilder() {
      if (daysInYearTypeBuilder == null) {
        if (hasDaysInYearType()) {
          setDaysInYearTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(daysInYearType));
        } else {
          setDaysInYearTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return daysInYearTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'daysInYearType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setDaysInYearTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearDaysInYearType();
      daysInYearTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'daysInYearType' field has an active Builder instance
     * @return True if the 'daysInYearType' field has an active Builder instance
     */
    public boolean hasDaysInYearTypeBuilder() {
      return daysInYearTypeBuilder != null;
    }

    /**
      * Clears the value of the 'daysInYearType' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearDaysInYearType() {
      daysInYearType = null;
      daysInYearTypeBuilder = null;
      fieldSetFlags()[51] = false;
      return this;
    }

    /**
      * Gets the value of the 'isInterestRecalculationEnabled' field.
      * @return The value.
      */
    public java.lang.Boolean getIsInterestRecalculationEnabled() {
      return isInterestRecalculationEnabled;
    }


    /**
      * Sets the value of the 'isInterestRecalculationEnabled' field.
      * @param value The value of 'isInterestRecalculationEnabled'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setIsInterestRecalculationEnabled(java.lang.Boolean value) {
      validate(fields()[52], value);
      this.isInterestRecalculationEnabled = value;
      fieldSetFlags()[52] = true;
      return this;
    }

    /**
      * Checks whether the 'isInterestRecalculationEnabled' field has been set.
      * @return True if the 'isInterestRecalculationEnabled' field has been set, false otherwise.
      */
    public boolean hasIsInterestRecalculationEnabled() {
      return fieldSetFlags()[52];
    }


    /**
      * Clears the value of the 'isInterestRecalculationEnabled' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearIsInterestRecalculationEnabled() {
      isInterestRecalculationEnabled = null;
      fieldSetFlags()[52] = false;
      return this;
    }

    /**
      * Gets the value of the 'interestRecalculationData' field.
      * @return The value.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductInterestRecalculationDataV1 getInterestRecalculationData() {
      return interestRecalculationData;
    }


    /**
      * Sets the value of the 'interestRecalculationData' field.
      * @param value The value of 'interestRecalculationData'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setInterestRecalculationData(org.apache.fineract.avro.loan.v1.LoanProductInterestRecalculationDataV1 value) {
      validate(fields()[53], value);
      this.interestRecalculationDataBuilder = null;
      this.interestRecalculationData = value;
      fieldSetFlags()[53] = true;
      return this;
    }

    /**
      * Checks whether the 'interestRecalculationData' field has been set.
      * @return True if the 'interestRecalculationData' field has been set, false otherwise.
      */
    public boolean hasInterestRecalculationData() {
      return fieldSetFlags()[53];
    }

    /**
     * Gets the Builder instance for the 'interestRecalculationData' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.loan.v1.LoanProductInterestRecalculationDataV1.Builder getInterestRecalculationDataBuilder() {
      if (interestRecalculationDataBuilder == null) {
        if (hasInterestRecalculationData()) {
          setInterestRecalculationDataBuilder(org.apache.fineract.avro.loan.v1.LoanProductInterestRecalculationDataV1.newBuilder(interestRecalculationData));
        } else {
          setInterestRecalculationDataBuilder(org.apache.fineract.avro.loan.v1.LoanProductInterestRecalculationDataV1.newBuilder());
        }
      }
      return interestRecalculationDataBuilder;
    }

    /**
     * Sets the Builder instance for the 'interestRecalculationData' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setInterestRecalculationDataBuilder(org.apache.fineract.avro.loan.v1.LoanProductInterestRecalculationDataV1.Builder value) {
      clearInterestRecalculationData();
      interestRecalculationDataBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'interestRecalculationData' field has an active Builder instance
     * @return True if the 'interestRecalculationData' field has an active Builder instance
     */
    public boolean hasInterestRecalculationDataBuilder() {
      return interestRecalculationDataBuilder != null;
    }

    /**
      * Clears the value of the 'interestRecalculationData' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearInterestRecalculationData() {
      interestRecalculationData = null;
      interestRecalculationDataBuilder = null;
      fieldSetFlags()[53] = false;
      return this;
    }

    /**
      * Gets the value of the 'minimumDaysBetweenDisbursalAndFirstRepayment' field.
      * @return The value.
      */
    public java.lang.Integer getMinimumDaysBetweenDisbursalAndFirstRepayment() {
      return minimumDaysBetweenDisbursalAndFirstRepayment;
    }


    /**
      * Sets the value of the 'minimumDaysBetweenDisbursalAndFirstRepayment' field.
      * @param value The value of 'minimumDaysBetweenDisbursalAndFirstRepayment'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setMinimumDaysBetweenDisbursalAndFirstRepayment(java.lang.Integer value) {
      validate(fields()[54], value);
      this.minimumDaysBetweenDisbursalAndFirstRepayment = value;
      fieldSetFlags()[54] = true;
      return this;
    }

    /**
      * Checks whether the 'minimumDaysBetweenDisbursalAndFirstRepayment' field has been set.
      * @return True if the 'minimumDaysBetweenDisbursalAndFirstRepayment' field has been set, false otherwise.
      */
    public boolean hasMinimumDaysBetweenDisbursalAndFirstRepayment() {
      return fieldSetFlags()[54];
    }


    /**
      * Clears the value of the 'minimumDaysBetweenDisbursalAndFirstRepayment' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearMinimumDaysBetweenDisbursalAndFirstRepayment() {
      minimumDaysBetweenDisbursalAndFirstRepayment = null;
      fieldSetFlags()[54] = false;
      return this;
    }

    /**
      * Gets the value of the 'canDefineInstallmentAmount' field.
      * @return The value.
      */
    public java.lang.Boolean getCanDefineInstallmentAmount() {
      return canDefineInstallmentAmount;
    }


    /**
      * Sets the value of the 'canDefineInstallmentAmount' field.
      * @param value The value of 'canDefineInstallmentAmount'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setCanDefineInstallmentAmount(java.lang.Boolean value) {
      validate(fields()[55], value);
      this.canDefineInstallmentAmount = value;
      fieldSetFlags()[55] = true;
      return this;
    }

    /**
      * Checks whether the 'canDefineInstallmentAmount' field has been set.
      * @return True if the 'canDefineInstallmentAmount' field has been set, false otherwise.
      */
    public boolean hasCanDefineInstallmentAmount() {
      return fieldSetFlags()[55];
    }


    /**
      * Clears the value of the 'canDefineInstallmentAmount' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearCanDefineInstallmentAmount() {
      canDefineInstallmentAmount = null;
      fieldSetFlags()[55] = false;
      return this;
    }

    /**
      * Gets the value of the 'installmentAmountInMultiplesOf' field.
      * @return The value.
      */
    public java.lang.Integer getInstallmentAmountInMultiplesOf() {
      return installmentAmountInMultiplesOf;
    }


    /**
      * Sets the value of the 'installmentAmountInMultiplesOf' field.
      * @param value The value of 'installmentAmountInMultiplesOf'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setInstallmentAmountInMultiplesOf(java.lang.Integer value) {
      validate(fields()[56], value);
      this.installmentAmountInMultiplesOf = value;
      fieldSetFlags()[56] = true;
      return this;
    }

    /**
      * Checks whether the 'installmentAmountInMultiplesOf' field has been set.
      * @return True if the 'installmentAmountInMultiplesOf' field has been set, false otherwise.
      */
    public boolean hasInstallmentAmountInMultiplesOf() {
      return fieldSetFlags()[56];
    }


    /**
      * Clears the value of the 'installmentAmountInMultiplesOf' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearInstallmentAmountInMultiplesOf() {
      installmentAmountInMultiplesOf = null;
      fieldSetFlags()[56] = false;
      return this;
    }

    /**
      * Gets the value of the 'charges' field.
      * @return The value.
      */
    public java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1> getCharges() {
      return charges;
    }


    /**
      * Sets the value of the 'charges' field.
      * @param value The value of 'charges'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setCharges(java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1> value) {
      validate(fields()[57], value);
      this.charges = value;
      fieldSetFlags()[57] = true;
      return this;
    }

    /**
      * Checks whether the 'charges' field has been set.
      * @return True if the 'charges' field has been set, false otherwise.
      */
    public boolean hasCharges() {
      return fieldSetFlags()[57];
    }


    /**
      * Clears the value of the 'charges' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearCharges() {
      charges = null;
      fieldSetFlags()[57] = false;
      return this;
    }

    /**
      * Gets the value of the 'principalVariationsForBorrowerCycle' field.
      * @return The value.
      */
    public java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1> getPrincipalVariationsForBorrowerCycle() {
      return principalVariationsForBorrowerCycle;
    }


    /**
      * Sets the value of the 'principalVariationsForBorrowerCycle' field.
      * @param value The value of 'principalVariationsForBorrowerCycle'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setPrincipalVariationsForBorrowerCycle(java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1> value) {
      validate(fields()[58], value);
      this.principalVariationsForBorrowerCycle = value;
      fieldSetFlags()[58] = true;
      return this;
    }

    /**
      * Checks whether the 'principalVariationsForBorrowerCycle' field has been set.
      * @return True if the 'principalVariationsForBorrowerCycle' field has been set, false otherwise.
      */
    public boolean hasPrincipalVariationsForBorrowerCycle() {
      return fieldSetFlags()[58];
    }


    /**
      * Clears the value of the 'principalVariationsForBorrowerCycle' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearPrincipalVariationsForBorrowerCycle() {
      principalVariationsForBorrowerCycle = null;
      fieldSetFlags()[58] = false;
      return this;
    }

    /**
      * Gets the value of the 'interestRateVariationsForBorrowerCycle' field.
      * @return The value.
      */
    public java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1> getInterestRateVariationsForBorrowerCycle() {
      return interestRateVariationsForBorrowerCycle;
    }


    /**
      * Sets the value of the 'interestRateVariationsForBorrowerCycle' field.
      * @param value The value of 'interestRateVariationsForBorrowerCycle'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setInterestRateVariationsForBorrowerCycle(java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1> value) {
      validate(fields()[59], value);
      this.interestRateVariationsForBorrowerCycle = value;
      fieldSetFlags()[59] = true;
      return this;
    }

    /**
      * Checks whether the 'interestRateVariationsForBorrowerCycle' field has been set.
      * @return True if the 'interestRateVariationsForBorrowerCycle' field has been set, false otherwise.
      */
    public boolean hasInterestRateVariationsForBorrowerCycle() {
      return fieldSetFlags()[59];
    }


    /**
      * Clears the value of the 'interestRateVariationsForBorrowerCycle' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearInterestRateVariationsForBorrowerCycle() {
      interestRateVariationsForBorrowerCycle = null;
      fieldSetFlags()[59] = false;
      return this;
    }

    /**
      * Gets the value of the 'numberOfRepaymentVariationsForBorrowerCycle' field.
      * @return The value.
      */
    public java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1> getNumberOfRepaymentVariationsForBorrowerCycle() {
      return numberOfRepaymentVariationsForBorrowerCycle;
    }


    /**
      * Sets the value of the 'numberOfRepaymentVariationsForBorrowerCycle' field.
      * @param value The value of 'numberOfRepaymentVariationsForBorrowerCycle'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setNumberOfRepaymentVariationsForBorrowerCycle(java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1> value) {
      validate(fields()[60], value);
      this.numberOfRepaymentVariationsForBorrowerCycle = value;
      fieldSetFlags()[60] = true;
      return this;
    }

    /**
      * Checks whether the 'numberOfRepaymentVariationsForBorrowerCycle' field has been set.
      * @return True if the 'numberOfRepaymentVariationsForBorrowerCycle' field has been set, false otherwise.
      */
    public boolean hasNumberOfRepaymentVariationsForBorrowerCycle() {
      return fieldSetFlags()[60];
    }


    /**
      * Clears the value of the 'numberOfRepaymentVariationsForBorrowerCycle' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearNumberOfRepaymentVariationsForBorrowerCycle() {
      numberOfRepaymentVariationsForBorrowerCycle = null;
      fieldSetFlags()[60] = false;
      return this;
    }

    /**
      * Gets the value of the 'isRatesEnabled' field.
      * @return The value.
      */
    public java.lang.Boolean getIsRatesEnabled() {
      return isRatesEnabled;
    }


    /**
      * Sets the value of the 'isRatesEnabled' field.
      * @param value The value of 'isRatesEnabled'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setIsRatesEnabled(java.lang.Boolean value) {
      validate(fields()[61], value);
      this.isRatesEnabled = value;
      fieldSetFlags()[61] = true;
      return this;
    }

    /**
      * Checks whether the 'isRatesEnabled' field has been set.
      * @return True if the 'isRatesEnabled' field has been set, false otherwise.
      */
    public boolean hasIsRatesEnabled() {
      return fieldSetFlags()[61];
    }


    /**
      * Clears the value of the 'isRatesEnabled' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearIsRatesEnabled() {
      isRatesEnabled = null;
      fieldSetFlags()[61] = false;
      return this;
    }

    /**
      * Gets the value of the 'rates' field.
      * @return The value.
      */
    public java.util.List<org.apache.fineract.avro.portfolio.v1.RateDataV1> getRates() {
      return rates;
    }


    /**
      * Sets the value of the 'rates' field.
      * @param value The value of 'rates'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setRates(java.util.List<org.apache.fineract.avro.portfolio.v1.RateDataV1> value) {
      validate(fields()[62], value);
      this.rates = value;
      fieldSetFlags()[62] = true;
      return this;
    }

    /**
      * Checks whether the 'rates' field has been set.
      * @return True if the 'rates' field has been set, false otherwise.
      */
    public boolean hasRates() {
      return fieldSetFlags()[62];
    }


    /**
      * Clears the value of the 'rates' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearRates() {
      rates = null;
      fieldSetFlags()[62] = false;
      return this;
    }

    /**
      * Gets the value of the 'multiDisburseLoan' field.
      * @return The value.
      */
    public java.lang.Boolean getMultiDisburseLoan() {
      return multiDisburseLoan;
    }


    /**
      * Sets the value of the 'multiDisburseLoan' field.
      * @param value The value of 'multiDisburseLoan'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setMultiDisburseLoan(java.lang.Boolean value) {
      validate(fields()[63], value);
      this.multiDisburseLoan = value;
      fieldSetFlags()[63] = true;
      return this;
    }

    /**
      * Checks whether the 'multiDisburseLoan' field has been set.
      * @return True if the 'multiDisburseLoan' field has been set, false otherwise.
      */
    public boolean hasMultiDisburseLoan() {
      return fieldSetFlags()[63];
    }


    /**
      * Clears the value of the 'multiDisburseLoan' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearMultiDisburseLoan() {
      multiDisburseLoan = null;
      fieldSetFlags()[63] = false;
      return this;
    }

    /**
      * Gets the value of the 'maxTrancheCount' field.
      * @return The value.
      */
    public java.lang.Integer getMaxTrancheCount() {
      return maxTrancheCount;
    }


    /**
      * Sets the value of the 'maxTrancheCount' field.
      * @param value The value of 'maxTrancheCount'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setMaxTrancheCount(java.lang.Integer value) {
      validate(fields()[64], value);
      this.maxTrancheCount = value;
      fieldSetFlags()[64] = true;
      return this;
    }

    /**
      * Checks whether the 'maxTrancheCount' field has been set.
      * @return True if the 'maxTrancheCount' field has been set, false otherwise.
      */
    public boolean hasMaxTrancheCount() {
      return fieldSetFlags()[64];
    }


    /**
      * Clears the value of the 'maxTrancheCount' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearMaxTrancheCount() {
      maxTrancheCount = null;
      fieldSetFlags()[64] = false;
      return this;
    }

    /**
      * Gets the value of the 'outstandingLoanBalance' field.
      * @return The value.
      */
    public java.math.BigDecimal getOutstandingLoanBalance() {
      return outstandingLoanBalance;
    }


    /**
      * Sets the value of the 'outstandingLoanBalance' field.
      * @param value The value of 'outstandingLoanBalance'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setOutstandingLoanBalance(java.math.BigDecimal value) {
      validate(fields()[65], value);
      this.outstandingLoanBalance = value;
      fieldSetFlags()[65] = true;
      return this;
    }

    /**
      * Checks whether the 'outstandingLoanBalance' field has been set.
      * @return True if the 'outstandingLoanBalance' field has been set, false otherwise.
      */
    public boolean hasOutstandingLoanBalance() {
      return fieldSetFlags()[65];
    }


    /**
      * Clears the value of the 'outstandingLoanBalance' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearOutstandingLoanBalance() {
      outstandingLoanBalance = null;
      fieldSetFlags()[65] = false;
      return this;
    }

    /**
      * Gets the value of the 'disallowExpectedDisbursements' field.
      * @return The value.
      */
    public java.lang.Boolean getDisallowExpectedDisbursements() {
      return disallowExpectedDisbursements;
    }


    /**
      * Sets the value of the 'disallowExpectedDisbursements' field.
      * @param value The value of 'disallowExpectedDisbursements'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setDisallowExpectedDisbursements(java.lang.Boolean value) {
      validate(fields()[66], value);
      this.disallowExpectedDisbursements = value;
      fieldSetFlags()[66] = true;
      return this;
    }

    /**
      * Checks whether the 'disallowExpectedDisbursements' field has been set.
      * @return True if the 'disallowExpectedDisbursements' field has been set, false otherwise.
      */
    public boolean hasDisallowExpectedDisbursements() {
      return fieldSetFlags()[66];
    }


    /**
      * Clears the value of the 'disallowExpectedDisbursements' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearDisallowExpectedDisbursements() {
      disallowExpectedDisbursements = null;
      fieldSetFlags()[66] = false;
      return this;
    }

    /**
      * Gets the value of the 'allowApprovedDisbursedAmountsOverApplied' field.
      * @return The value.
      */
    public java.lang.Boolean getAllowApprovedDisbursedAmountsOverApplied() {
      return allowApprovedDisbursedAmountsOverApplied;
    }


    /**
      * Sets the value of the 'allowApprovedDisbursedAmountsOverApplied' field.
      * @param value The value of 'allowApprovedDisbursedAmountsOverApplied'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setAllowApprovedDisbursedAmountsOverApplied(java.lang.Boolean value) {
      validate(fields()[67], value);
      this.allowApprovedDisbursedAmountsOverApplied = value;
      fieldSetFlags()[67] = true;
      return this;
    }

    /**
      * Checks whether the 'allowApprovedDisbursedAmountsOverApplied' field has been set.
      * @return True if the 'allowApprovedDisbursedAmountsOverApplied' field has been set, false otherwise.
      */
    public boolean hasAllowApprovedDisbursedAmountsOverApplied() {
      return fieldSetFlags()[67];
    }


    /**
      * Clears the value of the 'allowApprovedDisbursedAmountsOverApplied' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearAllowApprovedDisbursedAmountsOverApplied() {
      allowApprovedDisbursedAmountsOverApplied = null;
      fieldSetFlags()[67] = false;
      return this;
    }

    /**
      * Gets the value of the 'overAppliedCalculationType' field.
      * @return The value.
      */
    public java.lang.String getOverAppliedCalculationType() {
      return overAppliedCalculationType;
    }


    /**
      * Sets the value of the 'overAppliedCalculationType' field.
      * @param value The value of 'overAppliedCalculationType'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setOverAppliedCalculationType(java.lang.String value) {
      validate(fields()[68], value);
      this.overAppliedCalculationType = value;
      fieldSetFlags()[68] = true;
      return this;
    }

    /**
      * Checks whether the 'overAppliedCalculationType' field has been set.
      * @return True if the 'overAppliedCalculationType' field has been set, false otherwise.
      */
    public boolean hasOverAppliedCalculationType() {
      return fieldSetFlags()[68];
    }


    /**
      * Clears the value of the 'overAppliedCalculationType' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearOverAppliedCalculationType() {
      overAppliedCalculationType = null;
      fieldSetFlags()[68] = false;
      return this;
    }

    /**
      * Gets the value of the 'overAppliedNumber' field.
      * @return The value.
      */
    public java.lang.Integer getOverAppliedNumber() {
      return overAppliedNumber;
    }


    /**
      * Sets the value of the 'overAppliedNumber' field.
      * @param value The value of 'overAppliedNumber'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setOverAppliedNumber(java.lang.Integer value) {
      validate(fields()[69], value);
      this.overAppliedNumber = value;
      fieldSetFlags()[69] = true;
      return this;
    }

    /**
      * Checks whether the 'overAppliedNumber' field has been set.
      * @return True if the 'overAppliedNumber' field has been set, false otherwise.
      */
    public boolean hasOverAppliedNumber() {
      return fieldSetFlags()[69];
    }


    /**
      * Clears the value of the 'overAppliedNumber' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearOverAppliedNumber() {
      overAppliedNumber = null;
      fieldSetFlags()[69] = false;
      return this;
    }

    /**
      * Gets the value of the 'principalThresholdForLastInstallment' field.
      * @return The value.
      */
    public java.math.BigDecimal getPrincipalThresholdForLastInstallment() {
      return principalThresholdForLastInstallment;
    }


    /**
      * Sets the value of the 'principalThresholdForLastInstallment' field.
      * @param value The value of 'principalThresholdForLastInstallment'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setPrincipalThresholdForLastInstallment(java.math.BigDecimal value) {
      validate(fields()[70], value);
      this.principalThresholdForLastInstallment = value;
      fieldSetFlags()[70] = true;
      return this;
    }

    /**
      * Checks whether the 'principalThresholdForLastInstallment' field has been set.
      * @return True if the 'principalThresholdForLastInstallment' field has been set, false otherwise.
      */
    public boolean hasPrincipalThresholdForLastInstallment() {
      return fieldSetFlags()[70];
    }


    /**
      * Clears the value of the 'principalThresholdForLastInstallment' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearPrincipalThresholdForLastInstallment() {
      principalThresholdForLastInstallment = null;
      fieldSetFlags()[70] = false;
      return this;
    }

    /**
      * Gets the value of the 'holdGuaranteeFunds' field.
      * @return The value.
      */
    public java.lang.Boolean getHoldGuaranteeFunds() {
      return holdGuaranteeFunds;
    }


    /**
      * Sets the value of the 'holdGuaranteeFunds' field.
      * @param value The value of 'holdGuaranteeFunds'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setHoldGuaranteeFunds(java.lang.Boolean value) {
      validate(fields()[71], value);
      this.holdGuaranteeFunds = value;
      fieldSetFlags()[71] = true;
      return this;
    }

    /**
      * Checks whether the 'holdGuaranteeFunds' field has been set.
      * @return True if the 'holdGuaranteeFunds' field has been set, false otherwise.
      */
    public boolean hasHoldGuaranteeFunds() {
      return fieldSetFlags()[71];
    }


    /**
      * Clears the value of the 'holdGuaranteeFunds' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearHoldGuaranteeFunds() {
      holdGuaranteeFunds = null;
      fieldSetFlags()[71] = false;
      return this;
    }

    /**
      * Gets the value of the 'productGuaranteeData' field.
      * @return The value.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductGuaranteeDataV1 getProductGuaranteeData() {
      return productGuaranteeData;
    }


    /**
      * Sets the value of the 'productGuaranteeData' field.
      * @param value The value of 'productGuaranteeData'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setProductGuaranteeData(org.apache.fineract.avro.loan.v1.LoanProductGuaranteeDataV1 value) {
      validate(fields()[72], value);
      this.productGuaranteeDataBuilder = null;
      this.productGuaranteeData = value;
      fieldSetFlags()[72] = true;
      return this;
    }

    /**
      * Checks whether the 'productGuaranteeData' field has been set.
      * @return True if the 'productGuaranteeData' field has been set, false otherwise.
      */
    public boolean hasProductGuaranteeData() {
      return fieldSetFlags()[72];
    }

    /**
     * Gets the Builder instance for the 'productGuaranteeData' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.loan.v1.LoanProductGuaranteeDataV1.Builder getProductGuaranteeDataBuilder() {
      if (productGuaranteeDataBuilder == null) {
        if (hasProductGuaranteeData()) {
          setProductGuaranteeDataBuilder(org.apache.fineract.avro.loan.v1.LoanProductGuaranteeDataV1.newBuilder(productGuaranteeData));
        } else {
          setProductGuaranteeDataBuilder(org.apache.fineract.avro.loan.v1.LoanProductGuaranteeDataV1.newBuilder());
        }
      }
      return productGuaranteeDataBuilder;
    }

    /**
     * Sets the Builder instance for the 'productGuaranteeData' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setProductGuaranteeDataBuilder(org.apache.fineract.avro.loan.v1.LoanProductGuaranteeDataV1.Builder value) {
      clearProductGuaranteeData();
      productGuaranteeDataBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'productGuaranteeData' field has an active Builder instance
     * @return True if the 'productGuaranteeData' field has an active Builder instance
     */
    public boolean hasProductGuaranteeDataBuilder() {
      return productGuaranteeDataBuilder != null;
    }

    /**
      * Clears the value of the 'productGuaranteeData' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearProductGuaranteeData() {
      productGuaranteeData = null;
      productGuaranteeDataBuilder = null;
      fieldSetFlags()[72] = false;
      return this;
    }

    /**
      * Gets the value of the 'accountMovesOutOfNPAOnlyOnArrearsCompletion' field.
      * @return The value.
      */
    public java.lang.Boolean getAccountMovesOutOfNPAOnlyOnArrearsCompletion() {
      return accountMovesOutOfNPAOnlyOnArrearsCompletion;
    }


    /**
      * Sets the value of the 'accountMovesOutOfNPAOnlyOnArrearsCompletion' field.
      * @param value The value of 'accountMovesOutOfNPAOnlyOnArrearsCompletion'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setAccountMovesOutOfNPAOnlyOnArrearsCompletion(java.lang.Boolean value) {
      validate(fields()[73], value);
      this.accountMovesOutOfNPAOnlyOnArrearsCompletion = value;
      fieldSetFlags()[73] = true;
      return this;
    }

    /**
      * Checks whether the 'accountMovesOutOfNPAOnlyOnArrearsCompletion' field has been set.
      * @return True if the 'accountMovesOutOfNPAOnlyOnArrearsCompletion' field has been set, false otherwise.
      */
    public boolean hasAccountMovesOutOfNPAOnlyOnArrearsCompletion() {
      return fieldSetFlags()[73];
    }


    /**
      * Clears the value of the 'accountMovesOutOfNPAOnlyOnArrearsCompletion' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearAccountMovesOutOfNPAOnlyOnArrearsCompletion() {
      accountMovesOutOfNPAOnlyOnArrearsCompletion = null;
      fieldSetFlags()[73] = false;
      return this;
    }

    /**
      * Gets the value of the 'syncExpectedWithDisbursementDate' field.
      * @return The value.
      */
    public java.lang.Boolean getSyncExpectedWithDisbursementDate() {
      return syncExpectedWithDisbursementDate;
    }


    /**
      * Sets the value of the 'syncExpectedWithDisbursementDate' field.
      * @param value The value of 'syncExpectedWithDisbursementDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setSyncExpectedWithDisbursementDate(java.lang.Boolean value) {
      validate(fields()[74], value);
      this.syncExpectedWithDisbursementDate = value;
      fieldSetFlags()[74] = true;
      return this;
    }

    /**
      * Checks whether the 'syncExpectedWithDisbursementDate' field has been set.
      * @return True if the 'syncExpectedWithDisbursementDate' field has been set, false otherwise.
      */
    public boolean hasSyncExpectedWithDisbursementDate() {
      return fieldSetFlags()[74];
    }


    /**
      * Clears the value of the 'syncExpectedWithDisbursementDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearSyncExpectedWithDisbursementDate() {
      syncExpectedWithDisbursementDate = null;
      fieldSetFlags()[74] = false;
      return this;
    }

    /**
      * Gets the value of the 'isEqualAmortization' field.
      * @return The value.
      */
    public java.lang.Boolean getIsEqualAmortization() {
      return isEqualAmortization;
    }


    /**
      * Sets the value of the 'isEqualAmortization' field.
      * @param value The value of 'isEqualAmortization'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setIsEqualAmortization(java.lang.Boolean value) {
      validate(fields()[75], value);
      this.isEqualAmortization = value;
      fieldSetFlags()[75] = true;
      return this;
    }

    /**
      * Checks whether the 'isEqualAmortization' field has been set.
      * @return True if the 'isEqualAmortization' field has been set, false otherwise.
      */
    public boolean hasIsEqualAmortization() {
      return fieldSetFlags()[75];
    }


    /**
      * Clears the value of the 'isEqualAmortization' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearIsEqualAmortization() {
      isEqualAmortization = null;
      fieldSetFlags()[75] = false;
      return this;
    }

    /**
      * Gets the value of the 'fixedPrincipalPercentagePerInstallment' field.
      * @return The value.
      */
    public java.math.BigDecimal getFixedPrincipalPercentagePerInstallment() {
      return fixedPrincipalPercentagePerInstallment;
    }


    /**
      * Sets the value of the 'fixedPrincipalPercentagePerInstallment' field.
      * @param value The value of 'fixedPrincipalPercentagePerInstallment'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setFixedPrincipalPercentagePerInstallment(java.math.BigDecimal value) {
      validate(fields()[76], value);
      this.fixedPrincipalPercentagePerInstallment = value;
      fieldSetFlags()[76] = true;
      return this;
    }

    /**
      * Checks whether the 'fixedPrincipalPercentagePerInstallment' field has been set.
      * @return True if the 'fixedPrincipalPercentagePerInstallment' field has been set, false otherwise.
      */
    public boolean hasFixedPrincipalPercentagePerInstallment() {
      return fieldSetFlags()[76];
    }


    /**
      * Clears the value of the 'fixedPrincipalPercentagePerInstallment' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearFixedPrincipalPercentagePerInstallment() {
      fixedPrincipalPercentagePerInstallment = null;
      fieldSetFlags()[76] = false;
      return this;
    }

    /**
      * Gets the value of the 'delinquencyBucket' field.
      * @return The value.
      */
    public org.apache.fineract.avro.loan.v1.DelinquencyBucketDataV1 getDelinquencyBucket() {
      return delinquencyBucket;
    }


    /**
      * Sets the value of the 'delinquencyBucket' field.
      * @param value The value of 'delinquencyBucket'.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setDelinquencyBucket(org.apache.fineract.avro.loan.v1.DelinquencyBucketDataV1 value) {
      validate(fields()[77], value);
      this.delinquencyBucketBuilder = null;
      this.delinquencyBucket = value;
      fieldSetFlags()[77] = true;
      return this;
    }

    /**
      * Checks whether the 'delinquencyBucket' field has been set.
      * @return True if the 'delinquencyBucket' field has been set, false otherwise.
      */
    public boolean hasDelinquencyBucket() {
      return fieldSetFlags()[77];
    }

    /**
     * Gets the Builder instance for the 'delinquencyBucket' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.loan.v1.DelinquencyBucketDataV1.Builder getDelinquencyBucketBuilder() {
      if (delinquencyBucketBuilder == null) {
        if (hasDelinquencyBucket()) {
          setDelinquencyBucketBuilder(org.apache.fineract.avro.loan.v1.DelinquencyBucketDataV1.newBuilder(delinquencyBucket));
        } else {
          setDelinquencyBucketBuilder(org.apache.fineract.avro.loan.v1.DelinquencyBucketDataV1.newBuilder());
        }
      }
      return delinquencyBucketBuilder;
    }

    /**
     * Sets the Builder instance for the 'delinquencyBucket' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder setDelinquencyBucketBuilder(org.apache.fineract.avro.loan.v1.DelinquencyBucketDataV1.Builder value) {
      clearDelinquencyBucket();
      delinquencyBucketBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'delinquencyBucket' field has an active Builder instance
     * @return True if the 'delinquencyBucket' field has an active Builder instance
     */
    public boolean hasDelinquencyBucketBuilder() {
      return delinquencyBucketBuilder != null;
    }

    /**
      * Clears the value of the 'delinquencyBucket' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.loan.v1.LoanProductDataV1.Builder clearDelinquencyBucket() {
      delinquencyBucket = null;
      delinquencyBucketBuilder = null;
      fieldSetFlags()[77] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public LoanProductDataV1 build() {
      try {
        LoanProductDataV1 record = new LoanProductDataV1();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.String) defaultValue(fields()[1]);
        record.shortName = fieldSetFlags()[2] ? this.shortName : (java.lang.String) defaultValue(fields()[2]);
        record.description = fieldSetFlags()[3] ? this.description : (java.lang.String) defaultValue(fields()[3]);
        record.fundId = fieldSetFlags()[4] ? this.fundId : (java.lang.Long) defaultValue(fields()[4]);
        record.fundName = fieldSetFlags()[5] ? this.fundName : (java.lang.String) defaultValue(fields()[5]);
        record.includeInBorrowerCycle = fieldSetFlags()[6] ? this.includeInBorrowerCycle : (java.lang.Boolean) defaultValue(fields()[6]);
        record.useBorrowerCycle = fieldSetFlags()[7] ? this.useBorrowerCycle : (java.lang.Boolean) defaultValue(fields()[7]);
        record.startDate = fieldSetFlags()[8] ? this.startDate : (java.lang.String) defaultValue(fields()[8]);
        record.closeDate = fieldSetFlags()[9] ? this.closeDate : (java.lang.String) defaultValue(fields()[9]);
        record.status = fieldSetFlags()[10] ? this.status : (java.lang.String) defaultValue(fields()[10]);
        record.externalId = fieldSetFlags()[11] ? this.externalId : (java.lang.String) defaultValue(fields()[11]);
        if (currencyBuilder != null) {
          try {
            record.currency = this.currencyBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("currency"));
            throw e;
          }
        } else {
          record.currency = fieldSetFlags()[12] ? this.currency : (org.apache.fineract.avro.generic.v1.CurrencyDataV1) defaultValue(fields()[12]);
        }
        record.principal = fieldSetFlags()[13] ? this.principal : (java.math.BigDecimal) defaultValue(fields()[13]);
        record.minPrincipal = fieldSetFlags()[14] ? this.minPrincipal : (java.math.BigDecimal) defaultValue(fields()[14]);
        record.maxPrincipal = fieldSetFlags()[15] ? this.maxPrincipal : (java.math.BigDecimal) defaultValue(fields()[15]);
        record.numberOfRepayments = fieldSetFlags()[16] ? this.numberOfRepayments : (java.lang.Integer) defaultValue(fields()[16]);
        record.minNumberOfRepayments = fieldSetFlags()[17] ? this.minNumberOfRepayments : (java.lang.Integer) defaultValue(fields()[17]);
        record.maxNumberOfRepayments = fieldSetFlags()[18] ? this.maxNumberOfRepayments : (java.lang.Integer) defaultValue(fields()[18]);
        record.repaymentEvery = fieldSetFlags()[19] ? this.repaymentEvery : (java.lang.Integer) defaultValue(fields()[19]);
        if (repaymentFrequencyTypeBuilder != null) {
          try {
            record.repaymentFrequencyType = this.repaymentFrequencyTypeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("repaymentFrequencyType"));
            throw e;
          }
        } else {
          record.repaymentFrequencyType = fieldSetFlags()[20] ? this.repaymentFrequencyType : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[20]);
        }
        record.interestRatePerPeriod = fieldSetFlags()[21] ? this.interestRatePerPeriod : (java.math.BigDecimal) defaultValue(fields()[21]);
        record.minInterestRatePerPeriod = fieldSetFlags()[22] ? this.minInterestRatePerPeriod : (java.math.BigDecimal) defaultValue(fields()[22]);
        record.maxInterestRatePerPeriod = fieldSetFlags()[23] ? this.maxInterestRatePerPeriod : (java.math.BigDecimal) defaultValue(fields()[23]);
        if (interestRateFrequencyTypeBuilder != null) {
          try {
            record.interestRateFrequencyType = this.interestRateFrequencyTypeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("interestRateFrequencyType"));
            throw e;
          }
        } else {
          record.interestRateFrequencyType = fieldSetFlags()[24] ? this.interestRateFrequencyType : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[24]);
        }
        record.annualInterestRate = fieldSetFlags()[25] ? this.annualInterestRate : (java.math.BigDecimal) defaultValue(fields()[25]);
        record.isLinkedToFloatingInterestRates = fieldSetFlags()[26] ? this.isLinkedToFloatingInterestRates : (java.lang.Boolean) defaultValue(fields()[26]);
        record.floatingRateId = fieldSetFlags()[27] ? this.floatingRateId : (java.lang.Long) defaultValue(fields()[27]);
        record.floatingRateName = fieldSetFlags()[28] ? this.floatingRateName : (java.lang.String) defaultValue(fields()[28]);
        record.interestRateDifferential = fieldSetFlags()[29] ? this.interestRateDifferential : (java.math.BigDecimal) defaultValue(fields()[29]);
        record.minDifferentialLendingRate = fieldSetFlags()[30] ? this.minDifferentialLendingRate : (java.math.BigDecimal) defaultValue(fields()[30]);
        record.defaultDifferentialLendingRate = fieldSetFlags()[31] ? this.defaultDifferentialLendingRate : (java.math.BigDecimal) defaultValue(fields()[31]);
        record.maxDifferentialLendingRate = fieldSetFlags()[32] ? this.maxDifferentialLendingRate : (java.math.BigDecimal) defaultValue(fields()[32]);
        record.isFloatingInterestRateCalculationAllowed = fieldSetFlags()[33] ? this.isFloatingInterestRateCalculationAllowed : (java.lang.Boolean) defaultValue(fields()[33]);
        record.allowVariableInstallments = fieldSetFlags()[34] ? this.allowVariableInstallments : (java.lang.Boolean) defaultValue(fields()[34]);
        record.minimumGap = fieldSetFlags()[35] ? this.minimumGap : (java.lang.Integer) defaultValue(fields()[35]);
        record.maximumGap = fieldSetFlags()[36] ? this.maximumGap : (java.lang.Integer) defaultValue(fields()[36]);
        if (amortizationTypeBuilder != null) {
          try {
            record.amortizationType = this.amortizationTypeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("amortizationType"));
            throw e;
          }
        } else {
          record.amortizationType = fieldSetFlags()[37] ? this.amortizationType : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[37]);
        }
        if (interestTypeBuilder != null) {
          try {
            record.interestType = this.interestTypeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("interestType"));
            throw e;
          }
        } else {
          record.interestType = fieldSetFlags()[38] ? this.interestType : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[38]);
        }
        if (interestCalculationPeriodTypeBuilder != null) {
          try {
            record.interestCalculationPeriodType = this.interestCalculationPeriodTypeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("interestCalculationPeriodType"));
            throw e;
          }
        } else {
          record.interestCalculationPeriodType = fieldSetFlags()[39] ? this.interestCalculationPeriodType : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[39]);
        }
        record.allowPartialPeriodInterestCalculation = fieldSetFlags()[40] ? this.allowPartialPeriodInterestCalculation : (java.lang.Boolean) defaultValue(fields()[40]);
        record.inArrearsTolerance = fieldSetFlags()[41] ? this.inArrearsTolerance : (java.math.BigDecimal) defaultValue(fields()[41]);
        record.transactionProcessingStrategyCode = fieldSetFlags()[42] ? this.transactionProcessingStrategyCode : (java.lang.String) defaultValue(fields()[42]);
        record.transactionProcessingStrategyName = fieldSetFlags()[43] ? this.transactionProcessingStrategyName : (java.lang.String) defaultValue(fields()[43]);
        record.graceOnPrincipalPayment = fieldSetFlags()[44] ? this.graceOnPrincipalPayment : (java.lang.Integer) defaultValue(fields()[44]);
        record.recurringMoratoriumOnPrincipalPeriods = fieldSetFlags()[45] ? this.recurringMoratoriumOnPrincipalPeriods : (java.lang.Integer) defaultValue(fields()[45]);
        record.graceOnInterestPayment = fieldSetFlags()[46] ? this.graceOnInterestPayment : (java.lang.Integer) defaultValue(fields()[46]);
        record.graceOnInterestCharged = fieldSetFlags()[47] ? this.graceOnInterestCharged : (java.lang.Integer) defaultValue(fields()[47]);
        record.graceOnArrearsAgeing = fieldSetFlags()[48] ? this.graceOnArrearsAgeing : (java.lang.Integer) defaultValue(fields()[48]);
        record.overdueDaysForNPA = fieldSetFlags()[49] ? this.overdueDaysForNPA : (java.lang.Integer) defaultValue(fields()[49]);
        if (daysInMonthTypeBuilder != null) {
          try {
            record.daysInMonthType = this.daysInMonthTypeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("daysInMonthType"));
            throw e;
          }
        } else {
          record.daysInMonthType = fieldSetFlags()[50] ? this.daysInMonthType : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[50]);
        }
        if (daysInYearTypeBuilder != null) {
          try {
            record.daysInYearType = this.daysInYearTypeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("daysInYearType"));
            throw e;
          }
        } else {
          record.daysInYearType = fieldSetFlags()[51] ? this.daysInYearType : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[51]);
        }
        record.isInterestRecalculationEnabled = fieldSetFlags()[52] ? this.isInterestRecalculationEnabled : (java.lang.Boolean) defaultValue(fields()[52]);
        if (interestRecalculationDataBuilder != null) {
          try {
            record.interestRecalculationData = this.interestRecalculationDataBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("interestRecalculationData"));
            throw e;
          }
        } else {
          record.interestRecalculationData = fieldSetFlags()[53] ? this.interestRecalculationData : (org.apache.fineract.avro.loan.v1.LoanProductInterestRecalculationDataV1) defaultValue(fields()[53]);
        }
        record.minimumDaysBetweenDisbursalAndFirstRepayment = fieldSetFlags()[54] ? this.minimumDaysBetweenDisbursalAndFirstRepayment : (java.lang.Integer) defaultValue(fields()[54]);
        record.canDefineInstallmentAmount = fieldSetFlags()[55] ? this.canDefineInstallmentAmount : (java.lang.Boolean) defaultValue(fields()[55]);
        record.installmentAmountInMultiplesOf = fieldSetFlags()[56] ? this.installmentAmountInMultiplesOf : (java.lang.Integer) defaultValue(fields()[56]);
        record.charges = fieldSetFlags()[57] ? this.charges : (java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1>) defaultValue(fields()[57]);
        record.principalVariationsForBorrowerCycle = fieldSetFlags()[58] ? this.principalVariationsForBorrowerCycle : (java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1>) defaultValue(fields()[58]);
        record.interestRateVariationsForBorrowerCycle = fieldSetFlags()[59] ? this.interestRateVariationsForBorrowerCycle : (java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1>) defaultValue(fields()[59]);
        record.numberOfRepaymentVariationsForBorrowerCycle = fieldSetFlags()[60] ? this.numberOfRepaymentVariationsForBorrowerCycle : (java.util.List<org.apache.fineract.avro.loan.v1.LoanProductBorrowerCycleVariationDataV1>) defaultValue(fields()[60]);
        record.isRatesEnabled = fieldSetFlags()[61] ? this.isRatesEnabled : (java.lang.Boolean) defaultValue(fields()[61]);
        record.rates = fieldSetFlags()[62] ? this.rates : (java.util.List<org.apache.fineract.avro.portfolio.v1.RateDataV1>) defaultValue(fields()[62]);
        record.multiDisburseLoan = fieldSetFlags()[63] ? this.multiDisburseLoan : (java.lang.Boolean) defaultValue(fields()[63]);
        record.maxTrancheCount = fieldSetFlags()[64] ? this.maxTrancheCount : (java.lang.Integer) defaultValue(fields()[64]);
        record.outstandingLoanBalance = fieldSetFlags()[65] ? this.outstandingLoanBalance : (java.math.BigDecimal) defaultValue(fields()[65]);
        record.disallowExpectedDisbursements = fieldSetFlags()[66] ? this.disallowExpectedDisbursements : (java.lang.Boolean) defaultValue(fields()[66]);
        record.allowApprovedDisbursedAmountsOverApplied = fieldSetFlags()[67] ? this.allowApprovedDisbursedAmountsOverApplied : (java.lang.Boolean) defaultValue(fields()[67]);
        record.overAppliedCalculationType = fieldSetFlags()[68] ? this.overAppliedCalculationType : (java.lang.String) defaultValue(fields()[68]);
        record.overAppliedNumber = fieldSetFlags()[69] ? this.overAppliedNumber : (java.lang.Integer) defaultValue(fields()[69]);
        record.principalThresholdForLastInstallment = fieldSetFlags()[70] ? this.principalThresholdForLastInstallment : (java.math.BigDecimal) defaultValue(fields()[70]);
        record.holdGuaranteeFunds = fieldSetFlags()[71] ? this.holdGuaranteeFunds : (java.lang.Boolean) defaultValue(fields()[71]);
        if (productGuaranteeDataBuilder != null) {
          try {
            record.productGuaranteeData = this.productGuaranteeDataBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("productGuaranteeData"));
            throw e;
          }
        } else {
          record.productGuaranteeData = fieldSetFlags()[72] ? this.productGuaranteeData : (org.apache.fineract.avro.loan.v1.LoanProductGuaranteeDataV1) defaultValue(fields()[72]);
        }
        record.accountMovesOutOfNPAOnlyOnArrearsCompletion = fieldSetFlags()[73] ? this.accountMovesOutOfNPAOnlyOnArrearsCompletion : (java.lang.Boolean) defaultValue(fields()[73]);
        record.syncExpectedWithDisbursementDate = fieldSetFlags()[74] ? this.syncExpectedWithDisbursementDate : (java.lang.Boolean) defaultValue(fields()[74]);
        record.isEqualAmortization = fieldSetFlags()[75] ? this.isEqualAmortization : (java.lang.Boolean) defaultValue(fields()[75]);
        record.fixedPrincipalPercentagePerInstallment = fieldSetFlags()[76] ? this.fixedPrincipalPercentagePerInstallment : (java.math.BigDecimal) defaultValue(fields()[76]);
        if (delinquencyBucketBuilder != null) {
          try {
            record.delinquencyBucket = this.delinquencyBucketBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("delinquencyBucket"));
            throw e;
          }
        } else {
          record.delinquencyBucket = fieldSetFlags()[77] ? this.delinquencyBucket : (org.apache.fineract.avro.loan.v1.DelinquencyBucketDataV1) defaultValue(fields()[77]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<LoanProductDataV1>
    WRITER$ = (org.apache.avro.io.DatumWriter<LoanProductDataV1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<LoanProductDataV1>
    READER$ = (org.apache.avro.io.DatumReader<LoanProductDataV1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










