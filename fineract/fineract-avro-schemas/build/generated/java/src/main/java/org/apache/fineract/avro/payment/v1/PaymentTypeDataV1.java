/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

package org.apache.fineract.avro.payment.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class PaymentTypeDataV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, org.apache.fineract.avro.generator.ByteBufferSerializable {
  private static final long serialVersionUID = -5410320790248862207L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PaymentTypeDataV1\",\"namespace\":\"org.apache.fineract.avro.payment.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isCashPayment\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"position\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"codeName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isSystemDefined\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PaymentTypeDataV1> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PaymentTypeDataV1> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<PaymentTypeDataV1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<PaymentTypeDataV1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<PaymentTypeDataV1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this PaymentTypeDataV1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  @Override
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a PaymentTypeDataV1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a PaymentTypeDataV1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static PaymentTypeDataV1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.Long id;
  private java.lang.String name;
  private java.lang.String description;
  private java.lang.Boolean isCashPayment;
  private java.lang.Long position;
  private java.lang.String codeName;
  private java.lang.Boolean isSystemDefined;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PaymentTypeDataV1() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param name The new value for name
   * @param description The new value for description
   * @param isCashPayment The new value for isCashPayment
   * @param position The new value for position
   * @param codeName The new value for codeName
   * @param isSystemDefined The new value for isSystemDefined
   */
  public PaymentTypeDataV1(java.lang.Long id, java.lang.String name, java.lang.String description, java.lang.Boolean isCashPayment, java.lang.Long position, java.lang.String codeName, java.lang.Boolean isSystemDefined) {
    this.id = id;
    this.name = name;
    this.description = description;
    this.isCashPayment = isCashPayment;
    this.position = position;
    this.codeName = codeName;
    this.isSystemDefined = isSystemDefined;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return name;
    case 2: return description;
    case 3: return isCashPayment;
    case 4: return position;
    case 5: return codeName;
    case 6: return isSystemDefined;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: name = value$ != null ? value$.toString() : null; break;
    case 2: description = value$ != null ? value$.toString() : null; break;
    case 3: isCashPayment = (java.lang.Boolean)value$; break;
    case 4: position = (java.lang.Long)value$; break;
    case 5: codeName = value$ != null ? value$.toString() : null; break;
    case 6: isSystemDefined = (java.lang.Boolean)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'description' field.
   * @return The value of the 'description' field.
   */
  public java.lang.String getDescription() {
    return description;
  }


  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'isCashPayment' field.
   * @return The value of the 'isCashPayment' field.
   */
  public java.lang.Boolean getIsCashPayment() {
    return isCashPayment;
  }


  /**
   * Sets the value of the 'isCashPayment' field.
   * @param value the value to set.
   */
  public void setIsCashPayment(java.lang.Boolean value) {
    this.isCashPayment = value;
  }

  /**
   * Gets the value of the 'position' field.
   * @return The value of the 'position' field.
   */
  public java.lang.Long getPosition() {
    return position;
  }


  /**
   * Sets the value of the 'position' field.
   * @param value the value to set.
   */
  public void setPosition(java.lang.Long value) {
    this.position = value;
  }

  /**
   * Gets the value of the 'codeName' field.
   * @return The value of the 'codeName' field.
   */
  public java.lang.String getCodeName() {
    return codeName;
  }


  /**
   * Sets the value of the 'codeName' field.
   * @param value the value to set.
   */
  public void setCodeName(java.lang.String value) {
    this.codeName = value;
  }

  /**
   * Gets the value of the 'isSystemDefined' field.
   * @return The value of the 'isSystemDefined' field.
   */
  public java.lang.Boolean getIsSystemDefined() {
    return isSystemDefined;
  }


  /**
   * Sets the value of the 'isSystemDefined' field.
   * @param value the value to set.
   */
  public void setIsSystemDefined(java.lang.Boolean value) {
    this.isSystemDefined = value;
  }

  /**
   * Creates a new PaymentTypeDataV1 RecordBuilder.
   * @return A new PaymentTypeDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder newBuilder() {
    return new org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder();
  }

  /**
   * Creates a new PaymentTypeDataV1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PaymentTypeDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder newBuilder(org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder other) {
    if (other == null) {
      return new org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder(other);
    }
  }

  /**
   * Creates a new PaymentTypeDataV1 RecordBuilder by copying an existing PaymentTypeDataV1 instance.
   * @param other The existing instance to copy.
   * @return A new PaymentTypeDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder newBuilder(org.apache.fineract.avro.payment.v1.PaymentTypeDataV1 other) {
    if (other == null) {
      return new org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder(other);
    }
  }

  /**
   * RecordBuilder for PaymentTypeDataV1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PaymentTypeDataV1>
    implements org.apache.avro.data.RecordBuilder<PaymentTypeDataV1> {

    private java.lang.Long id;
    private java.lang.String name;
    private java.lang.String description;
    private java.lang.Boolean isCashPayment;
    private java.lang.Long position;
    private java.lang.String codeName;
    private java.lang.Boolean isSystemDefined;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.isCashPayment)) {
        this.isCashPayment = data().deepCopy(fields()[3].schema(), other.isCashPayment);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.position)) {
        this.position = data().deepCopy(fields()[4].schema(), other.position);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.codeName)) {
        this.codeName = data().deepCopy(fields()[5].schema(), other.codeName);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.isSystemDefined)) {
        this.isSystemDefined = data().deepCopy(fields()[6].schema(), other.isSystemDefined);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing PaymentTypeDataV1 instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.fineract.avro.payment.v1.PaymentTypeDataV1 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.isCashPayment)) {
        this.isCashPayment = data().deepCopy(fields()[3].schema(), other.isCashPayment);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.position)) {
        this.position = data().deepCopy(fields()[4].schema(), other.position);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.codeName)) {
        this.codeName = data().deepCopy(fields()[5].schema(), other.codeName);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.isSystemDefined)) {
        this.isSystemDefined = data().deepCopy(fields()[6].schema(), other.isSystemDefined);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder setId(java.lang.Long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder setName(java.lang.String value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public java.lang.String getDescription() {
      return description;
    }


    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder setDescription(java.lang.String value) {
      validate(fields()[2], value);
      this.description = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder clearDescription() {
      description = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'isCashPayment' field.
      * @return The value.
      */
    public java.lang.Boolean getIsCashPayment() {
      return isCashPayment;
    }


    /**
      * Sets the value of the 'isCashPayment' field.
      * @param value The value of 'isCashPayment'.
      * @return This builder.
      */
    public org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder setIsCashPayment(java.lang.Boolean value) {
      validate(fields()[3], value);
      this.isCashPayment = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'isCashPayment' field has been set.
      * @return True if the 'isCashPayment' field has been set, false otherwise.
      */
    public boolean hasIsCashPayment() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'isCashPayment' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder clearIsCashPayment() {
      isCashPayment = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'position' field.
      * @return The value.
      */
    public java.lang.Long getPosition() {
      return position;
    }


    /**
      * Sets the value of the 'position' field.
      * @param value The value of 'position'.
      * @return This builder.
      */
    public org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder setPosition(java.lang.Long value) {
      validate(fields()[4], value);
      this.position = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'position' field has been set.
      * @return True if the 'position' field has been set, false otherwise.
      */
    public boolean hasPosition() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'position' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder clearPosition() {
      position = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'codeName' field.
      * @return The value.
      */
    public java.lang.String getCodeName() {
      return codeName;
    }


    /**
      * Sets the value of the 'codeName' field.
      * @param value The value of 'codeName'.
      * @return This builder.
      */
    public org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder setCodeName(java.lang.String value) {
      validate(fields()[5], value);
      this.codeName = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'codeName' field has been set.
      * @return True if the 'codeName' field has been set, false otherwise.
      */
    public boolean hasCodeName() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'codeName' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder clearCodeName() {
      codeName = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'isSystemDefined' field.
      * @return The value.
      */
    public java.lang.Boolean getIsSystemDefined() {
      return isSystemDefined;
    }


    /**
      * Sets the value of the 'isSystemDefined' field.
      * @param value The value of 'isSystemDefined'.
      * @return This builder.
      */
    public org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder setIsSystemDefined(java.lang.Boolean value) {
      validate(fields()[6], value);
      this.isSystemDefined = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'isSystemDefined' field has been set.
      * @return True if the 'isSystemDefined' field has been set, false otherwise.
      */
    public boolean hasIsSystemDefined() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'isSystemDefined' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.payment.v1.PaymentTypeDataV1.Builder clearIsSystemDefined() {
      isSystemDefined = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PaymentTypeDataV1 build() {
      try {
        PaymentTypeDataV1 record = new PaymentTypeDataV1();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.String) defaultValue(fields()[1]);
        record.description = fieldSetFlags()[2] ? this.description : (java.lang.String) defaultValue(fields()[2]);
        record.isCashPayment = fieldSetFlags()[3] ? this.isCashPayment : (java.lang.Boolean) defaultValue(fields()[3]);
        record.position = fieldSetFlags()[4] ? this.position : (java.lang.Long) defaultValue(fields()[4]);
        record.codeName = fieldSetFlags()[5] ? this.codeName : (java.lang.String) defaultValue(fields()[5]);
        record.isSystemDefined = fieldSetFlags()[6] ? this.isSystemDefined : (java.lang.Boolean) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PaymentTypeDataV1>
    WRITER$ = (org.apache.avro.io.DatumWriter<PaymentTypeDataV1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PaymentTypeDataV1>
    READER$ = (org.apache.avro.io.DatumReader<PaymentTypeDataV1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.id);
    }

    if (this.name == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.name);
    }

    if (this.description == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.description);
    }

    if (this.isCashPayment == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.isCashPayment);
    }

    if (this.position == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.position);
    }

    if (this.codeName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.codeName);
    }

    if (this.isSystemDefined == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.isSystemDefined);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.id = null;
      } else {
        this.id = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.name = null;
      } else {
        this.name = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.description = null;
      } else {
        this.description = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.isCashPayment = null;
      } else {
        this.isCashPayment = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.position = null;
      } else {
        this.position = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.codeName = null;
      } else {
        this.codeName = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.isSystemDefined = null;
      } else {
        this.isSystemDefined = in.readBoolean();
      }

    } else {
      for (int i = 0; i < 7; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.id = null;
          } else {
            this.id = in.readLong();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.name = null;
          } else {
            this.name = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.description = null;
          } else {
            this.description = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.isCashPayment = null;
          } else {
            this.isCashPayment = in.readBoolean();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.position = null;
          } else {
            this.position = in.readLong();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.codeName = null;
          } else {
            this.codeName = in.readString();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.isSystemDefined = null;
          } else {
            this.isSystemDefined = in.readBoolean();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










