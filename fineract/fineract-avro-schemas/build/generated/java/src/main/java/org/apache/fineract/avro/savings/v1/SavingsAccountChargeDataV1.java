/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

package org.apache.fineract.avro.savings.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class SavingsAccountChargeDataV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, org.apache.fineract.avro.generator.ByteBufferSerializable {
  private static final long serialVersionUID = -3909080862591594239L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SavingsAccountChargeDataV1\",\"namespace\":\"org.apache.fineract.avro.savings.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"chargeId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"accountId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"chargeTimeType\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"EnumOptionDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"dueDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"feeOnMonthDay\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"feeInterval\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"chargeCalculationType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"percentage\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"amountPercentageAppliedTo\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"currency\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CurrencyDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"decimalPlaces\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"inMultiplesOf\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"displaySymbol\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nameCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"displayLabel\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"amount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"amountPaid\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"amountWaived\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"amountWrittenOff\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"amountOutstanding\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"amountOrPercentage\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"penalty\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"isActive\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"isFreeWithdrawal\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"freeWithdrawalChargeFrequency\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"restartFrequency\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"restartFrequencyEnum\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"inactivationDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"chargeData\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ChargeDataV1\",\"namespace\":\"org.apache.fineract.avro.portfolio.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"active\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"penalty\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"freeWithdrawal\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"freeWithdrawalChargeFrequency\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"restartFrequency\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"restartFrequencyEnum\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"isPaymentType\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"paymentTypeOptions\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PaymentTypeDataV1\",\"namespace\":\"org.apache.fineract.avro.payment.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isCashPayment\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"position\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"codeName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isSystemDefined\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"currency\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.CurrencyDataV1\"],\"default\":null},{\"name\":\"amount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"chargeTimeType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"chargeAppliesTo\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"chargeCalculationType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"chargePaymentMode\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"feeOnMonthDay\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"feeInterval\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"minCap\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"maxCap\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"feeFrequency\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"incomeOrLiabilityAccount\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GLAccountDataV1\",\"namespace\":\"org.apache.fineract.avro.gl.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"parentId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"glCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"disabled\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"manualEntriesAllowed\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"usage\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nameDecorated\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"tagId\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CodeValueDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"position\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"active\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"mandatory\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"organizationRunningBalance\",\"type\":[\"null\",\"long\"],\"default\":null}]}],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<SavingsAccountChargeDataV1> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SavingsAccountChargeDataV1> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<SavingsAccountChargeDataV1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<SavingsAccountChargeDataV1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<SavingsAccountChargeDataV1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this SavingsAccountChargeDataV1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  @Override
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a SavingsAccountChargeDataV1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a SavingsAccountChargeDataV1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static SavingsAccountChargeDataV1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.Long id;
  private java.lang.Long chargeId;
  private java.lang.Long accountId;
  private java.lang.String name;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargeTimeType;
  private java.lang.String dueDate;
  private java.lang.String feeOnMonthDay;
  private java.lang.Integer feeInterval;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargeCalculationType;
  private java.math.BigDecimal percentage;
  private java.math.BigDecimal amountPercentageAppliedTo;
  private org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency;
  private java.math.BigDecimal amount;
  private java.math.BigDecimal amountPaid;
  private java.math.BigDecimal amountWaived;
  private java.math.BigDecimal amountWrittenOff;
  private java.math.BigDecimal amountOutstanding;
  private java.math.BigDecimal amountOrPercentage;
  private java.lang.Boolean penalty;
  private java.lang.Boolean isActive;
  private java.lang.Boolean isFreeWithdrawal;
  private java.lang.Integer freeWithdrawalChargeFrequency;
  private java.lang.Integer restartFrequency;
  private java.lang.Integer restartFrequencyEnum;
  private java.lang.String inactivationDate;
  private org.apache.fineract.avro.portfolio.v1.ChargeDataV1 chargeData;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SavingsAccountChargeDataV1() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param chargeId The new value for chargeId
   * @param accountId The new value for accountId
   * @param name The new value for name
   * @param chargeTimeType The new value for chargeTimeType
   * @param dueDate The new value for dueDate
   * @param feeOnMonthDay The new value for feeOnMonthDay
   * @param feeInterval The new value for feeInterval
   * @param chargeCalculationType The new value for chargeCalculationType
   * @param percentage The new value for percentage
   * @param amountPercentageAppliedTo The new value for amountPercentageAppliedTo
   * @param currency The new value for currency
   * @param amount The new value for amount
   * @param amountPaid The new value for amountPaid
   * @param amountWaived The new value for amountWaived
   * @param amountWrittenOff The new value for amountWrittenOff
   * @param amountOutstanding The new value for amountOutstanding
   * @param amountOrPercentage The new value for amountOrPercentage
   * @param penalty The new value for penalty
   * @param isActive The new value for isActive
   * @param isFreeWithdrawal The new value for isFreeWithdrawal
   * @param freeWithdrawalChargeFrequency The new value for freeWithdrawalChargeFrequency
   * @param restartFrequency The new value for restartFrequency
   * @param restartFrequencyEnum The new value for restartFrequencyEnum
   * @param inactivationDate The new value for inactivationDate
   * @param chargeData The new value for chargeData
   */
  public SavingsAccountChargeDataV1(java.lang.Long id, java.lang.Long chargeId, java.lang.Long accountId, java.lang.String name, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargeTimeType, java.lang.String dueDate, java.lang.String feeOnMonthDay, java.lang.Integer feeInterval, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargeCalculationType, java.math.BigDecimal percentage, java.math.BigDecimal amountPercentageAppliedTo, org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency, java.math.BigDecimal amount, java.math.BigDecimal amountPaid, java.math.BigDecimal amountWaived, java.math.BigDecimal amountWrittenOff, java.math.BigDecimal amountOutstanding, java.math.BigDecimal amountOrPercentage, java.lang.Boolean penalty, java.lang.Boolean isActive, java.lang.Boolean isFreeWithdrawal, java.lang.Integer freeWithdrawalChargeFrequency, java.lang.Integer restartFrequency, java.lang.Integer restartFrequencyEnum, java.lang.String inactivationDate, org.apache.fineract.avro.portfolio.v1.ChargeDataV1 chargeData) {
    this.id = id;
    this.chargeId = chargeId;
    this.accountId = accountId;
    this.name = name;
    this.chargeTimeType = chargeTimeType;
    this.dueDate = dueDate;
    this.feeOnMonthDay = feeOnMonthDay;
    this.feeInterval = feeInterval;
    this.chargeCalculationType = chargeCalculationType;
    this.percentage = percentage;
    this.amountPercentageAppliedTo = amountPercentageAppliedTo;
    this.currency = currency;
    this.amount = amount;
    this.amountPaid = amountPaid;
    this.amountWaived = amountWaived;
    this.amountWrittenOff = amountWrittenOff;
    this.amountOutstanding = amountOutstanding;
    this.amountOrPercentage = amountOrPercentage;
    this.penalty = penalty;
    this.isActive = isActive;
    this.isFreeWithdrawal = isFreeWithdrawal;
    this.freeWithdrawalChargeFrequency = freeWithdrawalChargeFrequency;
    this.restartFrequency = restartFrequency;
    this.restartFrequencyEnum = restartFrequencyEnum;
    this.inactivationDate = inactivationDate;
    this.chargeData = chargeData;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return chargeId;
    case 2: return accountId;
    case 3: return name;
    case 4: return chargeTimeType;
    case 5: return dueDate;
    case 6: return feeOnMonthDay;
    case 7: return feeInterval;
    case 8: return chargeCalculationType;
    case 9: return percentage;
    case 10: return amountPercentageAppliedTo;
    case 11: return currency;
    case 12: return amount;
    case 13: return amountPaid;
    case 14: return amountWaived;
    case 15: return amountWrittenOff;
    case 16: return amountOutstanding;
    case 17: return amountOrPercentage;
    case 18: return penalty;
    case 19: return isActive;
    case 20: return isFreeWithdrawal;
    case 21: return freeWithdrawalChargeFrequency;
    case 22: return restartFrequency;
    case 23: return restartFrequencyEnum;
    case 24: return inactivationDate;
    case 25: return chargeData;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: chargeId = (java.lang.Long)value$; break;
    case 2: accountId = (java.lang.Long)value$; break;
    case 3: name = value$ != null ? value$.toString() : null; break;
    case 4: chargeTimeType = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 5: dueDate = value$ != null ? value$.toString() : null; break;
    case 6: feeOnMonthDay = value$ != null ? value$.toString() : null; break;
    case 7: feeInterval = (java.lang.Integer)value$; break;
    case 8: chargeCalculationType = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 9: percentage = (java.math.BigDecimal)value$; break;
    case 10: amountPercentageAppliedTo = (java.math.BigDecimal)value$; break;
    case 11: currency = (org.apache.fineract.avro.generic.v1.CurrencyDataV1)value$; break;
    case 12: amount = (java.math.BigDecimal)value$; break;
    case 13: amountPaid = (java.math.BigDecimal)value$; break;
    case 14: amountWaived = (java.math.BigDecimal)value$; break;
    case 15: amountWrittenOff = (java.math.BigDecimal)value$; break;
    case 16: amountOutstanding = (java.math.BigDecimal)value$; break;
    case 17: amountOrPercentage = (java.math.BigDecimal)value$; break;
    case 18: penalty = (java.lang.Boolean)value$; break;
    case 19: isActive = (java.lang.Boolean)value$; break;
    case 20: isFreeWithdrawal = (java.lang.Boolean)value$; break;
    case 21: freeWithdrawalChargeFrequency = (java.lang.Integer)value$; break;
    case 22: restartFrequency = (java.lang.Integer)value$; break;
    case 23: restartFrequencyEnum = (java.lang.Integer)value$; break;
    case 24: inactivationDate = value$ != null ? value$.toString() : null; break;
    case 25: chargeData = (org.apache.fineract.avro.portfolio.v1.ChargeDataV1)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'chargeId' field.
   * @return The value of the 'chargeId' field.
   */
  public java.lang.Long getChargeId() {
    return chargeId;
  }


  /**
   * Sets the value of the 'chargeId' field.
   * @param value the value to set.
   */
  public void setChargeId(java.lang.Long value) {
    this.chargeId = value;
  }

  /**
   * Gets the value of the 'accountId' field.
   * @return The value of the 'accountId' field.
   */
  public java.lang.Long getAccountId() {
    return accountId;
  }


  /**
   * Sets the value of the 'accountId' field.
   * @param value the value to set.
   */
  public void setAccountId(java.lang.Long value) {
    this.accountId = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'chargeTimeType' field.
   * @return The value of the 'chargeTimeType' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getChargeTimeType() {
    return chargeTimeType;
  }


  /**
   * Sets the value of the 'chargeTimeType' field.
   * @param value the value to set.
   */
  public void setChargeTimeType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.chargeTimeType = value;
  }

  /**
   * Gets the value of the 'dueDate' field.
   * @return The value of the 'dueDate' field.
   */
  public java.lang.String getDueDate() {
    return dueDate;
  }


  /**
   * Sets the value of the 'dueDate' field.
   * @param value the value to set.
   */
  public void setDueDate(java.lang.String value) {
    this.dueDate = value;
  }

  /**
   * Gets the value of the 'feeOnMonthDay' field.
   * @return The value of the 'feeOnMonthDay' field.
   */
  public java.lang.String getFeeOnMonthDay() {
    return feeOnMonthDay;
  }


  /**
   * Sets the value of the 'feeOnMonthDay' field.
   * @param value the value to set.
   */
  public void setFeeOnMonthDay(java.lang.String value) {
    this.feeOnMonthDay = value;
  }

  /**
   * Gets the value of the 'feeInterval' field.
   * @return The value of the 'feeInterval' field.
   */
  public java.lang.Integer getFeeInterval() {
    return feeInterval;
  }


  /**
   * Sets the value of the 'feeInterval' field.
   * @param value the value to set.
   */
  public void setFeeInterval(java.lang.Integer value) {
    this.feeInterval = value;
  }

  /**
   * Gets the value of the 'chargeCalculationType' field.
   * @return The value of the 'chargeCalculationType' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getChargeCalculationType() {
    return chargeCalculationType;
  }


  /**
   * Sets the value of the 'chargeCalculationType' field.
   * @param value the value to set.
   */
  public void setChargeCalculationType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.chargeCalculationType = value;
  }

  /**
   * Gets the value of the 'percentage' field.
   * @return The value of the 'percentage' field.
   */
  public java.math.BigDecimal getPercentage() {
    return percentage;
  }


  /**
   * Sets the value of the 'percentage' field.
   * @param value the value to set.
   */
  public void setPercentage(java.math.BigDecimal value) {
    this.percentage = value;
  }

  /**
   * Gets the value of the 'amountPercentageAppliedTo' field.
   * @return The value of the 'amountPercentageAppliedTo' field.
   */
  public java.math.BigDecimal getAmountPercentageAppliedTo() {
    return amountPercentageAppliedTo;
  }


  /**
   * Sets the value of the 'amountPercentageAppliedTo' field.
   * @param value the value to set.
   */
  public void setAmountPercentageAppliedTo(java.math.BigDecimal value) {
    this.amountPercentageAppliedTo = value;
  }

  /**
   * Gets the value of the 'currency' field.
   * @return The value of the 'currency' field.
   */
  public org.apache.fineract.avro.generic.v1.CurrencyDataV1 getCurrency() {
    return currency;
  }


  /**
   * Sets the value of the 'currency' field.
   * @param value the value to set.
   */
  public void setCurrency(org.apache.fineract.avro.generic.v1.CurrencyDataV1 value) {
    this.currency = value;
  }

  /**
   * Gets the value of the 'amount' field.
   * @return The value of the 'amount' field.
   */
  public java.math.BigDecimal getAmount() {
    return amount;
  }


  /**
   * Sets the value of the 'amount' field.
   * @param value the value to set.
   */
  public void setAmount(java.math.BigDecimal value) {
    this.amount = value;
  }

  /**
   * Gets the value of the 'amountPaid' field.
   * @return The value of the 'amountPaid' field.
   */
  public java.math.BigDecimal getAmountPaid() {
    return amountPaid;
  }


  /**
   * Sets the value of the 'amountPaid' field.
   * @param value the value to set.
   */
  public void setAmountPaid(java.math.BigDecimal value) {
    this.amountPaid = value;
  }

  /**
   * Gets the value of the 'amountWaived' field.
   * @return The value of the 'amountWaived' field.
   */
  public java.math.BigDecimal getAmountWaived() {
    return amountWaived;
  }


  /**
   * Sets the value of the 'amountWaived' field.
   * @param value the value to set.
   */
  public void setAmountWaived(java.math.BigDecimal value) {
    this.amountWaived = value;
  }

  /**
   * Gets the value of the 'amountWrittenOff' field.
   * @return The value of the 'amountWrittenOff' field.
   */
  public java.math.BigDecimal getAmountWrittenOff() {
    return amountWrittenOff;
  }


  /**
   * Sets the value of the 'amountWrittenOff' field.
   * @param value the value to set.
   */
  public void setAmountWrittenOff(java.math.BigDecimal value) {
    this.amountWrittenOff = value;
  }

  /**
   * Gets the value of the 'amountOutstanding' field.
   * @return The value of the 'amountOutstanding' field.
   */
  public java.math.BigDecimal getAmountOutstanding() {
    return amountOutstanding;
  }


  /**
   * Sets the value of the 'amountOutstanding' field.
   * @param value the value to set.
   */
  public void setAmountOutstanding(java.math.BigDecimal value) {
    this.amountOutstanding = value;
  }

  /**
   * Gets the value of the 'amountOrPercentage' field.
   * @return The value of the 'amountOrPercentage' field.
   */
  public java.math.BigDecimal getAmountOrPercentage() {
    return amountOrPercentage;
  }


  /**
   * Sets the value of the 'amountOrPercentage' field.
   * @param value the value to set.
   */
  public void setAmountOrPercentage(java.math.BigDecimal value) {
    this.amountOrPercentage = value;
  }

  /**
   * Gets the value of the 'penalty' field.
   * @return The value of the 'penalty' field.
   */
  public java.lang.Boolean getPenalty() {
    return penalty;
  }


  /**
   * Sets the value of the 'penalty' field.
   * @param value the value to set.
   */
  public void setPenalty(java.lang.Boolean value) {
    this.penalty = value;
  }

  /**
   * Gets the value of the 'isActive' field.
   * @return The value of the 'isActive' field.
   */
  public java.lang.Boolean getIsActive() {
    return isActive;
  }


  /**
   * Sets the value of the 'isActive' field.
   * @param value the value to set.
   */
  public void setIsActive(java.lang.Boolean value) {
    this.isActive = value;
  }

  /**
   * Gets the value of the 'isFreeWithdrawal' field.
   * @return The value of the 'isFreeWithdrawal' field.
   */
  public java.lang.Boolean getIsFreeWithdrawal() {
    return isFreeWithdrawal;
  }


  /**
   * Sets the value of the 'isFreeWithdrawal' field.
   * @param value the value to set.
   */
  public void setIsFreeWithdrawal(java.lang.Boolean value) {
    this.isFreeWithdrawal = value;
  }

  /**
   * Gets the value of the 'freeWithdrawalChargeFrequency' field.
   * @return The value of the 'freeWithdrawalChargeFrequency' field.
   */
  public java.lang.Integer getFreeWithdrawalChargeFrequency() {
    return freeWithdrawalChargeFrequency;
  }


  /**
   * Sets the value of the 'freeWithdrawalChargeFrequency' field.
   * @param value the value to set.
   */
  public void setFreeWithdrawalChargeFrequency(java.lang.Integer value) {
    this.freeWithdrawalChargeFrequency = value;
  }

  /**
   * Gets the value of the 'restartFrequency' field.
   * @return The value of the 'restartFrequency' field.
   */
  public java.lang.Integer getRestartFrequency() {
    return restartFrequency;
  }


  /**
   * Sets the value of the 'restartFrequency' field.
   * @param value the value to set.
   */
  public void setRestartFrequency(java.lang.Integer value) {
    this.restartFrequency = value;
  }

  /**
   * Gets the value of the 'restartFrequencyEnum' field.
   * @return The value of the 'restartFrequencyEnum' field.
   */
  public java.lang.Integer getRestartFrequencyEnum() {
    return restartFrequencyEnum;
  }


  /**
   * Sets the value of the 'restartFrequencyEnum' field.
   * @param value the value to set.
   */
  public void setRestartFrequencyEnum(java.lang.Integer value) {
    this.restartFrequencyEnum = value;
  }

  /**
   * Gets the value of the 'inactivationDate' field.
   * @return The value of the 'inactivationDate' field.
   */
  public java.lang.String getInactivationDate() {
    return inactivationDate;
  }


  /**
   * Sets the value of the 'inactivationDate' field.
   * @param value the value to set.
   */
  public void setInactivationDate(java.lang.String value) {
    this.inactivationDate = value;
  }

  /**
   * Gets the value of the 'chargeData' field.
   * @return The value of the 'chargeData' field.
   */
  public org.apache.fineract.avro.portfolio.v1.ChargeDataV1 getChargeData() {
    return chargeData;
  }


  /**
   * Sets the value of the 'chargeData' field.
   * @param value the value to set.
   */
  public void setChargeData(org.apache.fineract.avro.portfolio.v1.ChargeDataV1 value) {
    this.chargeData = value;
  }

  /**
   * Creates a new SavingsAccountChargeDataV1 RecordBuilder.
   * @return A new SavingsAccountChargeDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder newBuilder() {
    return new org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder();
  }

  /**
   * Creates a new SavingsAccountChargeDataV1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SavingsAccountChargeDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder newBuilder(org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder other) {
    if (other == null) {
      return new org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder(other);
    }
  }

  /**
   * Creates a new SavingsAccountChargeDataV1 RecordBuilder by copying an existing SavingsAccountChargeDataV1 instance.
   * @param other The existing instance to copy.
   * @return A new SavingsAccountChargeDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder newBuilder(org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1 other) {
    if (other == null) {
      return new org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder(other);
    }
  }

  /**
   * RecordBuilder for SavingsAccountChargeDataV1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SavingsAccountChargeDataV1>
    implements org.apache.avro.data.RecordBuilder<SavingsAccountChargeDataV1> {

    private java.lang.Long id;
    private java.lang.Long chargeId;
    private java.lang.Long accountId;
    private java.lang.String name;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargeTimeType;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder chargeTimeTypeBuilder;
    private java.lang.String dueDate;
    private java.lang.String feeOnMonthDay;
    private java.lang.Integer feeInterval;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 chargeCalculationType;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder chargeCalculationTypeBuilder;
    private java.math.BigDecimal percentage;
    private java.math.BigDecimal amountPercentageAppliedTo;
    private org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency;
    private org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder currencyBuilder;
    private java.math.BigDecimal amount;
    private java.math.BigDecimal amountPaid;
    private java.math.BigDecimal amountWaived;
    private java.math.BigDecimal amountWrittenOff;
    private java.math.BigDecimal amountOutstanding;
    private java.math.BigDecimal amountOrPercentage;
    private java.lang.Boolean penalty;
    private java.lang.Boolean isActive;
    private java.lang.Boolean isFreeWithdrawal;
    private java.lang.Integer freeWithdrawalChargeFrequency;
    private java.lang.Integer restartFrequency;
    private java.lang.Integer restartFrequencyEnum;
    private java.lang.String inactivationDate;
    private org.apache.fineract.avro.portfolio.v1.ChargeDataV1 chargeData;
    private org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder chargeDataBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.chargeId)) {
        this.chargeId = data().deepCopy(fields()[1].schema(), other.chargeId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.accountId)) {
        this.accountId = data().deepCopy(fields()[2].schema(), other.accountId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.name)) {
        this.name = data().deepCopy(fields()[3].schema(), other.name);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.chargeTimeType)) {
        this.chargeTimeType = data().deepCopy(fields()[4].schema(), other.chargeTimeType);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasChargeTimeTypeBuilder()) {
        this.chargeTimeTypeBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getChargeTimeTypeBuilder());
      }
      if (isValidValue(fields()[5], other.dueDate)) {
        this.dueDate = data().deepCopy(fields()[5].schema(), other.dueDate);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.feeOnMonthDay)) {
        this.feeOnMonthDay = data().deepCopy(fields()[6].schema(), other.feeOnMonthDay);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.feeInterval)) {
        this.feeInterval = data().deepCopy(fields()[7].schema(), other.feeInterval);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.chargeCalculationType)) {
        this.chargeCalculationType = data().deepCopy(fields()[8].schema(), other.chargeCalculationType);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (other.hasChargeCalculationTypeBuilder()) {
        this.chargeCalculationTypeBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getChargeCalculationTypeBuilder());
      }
      if (isValidValue(fields()[9], other.percentage)) {
        this.percentage = data().deepCopy(fields()[9].schema(), other.percentage);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.amountPercentageAppliedTo)) {
        this.amountPercentageAppliedTo = data().deepCopy(fields()[10].schema(), other.amountPercentageAppliedTo);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.currency)) {
        this.currency = data().deepCopy(fields()[11].schema(), other.currency);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (other.hasCurrencyBuilder()) {
        this.currencyBuilder = org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder(other.getCurrencyBuilder());
      }
      if (isValidValue(fields()[12], other.amount)) {
        this.amount = data().deepCopy(fields()[12].schema(), other.amount);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.amountPaid)) {
        this.amountPaid = data().deepCopy(fields()[13].schema(), other.amountPaid);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.amountWaived)) {
        this.amountWaived = data().deepCopy(fields()[14].schema(), other.amountWaived);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.amountWrittenOff)) {
        this.amountWrittenOff = data().deepCopy(fields()[15].schema(), other.amountWrittenOff);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.amountOutstanding)) {
        this.amountOutstanding = data().deepCopy(fields()[16].schema(), other.amountOutstanding);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.amountOrPercentage)) {
        this.amountOrPercentage = data().deepCopy(fields()[17].schema(), other.amountOrPercentage);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.penalty)) {
        this.penalty = data().deepCopy(fields()[18].schema(), other.penalty);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.isActive)) {
        this.isActive = data().deepCopy(fields()[19].schema(), other.isActive);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.isFreeWithdrawal)) {
        this.isFreeWithdrawal = data().deepCopy(fields()[20].schema(), other.isFreeWithdrawal);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.freeWithdrawalChargeFrequency)) {
        this.freeWithdrawalChargeFrequency = data().deepCopy(fields()[21].schema(), other.freeWithdrawalChargeFrequency);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.restartFrequency)) {
        this.restartFrequency = data().deepCopy(fields()[22].schema(), other.restartFrequency);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.restartFrequencyEnum)) {
        this.restartFrequencyEnum = data().deepCopy(fields()[23].schema(), other.restartFrequencyEnum);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.inactivationDate)) {
        this.inactivationDate = data().deepCopy(fields()[24].schema(), other.inactivationDate);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
      if (isValidValue(fields()[25], other.chargeData)) {
        this.chargeData = data().deepCopy(fields()[25].schema(), other.chargeData);
        fieldSetFlags()[25] = other.fieldSetFlags()[25];
      }
      if (other.hasChargeDataBuilder()) {
        this.chargeDataBuilder = org.apache.fineract.avro.portfolio.v1.ChargeDataV1.newBuilder(other.getChargeDataBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing SavingsAccountChargeDataV1 instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.chargeId)) {
        this.chargeId = data().deepCopy(fields()[1].schema(), other.chargeId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.accountId)) {
        this.accountId = data().deepCopy(fields()[2].schema(), other.accountId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.name)) {
        this.name = data().deepCopy(fields()[3].schema(), other.name);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.chargeTimeType)) {
        this.chargeTimeType = data().deepCopy(fields()[4].schema(), other.chargeTimeType);
        fieldSetFlags()[4] = true;
      }
      this.chargeTimeTypeBuilder = null;
      if (isValidValue(fields()[5], other.dueDate)) {
        this.dueDate = data().deepCopy(fields()[5].schema(), other.dueDate);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.feeOnMonthDay)) {
        this.feeOnMonthDay = data().deepCopy(fields()[6].schema(), other.feeOnMonthDay);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.feeInterval)) {
        this.feeInterval = data().deepCopy(fields()[7].schema(), other.feeInterval);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.chargeCalculationType)) {
        this.chargeCalculationType = data().deepCopy(fields()[8].schema(), other.chargeCalculationType);
        fieldSetFlags()[8] = true;
      }
      this.chargeCalculationTypeBuilder = null;
      if (isValidValue(fields()[9], other.percentage)) {
        this.percentage = data().deepCopy(fields()[9].schema(), other.percentage);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.amountPercentageAppliedTo)) {
        this.amountPercentageAppliedTo = data().deepCopy(fields()[10].schema(), other.amountPercentageAppliedTo);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.currency)) {
        this.currency = data().deepCopy(fields()[11].schema(), other.currency);
        fieldSetFlags()[11] = true;
      }
      this.currencyBuilder = null;
      if (isValidValue(fields()[12], other.amount)) {
        this.amount = data().deepCopy(fields()[12].schema(), other.amount);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.amountPaid)) {
        this.amountPaid = data().deepCopy(fields()[13].schema(), other.amountPaid);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.amountWaived)) {
        this.amountWaived = data().deepCopy(fields()[14].schema(), other.amountWaived);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.amountWrittenOff)) {
        this.amountWrittenOff = data().deepCopy(fields()[15].schema(), other.amountWrittenOff);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.amountOutstanding)) {
        this.amountOutstanding = data().deepCopy(fields()[16].schema(), other.amountOutstanding);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.amountOrPercentage)) {
        this.amountOrPercentage = data().deepCopy(fields()[17].schema(), other.amountOrPercentage);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.penalty)) {
        this.penalty = data().deepCopy(fields()[18].schema(), other.penalty);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.isActive)) {
        this.isActive = data().deepCopy(fields()[19].schema(), other.isActive);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.isFreeWithdrawal)) {
        this.isFreeWithdrawal = data().deepCopy(fields()[20].schema(), other.isFreeWithdrawal);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.freeWithdrawalChargeFrequency)) {
        this.freeWithdrawalChargeFrequency = data().deepCopy(fields()[21].schema(), other.freeWithdrawalChargeFrequency);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.restartFrequency)) {
        this.restartFrequency = data().deepCopy(fields()[22].schema(), other.restartFrequency);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.restartFrequencyEnum)) {
        this.restartFrequencyEnum = data().deepCopy(fields()[23].schema(), other.restartFrequencyEnum);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.inactivationDate)) {
        this.inactivationDate = data().deepCopy(fields()[24].schema(), other.inactivationDate);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.chargeData)) {
        this.chargeData = data().deepCopy(fields()[25].schema(), other.chargeData);
        fieldSetFlags()[25] = true;
      }
      this.chargeDataBuilder = null;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setId(java.lang.Long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'chargeId' field.
      * @return The value.
      */
    public java.lang.Long getChargeId() {
      return chargeId;
    }


    /**
      * Sets the value of the 'chargeId' field.
      * @param value The value of 'chargeId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setChargeId(java.lang.Long value) {
      validate(fields()[1], value);
      this.chargeId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'chargeId' field has been set.
      * @return True if the 'chargeId' field has been set, false otherwise.
      */
    public boolean hasChargeId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'chargeId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearChargeId() {
      chargeId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'accountId' field.
      * @return The value.
      */
    public java.lang.Long getAccountId() {
      return accountId;
    }


    /**
      * Sets the value of the 'accountId' field.
      * @param value The value of 'accountId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setAccountId(java.lang.Long value) {
      validate(fields()[2], value);
      this.accountId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'accountId' field has been set.
      * @return True if the 'accountId' field has been set, false otherwise.
      */
    public boolean hasAccountId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'accountId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearAccountId() {
      accountId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setName(java.lang.String value) {
      validate(fields()[3], value);
      this.name = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearName() {
      name = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'chargeTimeType' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getChargeTimeType() {
      return chargeTimeType;
    }


    /**
      * Sets the value of the 'chargeTimeType' field.
      * @param value The value of 'chargeTimeType'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setChargeTimeType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[4], value);
      this.chargeTimeTypeBuilder = null;
      this.chargeTimeType = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'chargeTimeType' field has been set.
      * @return True if the 'chargeTimeType' field has been set, false otherwise.
      */
    public boolean hasChargeTimeType() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'chargeTimeType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getChargeTimeTypeBuilder() {
      if (chargeTimeTypeBuilder == null) {
        if (hasChargeTimeType()) {
          setChargeTimeTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(chargeTimeType));
        } else {
          setChargeTimeTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return chargeTimeTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'chargeTimeType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setChargeTimeTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearChargeTimeType();
      chargeTimeTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'chargeTimeType' field has an active Builder instance
     * @return True if the 'chargeTimeType' field has an active Builder instance
     */
    public boolean hasChargeTimeTypeBuilder() {
      return chargeTimeTypeBuilder != null;
    }

    /**
      * Clears the value of the 'chargeTimeType' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearChargeTimeType() {
      chargeTimeType = null;
      chargeTimeTypeBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'dueDate' field.
      * @return The value.
      */
    public java.lang.String getDueDate() {
      return dueDate;
    }


    /**
      * Sets the value of the 'dueDate' field.
      * @param value The value of 'dueDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setDueDate(java.lang.String value) {
      validate(fields()[5], value);
      this.dueDate = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'dueDate' field has been set.
      * @return True if the 'dueDate' field has been set, false otherwise.
      */
    public boolean hasDueDate() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'dueDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearDueDate() {
      dueDate = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'feeOnMonthDay' field.
      * @return The value.
      */
    public java.lang.String getFeeOnMonthDay() {
      return feeOnMonthDay;
    }


    /**
      * Sets the value of the 'feeOnMonthDay' field.
      * @param value The value of 'feeOnMonthDay'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setFeeOnMonthDay(java.lang.String value) {
      validate(fields()[6], value);
      this.feeOnMonthDay = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'feeOnMonthDay' field has been set.
      * @return True if the 'feeOnMonthDay' field has been set, false otherwise.
      */
    public boolean hasFeeOnMonthDay() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'feeOnMonthDay' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearFeeOnMonthDay() {
      feeOnMonthDay = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'feeInterval' field.
      * @return The value.
      */
    public java.lang.Integer getFeeInterval() {
      return feeInterval;
    }


    /**
      * Sets the value of the 'feeInterval' field.
      * @param value The value of 'feeInterval'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setFeeInterval(java.lang.Integer value) {
      validate(fields()[7], value);
      this.feeInterval = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'feeInterval' field has been set.
      * @return True if the 'feeInterval' field has been set, false otherwise.
      */
    public boolean hasFeeInterval() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'feeInterval' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearFeeInterval() {
      feeInterval = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'chargeCalculationType' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getChargeCalculationType() {
      return chargeCalculationType;
    }


    /**
      * Sets the value of the 'chargeCalculationType' field.
      * @param value The value of 'chargeCalculationType'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setChargeCalculationType(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[8], value);
      this.chargeCalculationTypeBuilder = null;
      this.chargeCalculationType = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'chargeCalculationType' field has been set.
      * @return True if the 'chargeCalculationType' field has been set, false otherwise.
      */
    public boolean hasChargeCalculationType() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'chargeCalculationType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getChargeCalculationTypeBuilder() {
      if (chargeCalculationTypeBuilder == null) {
        if (hasChargeCalculationType()) {
          setChargeCalculationTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(chargeCalculationType));
        } else {
          setChargeCalculationTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return chargeCalculationTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'chargeCalculationType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setChargeCalculationTypeBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearChargeCalculationType();
      chargeCalculationTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'chargeCalculationType' field has an active Builder instance
     * @return True if the 'chargeCalculationType' field has an active Builder instance
     */
    public boolean hasChargeCalculationTypeBuilder() {
      return chargeCalculationTypeBuilder != null;
    }

    /**
      * Clears the value of the 'chargeCalculationType' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearChargeCalculationType() {
      chargeCalculationType = null;
      chargeCalculationTypeBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'percentage' field.
      * @return The value.
      */
    public java.math.BigDecimal getPercentage() {
      return percentage;
    }


    /**
      * Sets the value of the 'percentage' field.
      * @param value The value of 'percentage'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setPercentage(java.math.BigDecimal value) {
      validate(fields()[9], value);
      this.percentage = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'percentage' field has been set.
      * @return True if the 'percentage' field has been set, false otherwise.
      */
    public boolean hasPercentage() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'percentage' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearPercentage() {
      percentage = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'amountPercentageAppliedTo' field.
      * @return The value.
      */
    public java.math.BigDecimal getAmountPercentageAppliedTo() {
      return amountPercentageAppliedTo;
    }


    /**
      * Sets the value of the 'amountPercentageAppliedTo' field.
      * @param value The value of 'amountPercentageAppliedTo'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setAmountPercentageAppliedTo(java.math.BigDecimal value) {
      validate(fields()[10], value);
      this.amountPercentageAppliedTo = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'amountPercentageAppliedTo' field has been set.
      * @return True if the 'amountPercentageAppliedTo' field has been set, false otherwise.
      */
    public boolean hasAmountPercentageAppliedTo() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'amountPercentageAppliedTo' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearAmountPercentageAppliedTo() {
      amountPercentageAppliedTo = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'currency' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.CurrencyDataV1 getCurrency() {
      return currency;
    }


    /**
      * Sets the value of the 'currency' field.
      * @param value The value of 'currency'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setCurrency(org.apache.fineract.avro.generic.v1.CurrencyDataV1 value) {
      validate(fields()[11], value);
      this.currencyBuilder = null;
      this.currency = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'currency' field has been set.
      * @return True if the 'currency' field has been set, false otherwise.
      */
    public boolean hasCurrency() {
      return fieldSetFlags()[11];
    }

    /**
     * Gets the Builder instance for the 'currency' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder getCurrencyBuilder() {
      if (currencyBuilder == null) {
        if (hasCurrency()) {
          setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder(currency));
        } else {
          setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder());
        }
      }
      return currencyBuilder;
    }

    /**
     * Sets the Builder instance for the 'currency' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder value) {
      clearCurrency();
      currencyBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'currency' field has an active Builder instance
     * @return True if the 'currency' field has an active Builder instance
     */
    public boolean hasCurrencyBuilder() {
      return currencyBuilder != null;
    }

    /**
      * Clears the value of the 'currency' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearCurrency() {
      currency = null;
      currencyBuilder = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'amount' field.
      * @return The value.
      */
    public java.math.BigDecimal getAmount() {
      return amount;
    }


    /**
      * Sets the value of the 'amount' field.
      * @param value The value of 'amount'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setAmount(java.math.BigDecimal value) {
      validate(fields()[12], value);
      this.amount = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'amount' field has been set.
      * @return True if the 'amount' field has been set, false otherwise.
      */
    public boolean hasAmount() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'amount' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearAmount() {
      amount = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'amountPaid' field.
      * @return The value.
      */
    public java.math.BigDecimal getAmountPaid() {
      return amountPaid;
    }


    /**
      * Sets the value of the 'amountPaid' field.
      * @param value The value of 'amountPaid'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setAmountPaid(java.math.BigDecimal value) {
      validate(fields()[13], value);
      this.amountPaid = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'amountPaid' field has been set.
      * @return True if the 'amountPaid' field has been set, false otherwise.
      */
    public boolean hasAmountPaid() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'amountPaid' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearAmountPaid() {
      amountPaid = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'amountWaived' field.
      * @return The value.
      */
    public java.math.BigDecimal getAmountWaived() {
      return amountWaived;
    }


    /**
      * Sets the value of the 'amountWaived' field.
      * @param value The value of 'amountWaived'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setAmountWaived(java.math.BigDecimal value) {
      validate(fields()[14], value);
      this.amountWaived = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'amountWaived' field has been set.
      * @return True if the 'amountWaived' field has been set, false otherwise.
      */
    public boolean hasAmountWaived() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'amountWaived' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearAmountWaived() {
      amountWaived = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'amountWrittenOff' field.
      * @return The value.
      */
    public java.math.BigDecimal getAmountWrittenOff() {
      return amountWrittenOff;
    }


    /**
      * Sets the value of the 'amountWrittenOff' field.
      * @param value The value of 'amountWrittenOff'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setAmountWrittenOff(java.math.BigDecimal value) {
      validate(fields()[15], value);
      this.amountWrittenOff = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'amountWrittenOff' field has been set.
      * @return True if the 'amountWrittenOff' field has been set, false otherwise.
      */
    public boolean hasAmountWrittenOff() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'amountWrittenOff' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearAmountWrittenOff() {
      amountWrittenOff = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'amountOutstanding' field.
      * @return The value.
      */
    public java.math.BigDecimal getAmountOutstanding() {
      return amountOutstanding;
    }


    /**
      * Sets the value of the 'amountOutstanding' field.
      * @param value The value of 'amountOutstanding'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setAmountOutstanding(java.math.BigDecimal value) {
      validate(fields()[16], value);
      this.amountOutstanding = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'amountOutstanding' field has been set.
      * @return True if the 'amountOutstanding' field has been set, false otherwise.
      */
    public boolean hasAmountOutstanding() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'amountOutstanding' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearAmountOutstanding() {
      amountOutstanding = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'amountOrPercentage' field.
      * @return The value.
      */
    public java.math.BigDecimal getAmountOrPercentage() {
      return amountOrPercentage;
    }


    /**
      * Sets the value of the 'amountOrPercentage' field.
      * @param value The value of 'amountOrPercentage'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setAmountOrPercentage(java.math.BigDecimal value) {
      validate(fields()[17], value);
      this.amountOrPercentage = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'amountOrPercentage' field has been set.
      * @return True if the 'amountOrPercentage' field has been set, false otherwise.
      */
    public boolean hasAmountOrPercentage() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'amountOrPercentage' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearAmountOrPercentage() {
      amountOrPercentage = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'penalty' field.
      * @return The value.
      */
    public java.lang.Boolean getPenalty() {
      return penalty;
    }


    /**
      * Sets the value of the 'penalty' field.
      * @param value The value of 'penalty'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setPenalty(java.lang.Boolean value) {
      validate(fields()[18], value);
      this.penalty = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'penalty' field has been set.
      * @return True if the 'penalty' field has been set, false otherwise.
      */
    public boolean hasPenalty() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'penalty' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearPenalty() {
      penalty = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'isActive' field.
      * @return The value.
      */
    public java.lang.Boolean getIsActive() {
      return isActive;
    }


    /**
      * Sets the value of the 'isActive' field.
      * @param value The value of 'isActive'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setIsActive(java.lang.Boolean value) {
      validate(fields()[19], value);
      this.isActive = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'isActive' field has been set.
      * @return True if the 'isActive' field has been set, false otherwise.
      */
    public boolean hasIsActive() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'isActive' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearIsActive() {
      isActive = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'isFreeWithdrawal' field.
      * @return The value.
      */
    public java.lang.Boolean getIsFreeWithdrawal() {
      return isFreeWithdrawal;
    }


    /**
      * Sets the value of the 'isFreeWithdrawal' field.
      * @param value The value of 'isFreeWithdrawal'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setIsFreeWithdrawal(java.lang.Boolean value) {
      validate(fields()[20], value);
      this.isFreeWithdrawal = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'isFreeWithdrawal' field has been set.
      * @return True if the 'isFreeWithdrawal' field has been set, false otherwise.
      */
    public boolean hasIsFreeWithdrawal() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'isFreeWithdrawal' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearIsFreeWithdrawal() {
      isFreeWithdrawal = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'freeWithdrawalChargeFrequency' field.
      * @return The value.
      */
    public java.lang.Integer getFreeWithdrawalChargeFrequency() {
      return freeWithdrawalChargeFrequency;
    }


    /**
      * Sets the value of the 'freeWithdrawalChargeFrequency' field.
      * @param value The value of 'freeWithdrawalChargeFrequency'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setFreeWithdrawalChargeFrequency(java.lang.Integer value) {
      validate(fields()[21], value);
      this.freeWithdrawalChargeFrequency = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'freeWithdrawalChargeFrequency' field has been set.
      * @return True if the 'freeWithdrawalChargeFrequency' field has been set, false otherwise.
      */
    public boolean hasFreeWithdrawalChargeFrequency() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'freeWithdrawalChargeFrequency' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearFreeWithdrawalChargeFrequency() {
      freeWithdrawalChargeFrequency = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'restartFrequency' field.
      * @return The value.
      */
    public java.lang.Integer getRestartFrequency() {
      return restartFrequency;
    }


    /**
      * Sets the value of the 'restartFrequency' field.
      * @param value The value of 'restartFrequency'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setRestartFrequency(java.lang.Integer value) {
      validate(fields()[22], value);
      this.restartFrequency = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'restartFrequency' field has been set.
      * @return True if the 'restartFrequency' field has been set, false otherwise.
      */
    public boolean hasRestartFrequency() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'restartFrequency' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearRestartFrequency() {
      restartFrequency = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'restartFrequencyEnum' field.
      * @return The value.
      */
    public java.lang.Integer getRestartFrequencyEnum() {
      return restartFrequencyEnum;
    }


    /**
      * Sets the value of the 'restartFrequencyEnum' field.
      * @param value The value of 'restartFrequencyEnum'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setRestartFrequencyEnum(java.lang.Integer value) {
      validate(fields()[23], value);
      this.restartFrequencyEnum = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'restartFrequencyEnum' field has been set.
      * @return True if the 'restartFrequencyEnum' field has been set, false otherwise.
      */
    public boolean hasRestartFrequencyEnum() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'restartFrequencyEnum' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearRestartFrequencyEnum() {
      restartFrequencyEnum = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'inactivationDate' field.
      * @return The value.
      */
    public java.lang.String getInactivationDate() {
      return inactivationDate;
    }


    /**
      * Sets the value of the 'inactivationDate' field.
      * @param value The value of 'inactivationDate'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setInactivationDate(java.lang.String value) {
      validate(fields()[24], value);
      this.inactivationDate = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'inactivationDate' field has been set.
      * @return True if the 'inactivationDate' field has been set, false otherwise.
      */
    public boolean hasInactivationDate() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'inactivationDate' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearInactivationDate() {
      inactivationDate = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'chargeData' field.
      * @return The value.
      */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1 getChargeData() {
      return chargeData;
    }


    /**
      * Sets the value of the 'chargeData' field.
      * @param value The value of 'chargeData'.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setChargeData(org.apache.fineract.avro.portfolio.v1.ChargeDataV1 value) {
      validate(fields()[25], value);
      this.chargeDataBuilder = null;
      this.chargeData = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'chargeData' field has been set.
      * @return True if the 'chargeData' field has been set, false otherwise.
      */
    public boolean hasChargeData() {
      return fieldSetFlags()[25];
    }

    /**
     * Gets the Builder instance for the 'chargeData' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder getChargeDataBuilder() {
      if (chargeDataBuilder == null) {
        if (hasChargeData()) {
          setChargeDataBuilder(org.apache.fineract.avro.portfolio.v1.ChargeDataV1.newBuilder(chargeData));
        } else {
          setChargeDataBuilder(org.apache.fineract.avro.portfolio.v1.ChargeDataV1.newBuilder());
        }
      }
      return chargeDataBuilder;
    }

    /**
     * Sets the Builder instance for the 'chargeData' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder setChargeDataBuilder(org.apache.fineract.avro.portfolio.v1.ChargeDataV1.Builder value) {
      clearChargeData();
      chargeDataBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'chargeData' field has an active Builder instance
     * @return True if the 'chargeData' field has an active Builder instance
     */
    public boolean hasChargeDataBuilder() {
      return chargeDataBuilder != null;
    }

    /**
      * Clears the value of the 'chargeData' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.savings.v1.SavingsAccountChargeDataV1.Builder clearChargeData() {
      chargeData = null;
      chargeDataBuilder = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SavingsAccountChargeDataV1 build() {
      try {
        SavingsAccountChargeDataV1 record = new SavingsAccountChargeDataV1();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.chargeId = fieldSetFlags()[1] ? this.chargeId : (java.lang.Long) defaultValue(fields()[1]);
        record.accountId = fieldSetFlags()[2] ? this.accountId : (java.lang.Long) defaultValue(fields()[2]);
        record.name = fieldSetFlags()[3] ? this.name : (java.lang.String) defaultValue(fields()[3]);
        if (chargeTimeTypeBuilder != null) {
          try {
            record.chargeTimeType = this.chargeTimeTypeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("chargeTimeType"));
            throw e;
          }
        } else {
          record.chargeTimeType = fieldSetFlags()[4] ? this.chargeTimeType : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[4]);
        }
        record.dueDate = fieldSetFlags()[5] ? this.dueDate : (java.lang.String) defaultValue(fields()[5]);
        record.feeOnMonthDay = fieldSetFlags()[6] ? this.feeOnMonthDay : (java.lang.String) defaultValue(fields()[6]);
        record.feeInterval = fieldSetFlags()[7] ? this.feeInterval : (java.lang.Integer) defaultValue(fields()[7]);
        if (chargeCalculationTypeBuilder != null) {
          try {
            record.chargeCalculationType = this.chargeCalculationTypeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("chargeCalculationType"));
            throw e;
          }
        } else {
          record.chargeCalculationType = fieldSetFlags()[8] ? this.chargeCalculationType : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[8]);
        }
        record.percentage = fieldSetFlags()[9] ? this.percentage : (java.math.BigDecimal) defaultValue(fields()[9]);
        record.amountPercentageAppliedTo = fieldSetFlags()[10] ? this.amountPercentageAppliedTo : (java.math.BigDecimal) defaultValue(fields()[10]);
        if (currencyBuilder != null) {
          try {
            record.currency = this.currencyBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("currency"));
            throw e;
          }
        } else {
          record.currency = fieldSetFlags()[11] ? this.currency : (org.apache.fineract.avro.generic.v1.CurrencyDataV1) defaultValue(fields()[11]);
        }
        record.amount = fieldSetFlags()[12] ? this.amount : (java.math.BigDecimal) defaultValue(fields()[12]);
        record.amountPaid = fieldSetFlags()[13] ? this.amountPaid : (java.math.BigDecimal) defaultValue(fields()[13]);
        record.amountWaived = fieldSetFlags()[14] ? this.amountWaived : (java.math.BigDecimal) defaultValue(fields()[14]);
        record.amountWrittenOff = fieldSetFlags()[15] ? this.amountWrittenOff : (java.math.BigDecimal) defaultValue(fields()[15]);
        record.amountOutstanding = fieldSetFlags()[16] ? this.amountOutstanding : (java.math.BigDecimal) defaultValue(fields()[16]);
        record.amountOrPercentage = fieldSetFlags()[17] ? this.amountOrPercentage : (java.math.BigDecimal) defaultValue(fields()[17]);
        record.penalty = fieldSetFlags()[18] ? this.penalty : (java.lang.Boolean) defaultValue(fields()[18]);
        record.isActive = fieldSetFlags()[19] ? this.isActive : (java.lang.Boolean) defaultValue(fields()[19]);
        record.isFreeWithdrawal = fieldSetFlags()[20] ? this.isFreeWithdrawal : (java.lang.Boolean) defaultValue(fields()[20]);
        record.freeWithdrawalChargeFrequency = fieldSetFlags()[21] ? this.freeWithdrawalChargeFrequency : (java.lang.Integer) defaultValue(fields()[21]);
        record.restartFrequency = fieldSetFlags()[22] ? this.restartFrequency : (java.lang.Integer) defaultValue(fields()[22]);
        record.restartFrequencyEnum = fieldSetFlags()[23] ? this.restartFrequencyEnum : (java.lang.Integer) defaultValue(fields()[23]);
        record.inactivationDate = fieldSetFlags()[24] ? this.inactivationDate : (java.lang.String) defaultValue(fields()[24]);
        if (chargeDataBuilder != null) {
          try {
            record.chargeData = this.chargeDataBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("chargeData"));
            throw e;
          }
        } else {
          record.chargeData = fieldSetFlags()[25] ? this.chargeData : (org.apache.fineract.avro.portfolio.v1.ChargeDataV1) defaultValue(fields()[25]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SavingsAccountChargeDataV1>
    WRITER$ = (org.apache.avro.io.DatumWriter<SavingsAccountChargeDataV1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SavingsAccountChargeDataV1>
    READER$ = (org.apache.avro.io.DatumReader<SavingsAccountChargeDataV1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










