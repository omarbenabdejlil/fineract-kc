/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

package org.apache.fineract.avro.share.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ShareProductDataV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, org.apache.fineract.avro.generator.ByteBufferSerializable {
  private static final long serialVersionUID = 2234252253835893274L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ShareProductDataV1\",\"namespace\":\"org.apache.fineract.avro.share.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"shortName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"externalId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"currency\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CurrencyDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"decimalPlaces\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"inMultiplesOf\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"displaySymbol\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nameCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"displayLabel\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"totalShares\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"totalSharesIssued\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"unitPrice\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"shareCapital\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"minimumShares\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"nominalShares\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"maximumShares\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"marketPrice\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ShareProductMarketPriceDataV1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"fromDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"shareValue\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null}]}}],\"default\":null},{\"name\":\"charges\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ChargeDataV1\",\"namespace\":\"org.apache.fineract.avro.portfolio.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"active\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"penalty\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"freeWithdrawal\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"freeWithdrawalChargeFrequency\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"restartFrequency\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"restartFrequencyEnum\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"isPaymentType\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"paymentTypeOptions\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PaymentTypeDataV1\",\"namespace\":\"org.apache.fineract.avro.payment.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isCashPayment\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"position\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"codeName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isSystemDefined\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"currency\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.CurrencyDataV1\"],\"default\":null},{\"name\":\"amount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"chargeTimeType\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"EnumOptionDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"chargeAppliesTo\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"chargeCalculationType\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"chargePaymentMode\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"feeOnMonthDay\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"feeInterval\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"minCap\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"maxCap\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":8}],\"default\":null},{\"name\":\"feeFrequency\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"incomeOrLiabilityAccount\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GLAccountDataV1\",\"namespace\":\"org.apache.fineract.avro.gl.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"parentId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"glCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"disabled\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"manualEntriesAllowed\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"usage\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nameDecorated\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"tagId\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CodeValueDataV1\",\"namespace\":\"org.apache.fineract.avro.generic.v1\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"position\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"active\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"mandatory\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"organizationRunningBalance\",\"type\":[\"null\",\"long\"],\"default\":null}]}],\"default\":null}]}}],\"default\":null},{\"name\":\"allowDividendCalculationForInactiveClients\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"lockinPeriod\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"lockPeriodTypeEnum\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null},{\"name\":\"minimumActivePeriod\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"minimumActivePeriodForDividendsTypeEnum\",\"type\":[\"null\",\"org.apache.fineract.avro.generic.v1.EnumOptionDataV1\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<ShareProductDataV1> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ShareProductDataV1> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ShareProductDataV1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ShareProductDataV1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ShareProductDataV1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ShareProductDataV1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  @Override
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ShareProductDataV1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ShareProductDataV1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ShareProductDataV1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.Long id;
  private java.lang.String name;
  private java.lang.String shortName;
  private java.lang.String description;
  private java.lang.String externalId;
  private org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency;
  private java.lang.Long totalShares;
  private java.lang.Long totalSharesIssued;
  private java.math.BigDecimal unitPrice;
  private java.math.BigDecimal shareCapital;
  private java.lang.Long minimumShares;
  private java.lang.Long nominalShares;
  private java.lang.Long maximumShares;
  private java.util.List<org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1> marketPrice;
  private java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1> charges;
  private java.lang.Boolean allowDividendCalculationForInactiveClients;
  private java.lang.Integer lockinPeriod;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 lockPeriodTypeEnum;
  private java.lang.Integer minimumActivePeriod;
  private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 minimumActivePeriodForDividendsTypeEnum;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ShareProductDataV1() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param name The new value for name
   * @param shortName The new value for shortName
   * @param description The new value for description
   * @param externalId The new value for externalId
   * @param currency The new value for currency
   * @param totalShares The new value for totalShares
   * @param totalSharesIssued The new value for totalSharesIssued
   * @param unitPrice The new value for unitPrice
   * @param shareCapital The new value for shareCapital
   * @param minimumShares The new value for minimumShares
   * @param nominalShares The new value for nominalShares
   * @param maximumShares The new value for maximumShares
   * @param marketPrice The new value for marketPrice
   * @param charges The new value for charges
   * @param allowDividendCalculationForInactiveClients The new value for allowDividendCalculationForInactiveClients
   * @param lockinPeriod The new value for lockinPeriod
   * @param lockPeriodTypeEnum The new value for lockPeriodTypeEnum
   * @param minimumActivePeriod The new value for minimumActivePeriod
   * @param minimumActivePeriodForDividendsTypeEnum The new value for minimumActivePeriodForDividendsTypeEnum
   */
  public ShareProductDataV1(java.lang.Long id, java.lang.String name, java.lang.String shortName, java.lang.String description, java.lang.String externalId, org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency, java.lang.Long totalShares, java.lang.Long totalSharesIssued, java.math.BigDecimal unitPrice, java.math.BigDecimal shareCapital, java.lang.Long minimumShares, java.lang.Long nominalShares, java.lang.Long maximumShares, java.util.List<org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1> marketPrice, java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1> charges, java.lang.Boolean allowDividendCalculationForInactiveClients, java.lang.Integer lockinPeriod, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 lockPeriodTypeEnum, java.lang.Integer minimumActivePeriod, org.apache.fineract.avro.generic.v1.EnumOptionDataV1 minimumActivePeriodForDividendsTypeEnum) {
    this.id = id;
    this.name = name;
    this.shortName = shortName;
    this.description = description;
    this.externalId = externalId;
    this.currency = currency;
    this.totalShares = totalShares;
    this.totalSharesIssued = totalSharesIssued;
    this.unitPrice = unitPrice;
    this.shareCapital = shareCapital;
    this.minimumShares = minimumShares;
    this.nominalShares = nominalShares;
    this.maximumShares = maximumShares;
    this.marketPrice = marketPrice;
    this.charges = charges;
    this.allowDividendCalculationForInactiveClients = allowDividendCalculationForInactiveClients;
    this.lockinPeriod = lockinPeriod;
    this.lockPeriodTypeEnum = lockPeriodTypeEnum;
    this.minimumActivePeriod = minimumActivePeriod;
    this.minimumActivePeriodForDividendsTypeEnum = minimumActivePeriodForDividendsTypeEnum;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return name;
    case 2: return shortName;
    case 3: return description;
    case 4: return externalId;
    case 5: return currency;
    case 6: return totalShares;
    case 7: return totalSharesIssued;
    case 8: return unitPrice;
    case 9: return shareCapital;
    case 10: return minimumShares;
    case 11: return nominalShares;
    case 12: return maximumShares;
    case 13: return marketPrice;
    case 14: return charges;
    case 15: return allowDividendCalculationForInactiveClients;
    case 16: return lockinPeriod;
    case 17: return lockPeriodTypeEnum;
    case 18: return minimumActivePeriod;
    case 19: return minimumActivePeriodForDividendsTypeEnum;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: name = value$ != null ? value$.toString() : null; break;
    case 2: shortName = value$ != null ? value$.toString() : null; break;
    case 3: description = value$ != null ? value$.toString() : null; break;
    case 4: externalId = value$ != null ? value$.toString() : null; break;
    case 5: currency = (org.apache.fineract.avro.generic.v1.CurrencyDataV1)value$; break;
    case 6: totalShares = (java.lang.Long)value$; break;
    case 7: totalSharesIssued = (java.lang.Long)value$; break;
    case 8: unitPrice = (java.math.BigDecimal)value$; break;
    case 9: shareCapital = (java.math.BigDecimal)value$; break;
    case 10: minimumShares = (java.lang.Long)value$; break;
    case 11: nominalShares = (java.lang.Long)value$; break;
    case 12: maximumShares = (java.lang.Long)value$; break;
    case 13: marketPrice = (java.util.List<org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1>)value$; break;
    case 14: charges = (java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1>)value$; break;
    case 15: allowDividendCalculationForInactiveClients = (java.lang.Boolean)value$; break;
    case 16: lockinPeriod = (java.lang.Integer)value$; break;
    case 17: lockPeriodTypeEnum = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    case 18: minimumActivePeriod = (java.lang.Integer)value$; break;
    case 19: minimumActivePeriodForDividendsTypeEnum = (org.apache.fineract.avro.generic.v1.EnumOptionDataV1)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'shortName' field.
   * @return The value of the 'shortName' field.
   */
  public java.lang.String getShortName() {
    return shortName;
  }


  /**
   * Sets the value of the 'shortName' field.
   * @param value the value to set.
   */
  public void setShortName(java.lang.String value) {
    this.shortName = value;
  }

  /**
   * Gets the value of the 'description' field.
   * @return The value of the 'description' field.
   */
  public java.lang.String getDescription() {
    return description;
  }


  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'externalId' field.
   * @return The value of the 'externalId' field.
   */
  public java.lang.String getExternalId() {
    return externalId;
  }


  /**
   * Sets the value of the 'externalId' field.
   * @param value the value to set.
   */
  public void setExternalId(java.lang.String value) {
    this.externalId = value;
  }

  /**
   * Gets the value of the 'currency' field.
   * @return The value of the 'currency' field.
   */
  public org.apache.fineract.avro.generic.v1.CurrencyDataV1 getCurrency() {
    return currency;
  }


  /**
   * Sets the value of the 'currency' field.
   * @param value the value to set.
   */
  public void setCurrency(org.apache.fineract.avro.generic.v1.CurrencyDataV1 value) {
    this.currency = value;
  }

  /**
   * Gets the value of the 'totalShares' field.
   * @return The value of the 'totalShares' field.
   */
  public java.lang.Long getTotalShares() {
    return totalShares;
  }


  /**
   * Sets the value of the 'totalShares' field.
   * @param value the value to set.
   */
  public void setTotalShares(java.lang.Long value) {
    this.totalShares = value;
  }

  /**
   * Gets the value of the 'totalSharesIssued' field.
   * @return The value of the 'totalSharesIssued' field.
   */
  public java.lang.Long getTotalSharesIssued() {
    return totalSharesIssued;
  }


  /**
   * Sets the value of the 'totalSharesIssued' field.
   * @param value the value to set.
   */
  public void setTotalSharesIssued(java.lang.Long value) {
    this.totalSharesIssued = value;
  }

  /**
   * Gets the value of the 'unitPrice' field.
   * @return The value of the 'unitPrice' field.
   */
  public java.math.BigDecimal getUnitPrice() {
    return unitPrice;
  }


  /**
   * Sets the value of the 'unitPrice' field.
   * @param value the value to set.
   */
  public void setUnitPrice(java.math.BigDecimal value) {
    this.unitPrice = value;
  }

  /**
   * Gets the value of the 'shareCapital' field.
   * @return The value of the 'shareCapital' field.
   */
  public java.math.BigDecimal getShareCapital() {
    return shareCapital;
  }


  /**
   * Sets the value of the 'shareCapital' field.
   * @param value the value to set.
   */
  public void setShareCapital(java.math.BigDecimal value) {
    this.shareCapital = value;
  }

  /**
   * Gets the value of the 'minimumShares' field.
   * @return The value of the 'minimumShares' field.
   */
  public java.lang.Long getMinimumShares() {
    return minimumShares;
  }


  /**
   * Sets the value of the 'minimumShares' field.
   * @param value the value to set.
   */
  public void setMinimumShares(java.lang.Long value) {
    this.minimumShares = value;
  }

  /**
   * Gets the value of the 'nominalShares' field.
   * @return The value of the 'nominalShares' field.
   */
  public java.lang.Long getNominalShares() {
    return nominalShares;
  }


  /**
   * Sets the value of the 'nominalShares' field.
   * @param value the value to set.
   */
  public void setNominalShares(java.lang.Long value) {
    this.nominalShares = value;
  }

  /**
   * Gets the value of the 'maximumShares' field.
   * @return The value of the 'maximumShares' field.
   */
  public java.lang.Long getMaximumShares() {
    return maximumShares;
  }


  /**
   * Sets the value of the 'maximumShares' field.
   * @param value the value to set.
   */
  public void setMaximumShares(java.lang.Long value) {
    this.maximumShares = value;
  }

  /**
   * Gets the value of the 'marketPrice' field.
   * @return The value of the 'marketPrice' field.
   */
  public java.util.List<org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1> getMarketPrice() {
    return marketPrice;
  }


  /**
   * Sets the value of the 'marketPrice' field.
   * @param value the value to set.
   */
  public void setMarketPrice(java.util.List<org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1> value) {
    this.marketPrice = value;
  }

  /**
   * Gets the value of the 'charges' field.
   * @return The value of the 'charges' field.
   */
  public java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1> getCharges() {
    return charges;
  }


  /**
   * Sets the value of the 'charges' field.
   * @param value the value to set.
   */
  public void setCharges(java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1> value) {
    this.charges = value;
  }

  /**
   * Gets the value of the 'allowDividendCalculationForInactiveClients' field.
   * @return The value of the 'allowDividendCalculationForInactiveClients' field.
   */
  public java.lang.Boolean getAllowDividendCalculationForInactiveClients() {
    return allowDividendCalculationForInactiveClients;
  }


  /**
   * Sets the value of the 'allowDividendCalculationForInactiveClients' field.
   * @param value the value to set.
   */
  public void setAllowDividendCalculationForInactiveClients(java.lang.Boolean value) {
    this.allowDividendCalculationForInactiveClients = value;
  }

  /**
   * Gets the value of the 'lockinPeriod' field.
   * @return The value of the 'lockinPeriod' field.
   */
  public java.lang.Integer getLockinPeriod() {
    return lockinPeriod;
  }


  /**
   * Sets the value of the 'lockinPeriod' field.
   * @param value the value to set.
   */
  public void setLockinPeriod(java.lang.Integer value) {
    this.lockinPeriod = value;
  }

  /**
   * Gets the value of the 'lockPeriodTypeEnum' field.
   * @return The value of the 'lockPeriodTypeEnum' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getLockPeriodTypeEnum() {
    return lockPeriodTypeEnum;
  }


  /**
   * Sets the value of the 'lockPeriodTypeEnum' field.
   * @param value the value to set.
   */
  public void setLockPeriodTypeEnum(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.lockPeriodTypeEnum = value;
  }

  /**
   * Gets the value of the 'minimumActivePeriod' field.
   * @return The value of the 'minimumActivePeriod' field.
   */
  public java.lang.Integer getMinimumActivePeriod() {
    return minimumActivePeriod;
  }


  /**
   * Sets the value of the 'minimumActivePeriod' field.
   * @param value the value to set.
   */
  public void setMinimumActivePeriod(java.lang.Integer value) {
    this.minimumActivePeriod = value;
  }

  /**
   * Gets the value of the 'minimumActivePeriodForDividendsTypeEnum' field.
   * @return The value of the 'minimumActivePeriodForDividendsTypeEnum' field.
   */
  public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getMinimumActivePeriodForDividendsTypeEnum() {
    return minimumActivePeriodForDividendsTypeEnum;
  }


  /**
   * Sets the value of the 'minimumActivePeriodForDividendsTypeEnum' field.
   * @param value the value to set.
   */
  public void setMinimumActivePeriodForDividendsTypeEnum(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
    this.minimumActivePeriodForDividendsTypeEnum = value;
  }

  /**
   * Creates a new ShareProductDataV1 RecordBuilder.
   * @return A new ShareProductDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder newBuilder() {
    return new org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder();
  }

  /**
   * Creates a new ShareProductDataV1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ShareProductDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder newBuilder(org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder other) {
    if (other == null) {
      return new org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder(other);
    }
  }

  /**
   * Creates a new ShareProductDataV1 RecordBuilder by copying an existing ShareProductDataV1 instance.
   * @param other The existing instance to copy.
   * @return A new ShareProductDataV1 RecordBuilder
   */
  public static org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder newBuilder(org.apache.fineract.avro.share.v1.ShareProductDataV1 other) {
    if (other == null) {
      return new org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder();
    } else {
      return new org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder(other);
    }
  }

  /**
   * RecordBuilder for ShareProductDataV1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ShareProductDataV1>
    implements org.apache.avro.data.RecordBuilder<ShareProductDataV1> {

    private java.lang.Long id;
    private java.lang.String name;
    private java.lang.String shortName;
    private java.lang.String description;
    private java.lang.String externalId;
    private org.apache.fineract.avro.generic.v1.CurrencyDataV1 currency;
    private org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder currencyBuilder;
    private java.lang.Long totalShares;
    private java.lang.Long totalSharesIssued;
    private java.math.BigDecimal unitPrice;
    private java.math.BigDecimal shareCapital;
    private java.lang.Long minimumShares;
    private java.lang.Long nominalShares;
    private java.lang.Long maximumShares;
    private java.util.List<org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1> marketPrice;
    private java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1> charges;
    private java.lang.Boolean allowDividendCalculationForInactiveClients;
    private java.lang.Integer lockinPeriod;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 lockPeriodTypeEnum;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder lockPeriodTypeEnumBuilder;
    private java.lang.Integer minimumActivePeriod;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1 minimumActivePeriodForDividendsTypeEnum;
    private org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder minimumActivePeriodForDividendsTypeEnumBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.shortName)) {
        this.shortName = data().deepCopy(fields()[2].schema(), other.shortName);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.description)) {
        this.description = data().deepCopy(fields()[3].schema(), other.description);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.externalId)) {
        this.externalId = data().deepCopy(fields()[4].schema(), other.externalId);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.currency)) {
        this.currency = data().deepCopy(fields()[5].schema(), other.currency);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (other.hasCurrencyBuilder()) {
        this.currencyBuilder = org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder(other.getCurrencyBuilder());
      }
      if (isValidValue(fields()[6], other.totalShares)) {
        this.totalShares = data().deepCopy(fields()[6].schema(), other.totalShares);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.totalSharesIssued)) {
        this.totalSharesIssued = data().deepCopy(fields()[7].schema(), other.totalSharesIssued);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.unitPrice)) {
        this.unitPrice = data().deepCopy(fields()[8].schema(), other.unitPrice);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.shareCapital)) {
        this.shareCapital = data().deepCopy(fields()[9].schema(), other.shareCapital);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.minimumShares)) {
        this.minimumShares = data().deepCopy(fields()[10].schema(), other.minimumShares);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.nominalShares)) {
        this.nominalShares = data().deepCopy(fields()[11].schema(), other.nominalShares);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.maximumShares)) {
        this.maximumShares = data().deepCopy(fields()[12].schema(), other.maximumShares);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.marketPrice)) {
        this.marketPrice = data().deepCopy(fields()[13].schema(), other.marketPrice);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.charges)) {
        this.charges = data().deepCopy(fields()[14].schema(), other.charges);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.allowDividendCalculationForInactiveClients)) {
        this.allowDividendCalculationForInactiveClients = data().deepCopy(fields()[15].schema(), other.allowDividendCalculationForInactiveClients);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.lockinPeriod)) {
        this.lockinPeriod = data().deepCopy(fields()[16].schema(), other.lockinPeriod);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.lockPeriodTypeEnum)) {
        this.lockPeriodTypeEnum = data().deepCopy(fields()[17].schema(), other.lockPeriodTypeEnum);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (other.hasLockPeriodTypeEnumBuilder()) {
        this.lockPeriodTypeEnumBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getLockPeriodTypeEnumBuilder());
      }
      if (isValidValue(fields()[18], other.minimumActivePeriod)) {
        this.minimumActivePeriod = data().deepCopy(fields()[18].schema(), other.minimumActivePeriod);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.minimumActivePeriodForDividendsTypeEnum)) {
        this.minimumActivePeriodForDividendsTypeEnum = data().deepCopy(fields()[19].schema(), other.minimumActivePeriodForDividendsTypeEnum);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (other.hasMinimumActivePeriodForDividendsTypeEnumBuilder()) {
        this.minimumActivePeriodForDividendsTypeEnumBuilder = org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(other.getMinimumActivePeriodForDividendsTypeEnumBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing ShareProductDataV1 instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.fineract.avro.share.v1.ShareProductDataV1 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.shortName)) {
        this.shortName = data().deepCopy(fields()[2].schema(), other.shortName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.description)) {
        this.description = data().deepCopy(fields()[3].schema(), other.description);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.externalId)) {
        this.externalId = data().deepCopy(fields()[4].schema(), other.externalId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.currency)) {
        this.currency = data().deepCopy(fields()[5].schema(), other.currency);
        fieldSetFlags()[5] = true;
      }
      this.currencyBuilder = null;
      if (isValidValue(fields()[6], other.totalShares)) {
        this.totalShares = data().deepCopy(fields()[6].schema(), other.totalShares);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.totalSharesIssued)) {
        this.totalSharesIssued = data().deepCopy(fields()[7].schema(), other.totalSharesIssued);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.unitPrice)) {
        this.unitPrice = data().deepCopy(fields()[8].schema(), other.unitPrice);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.shareCapital)) {
        this.shareCapital = data().deepCopy(fields()[9].schema(), other.shareCapital);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.minimumShares)) {
        this.minimumShares = data().deepCopy(fields()[10].schema(), other.minimumShares);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.nominalShares)) {
        this.nominalShares = data().deepCopy(fields()[11].schema(), other.nominalShares);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.maximumShares)) {
        this.maximumShares = data().deepCopy(fields()[12].schema(), other.maximumShares);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.marketPrice)) {
        this.marketPrice = data().deepCopy(fields()[13].schema(), other.marketPrice);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.charges)) {
        this.charges = data().deepCopy(fields()[14].schema(), other.charges);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.allowDividendCalculationForInactiveClients)) {
        this.allowDividendCalculationForInactiveClients = data().deepCopy(fields()[15].schema(), other.allowDividendCalculationForInactiveClients);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.lockinPeriod)) {
        this.lockinPeriod = data().deepCopy(fields()[16].schema(), other.lockinPeriod);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.lockPeriodTypeEnum)) {
        this.lockPeriodTypeEnum = data().deepCopy(fields()[17].schema(), other.lockPeriodTypeEnum);
        fieldSetFlags()[17] = true;
      }
      this.lockPeriodTypeEnumBuilder = null;
      if (isValidValue(fields()[18], other.minimumActivePeriod)) {
        this.minimumActivePeriod = data().deepCopy(fields()[18].schema(), other.minimumActivePeriod);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.minimumActivePeriodForDividendsTypeEnum)) {
        this.minimumActivePeriodForDividendsTypeEnum = data().deepCopy(fields()[19].schema(), other.minimumActivePeriodForDividendsTypeEnum);
        fieldSetFlags()[19] = true;
      }
      this.minimumActivePeriodForDividendsTypeEnumBuilder = null;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder setId(java.lang.Long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder setName(java.lang.String value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'shortName' field.
      * @return The value.
      */
    public java.lang.String getShortName() {
      return shortName;
    }


    /**
      * Sets the value of the 'shortName' field.
      * @param value The value of 'shortName'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder setShortName(java.lang.String value) {
      validate(fields()[2], value);
      this.shortName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'shortName' field has been set.
      * @return True if the 'shortName' field has been set, false otherwise.
      */
    public boolean hasShortName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'shortName' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder clearShortName() {
      shortName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public java.lang.String getDescription() {
      return description;
    }


    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder setDescription(java.lang.String value) {
      validate(fields()[3], value);
      this.description = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder clearDescription() {
      description = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'externalId' field.
      * @return The value.
      */
    public java.lang.String getExternalId() {
      return externalId;
    }


    /**
      * Sets the value of the 'externalId' field.
      * @param value The value of 'externalId'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder setExternalId(java.lang.String value) {
      validate(fields()[4], value);
      this.externalId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'externalId' field has been set.
      * @return True if the 'externalId' field has been set, false otherwise.
      */
    public boolean hasExternalId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'externalId' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder clearExternalId() {
      externalId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'currency' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.CurrencyDataV1 getCurrency() {
      return currency;
    }


    /**
      * Sets the value of the 'currency' field.
      * @param value The value of 'currency'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder setCurrency(org.apache.fineract.avro.generic.v1.CurrencyDataV1 value) {
      validate(fields()[5], value);
      this.currencyBuilder = null;
      this.currency = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'currency' field has been set.
      * @return True if the 'currency' field has been set, false otherwise.
      */
    public boolean hasCurrency() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'currency' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder getCurrencyBuilder() {
      if (currencyBuilder == null) {
        if (hasCurrency()) {
          setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder(currency));
        } else {
          setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.newBuilder());
        }
      }
      return currencyBuilder;
    }

    /**
     * Sets the Builder instance for the 'currency' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder setCurrencyBuilder(org.apache.fineract.avro.generic.v1.CurrencyDataV1.Builder value) {
      clearCurrency();
      currencyBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'currency' field has an active Builder instance
     * @return True if the 'currency' field has an active Builder instance
     */
    public boolean hasCurrencyBuilder() {
      return currencyBuilder != null;
    }

    /**
      * Clears the value of the 'currency' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder clearCurrency() {
      currency = null;
      currencyBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalShares' field.
      * @return The value.
      */
    public java.lang.Long getTotalShares() {
      return totalShares;
    }


    /**
      * Sets the value of the 'totalShares' field.
      * @param value The value of 'totalShares'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder setTotalShares(java.lang.Long value) {
      validate(fields()[6], value);
      this.totalShares = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'totalShares' field has been set.
      * @return True if the 'totalShares' field has been set, false otherwise.
      */
    public boolean hasTotalShares() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'totalShares' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder clearTotalShares() {
      totalShares = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalSharesIssued' field.
      * @return The value.
      */
    public java.lang.Long getTotalSharesIssued() {
      return totalSharesIssued;
    }


    /**
      * Sets the value of the 'totalSharesIssued' field.
      * @param value The value of 'totalSharesIssued'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder setTotalSharesIssued(java.lang.Long value) {
      validate(fields()[7], value);
      this.totalSharesIssued = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'totalSharesIssued' field has been set.
      * @return True if the 'totalSharesIssued' field has been set, false otherwise.
      */
    public boolean hasTotalSharesIssued() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'totalSharesIssued' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder clearTotalSharesIssued() {
      totalSharesIssued = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'unitPrice' field.
      * @return The value.
      */
    public java.math.BigDecimal getUnitPrice() {
      return unitPrice;
    }


    /**
      * Sets the value of the 'unitPrice' field.
      * @param value The value of 'unitPrice'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder setUnitPrice(java.math.BigDecimal value) {
      validate(fields()[8], value);
      this.unitPrice = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'unitPrice' field has been set.
      * @return True if the 'unitPrice' field has been set, false otherwise.
      */
    public boolean hasUnitPrice() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'unitPrice' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder clearUnitPrice() {
      unitPrice = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'shareCapital' field.
      * @return The value.
      */
    public java.math.BigDecimal getShareCapital() {
      return shareCapital;
    }


    /**
      * Sets the value of the 'shareCapital' field.
      * @param value The value of 'shareCapital'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder setShareCapital(java.math.BigDecimal value) {
      validate(fields()[9], value);
      this.shareCapital = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'shareCapital' field has been set.
      * @return True if the 'shareCapital' field has been set, false otherwise.
      */
    public boolean hasShareCapital() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'shareCapital' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder clearShareCapital() {
      shareCapital = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'minimumShares' field.
      * @return The value.
      */
    public java.lang.Long getMinimumShares() {
      return minimumShares;
    }


    /**
      * Sets the value of the 'minimumShares' field.
      * @param value The value of 'minimumShares'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder setMinimumShares(java.lang.Long value) {
      validate(fields()[10], value);
      this.minimumShares = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'minimumShares' field has been set.
      * @return True if the 'minimumShares' field has been set, false otherwise.
      */
    public boolean hasMinimumShares() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'minimumShares' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder clearMinimumShares() {
      minimumShares = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'nominalShares' field.
      * @return The value.
      */
    public java.lang.Long getNominalShares() {
      return nominalShares;
    }


    /**
      * Sets the value of the 'nominalShares' field.
      * @param value The value of 'nominalShares'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder setNominalShares(java.lang.Long value) {
      validate(fields()[11], value);
      this.nominalShares = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'nominalShares' field has been set.
      * @return True if the 'nominalShares' field has been set, false otherwise.
      */
    public boolean hasNominalShares() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'nominalShares' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder clearNominalShares() {
      nominalShares = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'maximumShares' field.
      * @return The value.
      */
    public java.lang.Long getMaximumShares() {
      return maximumShares;
    }


    /**
      * Sets the value of the 'maximumShares' field.
      * @param value The value of 'maximumShares'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder setMaximumShares(java.lang.Long value) {
      validate(fields()[12], value);
      this.maximumShares = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'maximumShares' field has been set.
      * @return True if the 'maximumShares' field has been set, false otherwise.
      */
    public boolean hasMaximumShares() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'maximumShares' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder clearMaximumShares() {
      maximumShares = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'marketPrice' field.
      * @return The value.
      */
    public java.util.List<org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1> getMarketPrice() {
      return marketPrice;
    }


    /**
      * Sets the value of the 'marketPrice' field.
      * @param value The value of 'marketPrice'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder setMarketPrice(java.util.List<org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1> value) {
      validate(fields()[13], value);
      this.marketPrice = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'marketPrice' field has been set.
      * @return True if the 'marketPrice' field has been set, false otherwise.
      */
    public boolean hasMarketPrice() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'marketPrice' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder clearMarketPrice() {
      marketPrice = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'charges' field.
      * @return The value.
      */
    public java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1> getCharges() {
      return charges;
    }


    /**
      * Sets the value of the 'charges' field.
      * @param value The value of 'charges'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder setCharges(java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1> value) {
      validate(fields()[14], value);
      this.charges = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'charges' field has been set.
      * @return True if the 'charges' field has been set, false otherwise.
      */
    public boolean hasCharges() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'charges' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder clearCharges() {
      charges = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'allowDividendCalculationForInactiveClients' field.
      * @return The value.
      */
    public java.lang.Boolean getAllowDividendCalculationForInactiveClients() {
      return allowDividendCalculationForInactiveClients;
    }


    /**
      * Sets the value of the 'allowDividendCalculationForInactiveClients' field.
      * @param value The value of 'allowDividendCalculationForInactiveClients'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder setAllowDividendCalculationForInactiveClients(java.lang.Boolean value) {
      validate(fields()[15], value);
      this.allowDividendCalculationForInactiveClients = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'allowDividendCalculationForInactiveClients' field has been set.
      * @return True if the 'allowDividendCalculationForInactiveClients' field has been set, false otherwise.
      */
    public boolean hasAllowDividendCalculationForInactiveClients() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'allowDividendCalculationForInactiveClients' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder clearAllowDividendCalculationForInactiveClients() {
      allowDividendCalculationForInactiveClients = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'lockinPeriod' field.
      * @return The value.
      */
    public java.lang.Integer getLockinPeriod() {
      return lockinPeriod;
    }


    /**
      * Sets the value of the 'lockinPeriod' field.
      * @param value The value of 'lockinPeriod'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder setLockinPeriod(java.lang.Integer value) {
      validate(fields()[16], value);
      this.lockinPeriod = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'lockinPeriod' field has been set.
      * @return True if the 'lockinPeriod' field has been set, false otherwise.
      */
    public boolean hasLockinPeriod() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'lockinPeriod' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder clearLockinPeriod() {
      lockinPeriod = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'lockPeriodTypeEnum' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getLockPeriodTypeEnum() {
      return lockPeriodTypeEnum;
    }


    /**
      * Sets the value of the 'lockPeriodTypeEnum' field.
      * @param value The value of 'lockPeriodTypeEnum'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder setLockPeriodTypeEnum(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[17], value);
      this.lockPeriodTypeEnumBuilder = null;
      this.lockPeriodTypeEnum = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'lockPeriodTypeEnum' field has been set.
      * @return True if the 'lockPeriodTypeEnum' field has been set, false otherwise.
      */
    public boolean hasLockPeriodTypeEnum() {
      return fieldSetFlags()[17];
    }

    /**
     * Gets the Builder instance for the 'lockPeriodTypeEnum' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getLockPeriodTypeEnumBuilder() {
      if (lockPeriodTypeEnumBuilder == null) {
        if (hasLockPeriodTypeEnum()) {
          setLockPeriodTypeEnumBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(lockPeriodTypeEnum));
        } else {
          setLockPeriodTypeEnumBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return lockPeriodTypeEnumBuilder;
    }

    /**
     * Sets the Builder instance for the 'lockPeriodTypeEnum' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder setLockPeriodTypeEnumBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearLockPeriodTypeEnum();
      lockPeriodTypeEnumBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'lockPeriodTypeEnum' field has an active Builder instance
     * @return True if the 'lockPeriodTypeEnum' field has an active Builder instance
     */
    public boolean hasLockPeriodTypeEnumBuilder() {
      return lockPeriodTypeEnumBuilder != null;
    }

    /**
      * Clears the value of the 'lockPeriodTypeEnum' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder clearLockPeriodTypeEnum() {
      lockPeriodTypeEnum = null;
      lockPeriodTypeEnumBuilder = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'minimumActivePeriod' field.
      * @return The value.
      */
    public java.lang.Integer getMinimumActivePeriod() {
      return minimumActivePeriod;
    }


    /**
      * Sets the value of the 'minimumActivePeriod' field.
      * @param value The value of 'minimumActivePeriod'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder setMinimumActivePeriod(java.lang.Integer value) {
      validate(fields()[18], value);
      this.minimumActivePeriod = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'minimumActivePeriod' field has been set.
      * @return True if the 'minimumActivePeriod' field has been set, false otherwise.
      */
    public boolean hasMinimumActivePeriod() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'minimumActivePeriod' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder clearMinimumActivePeriod() {
      minimumActivePeriod = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'minimumActivePeriodForDividendsTypeEnum' field.
      * @return The value.
      */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1 getMinimumActivePeriodForDividendsTypeEnum() {
      return minimumActivePeriodForDividendsTypeEnum;
    }


    /**
      * Sets the value of the 'minimumActivePeriodForDividendsTypeEnum' field.
      * @param value The value of 'minimumActivePeriodForDividendsTypeEnum'.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder setMinimumActivePeriodForDividendsTypeEnum(org.apache.fineract.avro.generic.v1.EnumOptionDataV1 value) {
      validate(fields()[19], value);
      this.minimumActivePeriodForDividendsTypeEnumBuilder = null;
      this.minimumActivePeriodForDividendsTypeEnum = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'minimumActivePeriodForDividendsTypeEnum' field has been set.
      * @return True if the 'minimumActivePeriodForDividendsTypeEnum' field has been set, false otherwise.
      */
    public boolean hasMinimumActivePeriodForDividendsTypeEnum() {
      return fieldSetFlags()[19];
    }

    /**
     * Gets the Builder instance for the 'minimumActivePeriodForDividendsTypeEnum' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder getMinimumActivePeriodForDividendsTypeEnumBuilder() {
      if (minimumActivePeriodForDividendsTypeEnumBuilder == null) {
        if (hasMinimumActivePeriodForDividendsTypeEnum()) {
          setMinimumActivePeriodForDividendsTypeEnumBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder(minimumActivePeriodForDividendsTypeEnum));
        } else {
          setMinimumActivePeriodForDividendsTypeEnumBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.newBuilder());
        }
      }
      return minimumActivePeriodForDividendsTypeEnumBuilder;
    }

    /**
     * Sets the Builder instance for the 'minimumActivePeriodForDividendsTypeEnum' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder setMinimumActivePeriodForDividendsTypeEnumBuilder(org.apache.fineract.avro.generic.v1.EnumOptionDataV1.Builder value) {
      clearMinimumActivePeriodForDividendsTypeEnum();
      minimumActivePeriodForDividendsTypeEnumBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'minimumActivePeriodForDividendsTypeEnum' field has an active Builder instance
     * @return True if the 'minimumActivePeriodForDividendsTypeEnum' field has an active Builder instance
     */
    public boolean hasMinimumActivePeriodForDividendsTypeEnumBuilder() {
      return minimumActivePeriodForDividendsTypeEnumBuilder != null;
    }

    /**
      * Clears the value of the 'minimumActivePeriodForDividendsTypeEnum' field.
      * @return This builder.
      */
    public org.apache.fineract.avro.share.v1.ShareProductDataV1.Builder clearMinimumActivePeriodForDividendsTypeEnum() {
      minimumActivePeriodForDividendsTypeEnum = null;
      minimumActivePeriodForDividendsTypeEnumBuilder = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ShareProductDataV1 build() {
      try {
        ShareProductDataV1 record = new ShareProductDataV1();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.String) defaultValue(fields()[1]);
        record.shortName = fieldSetFlags()[2] ? this.shortName : (java.lang.String) defaultValue(fields()[2]);
        record.description = fieldSetFlags()[3] ? this.description : (java.lang.String) defaultValue(fields()[3]);
        record.externalId = fieldSetFlags()[4] ? this.externalId : (java.lang.String) defaultValue(fields()[4]);
        if (currencyBuilder != null) {
          try {
            record.currency = this.currencyBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("currency"));
            throw e;
          }
        } else {
          record.currency = fieldSetFlags()[5] ? this.currency : (org.apache.fineract.avro.generic.v1.CurrencyDataV1) defaultValue(fields()[5]);
        }
        record.totalShares = fieldSetFlags()[6] ? this.totalShares : (java.lang.Long) defaultValue(fields()[6]);
        record.totalSharesIssued = fieldSetFlags()[7] ? this.totalSharesIssued : (java.lang.Long) defaultValue(fields()[7]);
        record.unitPrice = fieldSetFlags()[8] ? this.unitPrice : (java.math.BigDecimal) defaultValue(fields()[8]);
        record.shareCapital = fieldSetFlags()[9] ? this.shareCapital : (java.math.BigDecimal) defaultValue(fields()[9]);
        record.minimumShares = fieldSetFlags()[10] ? this.minimumShares : (java.lang.Long) defaultValue(fields()[10]);
        record.nominalShares = fieldSetFlags()[11] ? this.nominalShares : (java.lang.Long) defaultValue(fields()[11]);
        record.maximumShares = fieldSetFlags()[12] ? this.maximumShares : (java.lang.Long) defaultValue(fields()[12]);
        record.marketPrice = fieldSetFlags()[13] ? this.marketPrice : (java.util.List<org.apache.fineract.avro.share.v1.ShareProductMarketPriceDataV1>) defaultValue(fields()[13]);
        record.charges = fieldSetFlags()[14] ? this.charges : (java.util.List<org.apache.fineract.avro.portfolio.v1.ChargeDataV1>) defaultValue(fields()[14]);
        record.allowDividendCalculationForInactiveClients = fieldSetFlags()[15] ? this.allowDividendCalculationForInactiveClients : (java.lang.Boolean) defaultValue(fields()[15]);
        record.lockinPeriod = fieldSetFlags()[16] ? this.lockinPeriod : (java.lang.Integer) defaultValue(fields()[16]);
        if (lockPeriodTypeEnumBuilder != null) {
          try {
            record.lockPeriodTypeEnum = this.lockPeriodTypeEnumBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("lockPeriodTypeEnum"));
            throw e;
          }
        } else {
          record.lockPeriodTypeEnum = fieldSetFlags()[17] ? this.lockPeriodTypeEnum : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[17]);
        }
        record.minimumActivePeriod = fieldSetFlags()[18] ? this.minimumActivePeriod : (java.lang.Integer) defaultValue(fields()[18]);
        if (minimumActivePeriodForDividendsTypeEnumBuilder != null) {
          try {
            record.minimumActivePeriodForDividendsTypeEnum = this.minimumActivePeriodForDividendsTypeEnumBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("minimumActivePeriodForDividendsTypeEnum"));
            throw e;
          }
        } else {
          record.minimumActivePeriodForDividendsTypeEnum = fieldSetFlags()[19] ? this.minimumActivePeriodForDividendsTypeEnum : (org.apache.fineract.avro.generic.v1.EnumOptionDataV1) defaultValue(fields()[19]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ShareProductDataV1>
    WRITER$ = (org.apache.avro.io.DatumWriter<ShareProductDataV1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ShareProductDataV1>
    READER$ = (org.apache.avro.io.DatumReader<ShareProductDataV1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










